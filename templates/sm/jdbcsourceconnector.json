{
  "template_id": "JdbcSourceConnector",
  "connector_type": "SOURCE",
  "connector.class": "io.confluent.connect.jdbc.JdbcSourceConnector",
  "name": "{{.logicalClusterId}}",
  "imports": [],
  "group_order": [
    "Database Connection Security",
    "Database",
    "Mode",
    "Connector",
    "Auto topic creation",
    "CSFLE configuration"
  ],
  "config_defs": [
    {
      "name": "connection.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 1,
      "display_name": "connection.url",
      "documentation": "JDBC connection URL.For example:jdbc:oracle:thin:@localhost:1521:orclpdb1,jdbc:mysql://localhost/db_name,jdbc:sqlserver://localhost;instance=SQLEXPRESS;databaseName=db_nameType: stringImportance: highDependents:table.whitelist,table.blacklist",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 1
      },
      "dependents": [
        "table.whitelist",
        "table.blacklist"
      ]
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 2,
      "display_name": "connection.user",
      "documentation": "JDBC connection user.Type: stringDefault: nullImportance: highConfluent strongly recommends you follow the principle of least\nprivilege when creating the database user for this connector. Permissions\nshould be tailored to specific actions on the required tables to ensure the\nconnector can only access the data, or perform the actions necessary for its\nfunction.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      },
      "default": "nullimportance: highconfluent strongly recommends you follow the principle of least"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 3,
      "display_name": "connection.password",
      "documentation": "JDBC connection password.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      },
      "default": "nullimportance: high"
    },
    {
      "name": "jdbc.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 4,
      "display_name": "jdbc.credentials.provider.class",
      "documentation": "Credentials provider to use for authentication to configure the database. By default, the connector usesDefaultJdbcCredentialsProvider. Configure the class with the fully qualified name of your\ncustom credentials provider class.Type: classDefault:io.confluent.connect.jdbc.util.DefaultJdbcCredentialsProviderValid Values: Any class implementing interface:io.confluent.connect.jdbc.util.JdbcCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      },
      "default": "io.confluent.connect.jdbc.util.defaultjdbccredentialsprovidervalid values: any class implementing interface:io.confluent.connect.jdbc.util.jdbccredentialsproviderimportance: low"
    },
    {
      "name": "connection.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 5,
      "display_name": "connection.attempts",
      "documentation": "Maximum number of attempts to retrieve a valid JDBC connection. Must be a\npositive integer.Type: intDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "connection.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 6,
      "display_name": "connection.backoff.ms",
      "documentation": "Backoff time in milliseconds between connection attempts.Type: longDefault: 10000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      },
      "default": "10000importance: low"
    },
    {
      "name": "catalog.pattern",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 7,
      "display_name": "catalog.pattern",
      "documentation": "Catalog pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the catalog.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      },
      "default": "null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "table.whitelist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 8,
      "display_name": "table.whitelist",
      "documentation": "List of tables to include in copying. If specified,table.blacklistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.whitelist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "table.blacklist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 9,
      "display_name": "table.blacklist",
      "documentation": "List of tables to exclude from copying. If specified,table.whitelistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.blacklist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "schema.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 10,
      "display_name": "schema.pattern",
      "documentation": "Schema pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the schema.Importance: highImportantIf you leave this at the default null setting, the connector may time out\nand fail because of the large amount of table metadata being received.\nMake sure to set this parameter for large databases.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      },
      "default": "null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "numeric.precision.mapping",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 11,
      "display_name": "numeric.precision.mapping",
      "documentation": "Whether or not to attempt mapping NUMERIC values by precision to integral\ntypes. This option is now deprecated. A future version may remove it\ncompletely. You should usenumeric.mappinginstead.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      },
      "default": "falseimportance: low"
    },
    {
      "name": "numeric.mapping",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 12,
      "display_name": "numeric.mapping",
      "documentation": "Map NUMERIC values by precision and optionally scale to integral or decimal\ntypes.Type: stringDefault: nullValid Values: [none, precision_only, best_fit, best_fit_eager_double]Usenoneif all NUMERIC columns are to be represented by Connect\u00e2\u0080\u0099s\nDECIMAL logical type.Usebest_fitif NUMERIC columns should be cast to Connect\u00e2\u0080\u0099s INT8,\nINT16, INT32, INT64, or FLOAT64 based upon the column\u00e2\u0080\u0099s precision and scale.This option may\nstill represent the NUMERIC value as Connect DECIMAL if it cannot be cast to a native\ntype without losing precision. For example, a NUMERIC(20) type with precision 20 would\nnot be able to fit in a native INT64 without overflowing and thus would be retained as\nDECIMAL.Usebest_fit_eager_doubleif, in addition to the properties ofbest_fitdescribed\nabove, it is desirable to always cast NUMERIC columns with scale to Connect FLOAT64 type,\ndespite potential of loss in accuracy.Useprecision_onlyto map NUMERIC columns based only on the column\u00e2\u0080\u0099s\nprecision assuming that column\u00e2\u0080\u0099s scale is 0.Thenoneoption is the default, but may lead to serialization issues\nwith Avro since Connect\u00e2\u0080\u0099s DECIMAL type is mapped to its binary\nrepresentation.best_fitis often preferred since it maps to the most\nappropriate primitive type.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      },
      "default": "nullvalid values: [none, precision_only, best_fit, best_fit_eager_double]usenoneif all numeric columns are to be represented by connect\u00e2\u0080\u0099s",
      "valid_values": [
        "none",
        "precision_only",
        "best_fit",
        "best_fit_eager_double"
      ]
    },
    {
      "name": "dialect.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 13,
      "display_name": "dialect.name",
      "documentation": "The name of the database dialect that should be used for this connector. By\ndefault this is empty, and the connector automatically determines the dialect\nbased upon the JDBC connection URL. Use this if you want to override that\nbehavior and use a specific dialect. All properly-packaged dialects in the\nJDBC connector plugin can be used.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [,Db2DatabaseDialect,MySqlDatabaseDialect,SybaseDatabaseDialect,GenericDatabaseDialect,OracleDatabaseDialect,SqlServerDatabaseDialect,PostgreSqlDatabaseDialect,SqliteDatabaseDialect,DerbyDatabaseDialect,SapHanaDatabaseDialect,MockDatabaseDialect,VerticaDatabaseDialect]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [,db2databasedialect,mysqldatabasedialect,sybasedatabasedialect,genericdatabasedialect,oracledatabasedialect,sqlserverdatabasedialect,postgresqldatabasedialect,sqlitedatabasedialect,derbydatabasedialect,saphanadatabasedialect,mockdatabasedialect,verticadatabasedialect]importance: low",
      "valid_values": [
        "",
        "db2databasedialect",
        "mysqldatabasedialect",
        "sybasedatabasedialect",
        "genericdatabasedialect",
        "oracledatabasedialect",
        "sqlserverdatabasedialect",
        "postgresqldatabasedialect",
        "sqlitedatabasedialect",
        "derbydatabasedialect",
        "saphanadatabasedialect",
        "mockdatabasedialect",
        "verticadatabasedialect"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 14,
      "display_name": "mode",
      "documentation": "The mode for updating a table each time it is polled. Options include:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect\nonly new rows. Note that this will not detect modifications or deletions of\nexisting rows.timestamp: use a timestamp (or timestamp-like) column to detect new and\nmodified rows. This assumes the column is updated with each write, and that\nvalues are monotonically incrementing, but not necessarily unique.timestamp+incrementing: use two columns, a timestamp column that detects\nnew and modified rows and a strictly incrementing column which provides a\nglobally unique ID for updates so each row can be assigned a unique stream\noffset.Importance: highDependents:incrementing.column.name,timestamp.column.name,validate.non.null",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect",
      "valid_values": [
        "",
        "bulk",
        "timestamp",
        "incrementing",
        "timestamp+incrementing"
      ],
      "dependents": [
        "incrementing.column.name",
        "timestamp.column.name",
        "validate.non.null"
      ]
    },
    {
      "name": "incrementing.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 15,
      "display_name": "incrementing.column.name",
      "documentation": "The name of the strictly incrementing column to use to detect new rows. Any\nempty value indicates the column should be autodetected by looking for an\nauto-incrementing column. This column may not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 16,
      "display_name": "timestamp.column.name",
      "documentation": "Comma-separated list of one or more timestamp columns to detect new or\nmodified rows using the COALESCE SQL function. Rows whose first non-null\ntimestamp value is greater than the largest previous timestamp value seen will\nbe discovered with each poll. At least one column should not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.initial",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 17,
      "display_name": "timestamp.initial",
      "documentation": "The epoch timestamp (in milliseconds) used for initial queries that use\ntimestamp criteria. Use -1 to use the current time. If not specified, all data\nwill be retrieved.Type: longDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      },
      "default": "nullimportance: low"
    },
    {
      "name": "validate.non.null",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 18,
      "display_name": "validate.non.null",
      "documentation": "By default, the JDBC connector will validate that all incrementing and\ntimestamp tables have NOT NULL set for the columns being used as their\nID/timestamp. If the tables don\u00e2\u0080\u0099t, JDBC connector will fail to start. Setting\nthis to false will disable these checks.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      },
      "default": "trueimportance: low"
    },
    {
      "name": "query",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 19,
      "display_name": "query",
      "documentation": "If specified,querycan select new or updated rows. Use this\nsetting if you want to join tables, select subsets of columns in a table, or\nfilter data. If used, the connector copies data using this query and\nwhole-table copying is disabled.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumTipYou can usequerywith a WHERE clause if you enablemode=bulk.\nThis loads all rows from a table at each iteration. To specify a WHERE\nclause inother query modes, it must be\npossible to append a WHERE clause to the query. SeeSpecifying a WHERE clause with query modesfor a detailed explanation.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumtipyou can usequerywith a where clause if you enablemode=bulk."
    },
    {
      "name": "quote.sql.identifiers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 20,
      "display_name": "quote.sql.identifiers",
      "documentation": "When to quote table names, column names, and other identifiers in SQL\nstatements. For backward compatibility, the default isalways.Type: stringDefault: alwaysImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      },
      "default": "alwaysimportance: medium"
    },
    {
      "name": "query.suffix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 21,
      "display_name": "query.suffix",
      "documentation": "Suffix to append at the end of the generated query.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "query.retry.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 22,
      "display_name": "query.retry.attempts",
      "documentation": "The number of times to retry SQL exceptions encountered when executing queries.Type: intDefault: -1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 22
      },
      "default": "-1importance: low"
    },
    {
      "name": "transaction.isolation.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 23,
      "display_name": "transaction.isolation.mode",
      "documentation": "The mode to control which transaction isolation level is used when running queries\nagainst the database. By default, no explicit transaction isolation mode is\nset.SQL_SERVER_SNAPSHOTwill only work against a connector configured to\nwrite to SQL Server. Options include:DEFAULT,READ_UNCOMMITTED,READ_COMMITTED,REPEATABLE_READ,SERIALIZABLE, andSQL_SERVER_SNAPSHOT.Type: stringDefault: DEFAULTValid Values: [DEFAULT,READ_UNCOMMITED,READ_COMMITED,REPEATABLE_READ,SERIALIZABLE,SQL_SERVER_SNAPSHOT]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 23
      },
      "default": "defaultvalid values: [default,read_uncommited,read_commited,repeatable_read,serializable,sql_server_snapshot]importance: low",
      "valid_values": [
        "default",
        "read_uncommited",
        "read_commited",
        "repeatable_read",
        "serializable",
        "sql_server_snapshot"
      ]
    },
    {
      "name": "table.types",
      "type": "LIST",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 24,
      "display_name": "table.types",
      "documentation": "By default, the JDBC connector will only detect tables with type TABLE from\nthe source Database. This config allows a comma-separated list of table\ntypes to extract.Type: list.TABLEVIEWSYSTEM TABLEGLOBAL TEMPORARYLOCAL TEMPORARYALIASSYNONYMIn most cases it only makes sense to have either TABLE or VIEW.Default: TABLEImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 24
      },
      "default": "tableimportance: low"
    },
    {
      "name": "poll.interval.ms",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 25,
      "display_name": "poll.interval.ms",
      "documentation": "Frequency in ms to poll for new data in each table.Type: intDefault: 5000Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 25
      },
      "default": "5000importance: high"
    },
    {
      "name": "batch.max.rows",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 26,
      "display_name": "batch.max.rows",
      "documentation": "Maximum number of rows to include in a single batch when polling for new data.\nThis setting can be used to limit the amount of data buffered internally in\nthe connector.Type: intDefault: 100Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 26
      },
      "default": "100importance: low"
    },
    {
      "name": "table.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 27,
      "display_name": "table.poll.interval.ms",
      "documentation": "Frequency in ms to poll for new or removed tables, which may result in updated\ntask configurations to start polling for data in added tables or stop polling\nfor data in removed tables.Type: longDefault: 60000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 27
      },
      "default": "60000importance: low"
    },
    {
      "name": "topic.prefix",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 28,
      "display_name": "topic.prefix",
      "documentation": "Prefix to prepend to table names to generate the name of the Apache Kafka\u00c2\u00ae topic to\npublish data to, or in the case of a custom query, the full name of the topic\nto publish to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 28
      }
    },
    {
      "name": "timestamp.delay.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 29,
      "display_name": "timestamp.delay.interval.ms",
      "documentation": "After a row with a certain timestamp appears, this is the amount of time the connector waits to\ninclude it in the result. You can add a delay to allow transactions with an\nearlier timestamp to complete. The first execution fetches all available\nrecords (starting at timestamp 0) until the current time minus the delay. Each\nsubsequent execution retrieves data from the last time you fetched until the\ncurrent time minus the delay.Type: longDefault: 0Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 29
      },
      "default": "0importance: high"
    },
    {
      "name": "db.timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 30,
      "display_name": "db.timezone",
      "documentation": "The name of the JDBC timezone used in the connector when querying with\ntime-based criteria. This should be the timezone of the database as well as\nall the columns being queried. The value set indb.timezonewill also be\nused for timestamp columns while pushing the records to Kafka. Defaults to UTC.Type: stringDefault: UTCValid Values: Any valid JDK time zoneImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 30
      },
      "default": "utcvalid values: any valid jdk time zoneimportance: medium"
    },
    {
      "name": "timestamp.granularity",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 31,
      "display_name": "timestamp.granularity",
      "documentation": "Define the granularity of the Timestamp column. Options include:Type: stringDefault: connect_logicalValid Values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using Kafka Connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSS\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSSSSS\u00e2\u0080\u0099Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 31
      },
      "default": "connect_logicalvalid values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using kafka connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.ssssss\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.sssssssss\u00e2\u0080\u0099importance: low",
      "valid_values": [
        "connect_logical",
        "nanos_long",
        "nanos_string",
        "nanos_iso_datetime_string"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 32,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 32
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 33,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 33
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 34,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 34
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 35,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 35
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 36,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 36
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 37,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 37
      },
      "default": "kafka broker value"
    },
    {
      "name": "connection.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 38,
      "display_name": "connection.url",
      "documentation": "JDBC connection URL.For example:jdbc:oracle:thin:@localhost:1521:orclpdb1,jdbc:mysql://localhost/db_name,jdbc:sqlserver://localhost;instance=SQLEXPRESS;databaseName=db_nameType: stringImportance: highDependents:table.whitelist,table.blacklist",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 38
      },
      "dependents": [
        "table.whitelist",
        "table.blacklist"
      ]
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 39,
      "display_name": "connection.user",
      "documentation": "JDBC connection user.Type: stringDefault: nullImportance: highConfluent strongly recommends you follow the principle of least\nprivilege when creating the database user for this connector. Permissions\nshould be tailored to specific actions on the required tables to ensure the\nconnector can only access the data, or perform the actions necessary for its\nfunction.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 39
      },
      "default": "nullimportance: highconfluent strongly recommends you follow the principle of least"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 40,
      "display_name": "connection.password",
      "documentation": "JDBC connection password.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 40
      },
      "default": "nullimportance: high"
    },
    {
      "name": "jdbc.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 41,
      "display_name": "jdbc.credentials.provider.class",
      "documentation": "Credentials provider to use for authentication to configure the database. By default, the connector usesDefaultJdbcCredentialsProvider. Configure the class with the fully qualified name of your\ncustom credentials provider class.Type: classDefault:io.confluent.connect.jdbc.util.DefaultJdbcCredentialsProviderValid Values: Any class implementing interface:io.confluent.connect.jdbc.util.JdbcCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 41
      },
      "default": "io.confluent.connect.jdbc.util.defaultjdbccredentialsprovidervalid values: any class implementing interface:io.confluent.connect.jdbc.util.jdbccredentialsproviderimportance: low"
    },
    {
      "name": "connection.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 42,
      "display_name": "connection.attempts",
      "documentation": "Maximum number of attempts to retrieve a valid JDBC connection. Must be a\npositive integer.Type: intDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 42
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "connection.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 43,
      "display_name": "connection.backoff.ms",
      "documentation": "Backoff time in milliseconds between connection attempts.Type: longDefault: 10000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 43
      },
      "default": "10000importance: low"
    },
    {
      "name": "catalog.pattern",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 44,
      "display_name": "catalog.pattern",
      "documentation": "Catalog pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the catalog.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 44
      },
      "default": "null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "table.whitelist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 45,
      "display_name": "table.whitelist",
      "documentation": "List of tables to include in copying. If specified,table.blacklistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.whitelist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 45
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "table.blacklist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 46,
      "display_name": "table.blacklist",
      "documentation": "List of tables to exclude from copying. If specified,table.whitelistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.blacklist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 46
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "schema.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 47,
      "display_name": "schema.pattern",
      "documentation": "Schema pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the schema.Importance: highImportantIf you leave this at the default null setting, the connector may time out\nand fail because of the large amount of table metadata being received.\nMake sure to set this parameter for large databases.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 47
      },
      "default": "null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "numeric.precision.mapping",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 48,
      "display_name": "numeric.precision.mapping",
      "documentation": "Whether or not to attempt mapping NUMERIC values by precision to integral\ntypes. This option is now deprecated. A future version may remove it\ncompletely. You should usenumeric.mappinginstead.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 48
      },
      "default": "falseimportance: low"
    },
    {
      "name": "numeric.mapping",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 49,
      "display_name": "numeric.mapping",
      "documentation": "Map NUMERIC values by precision and optionally scale to integral or decimal\ntypes.Type: stringDefault: nullValid Values: [none, precision_only, best_fit, best_fit_eager_double]Usenoneif all NUMERIC columns are to be represented by Connect\u00e2\u0080\u0099s\nDECIMAL logical type.Usebest_fitif NUMERIC columns should be cast to Connect\u00e2\u0080\u0099s INT8,\nINT16, INT32, INT64, or FLOAT64 based upon the column\u00e2\u0080\u0099s precision and scale.This option may\nstill represent the NUMERIC value as Connect DECIMAL if it cannot be cast to a native\ntype without losing precision. For example, a NUMERIC(20) type with precision 20 would\nnot be able to fit in a native INT64 without overflowing and thus would be retained as\nDECIMAL.Usebest_fit_eager_doubleif, in addition to the properties ofbest_fitdescribed\nabove, it is desirable to always cast NUMERIC columns with scale to Connect FLOAT64 type,\ndespite potential of loss in accuracy.Useprecision_onlyto map NUMERIC columns based only on the column\u00e2\u0080\u0099s\nprecision assuming that column\u00e2\u0080\u0099s scale is 0.Thenoneoption is the default, but may lead to serialization issues\nwith Avro since Connect\u00e2\u0080\u0099s DECIMAL type is mapped to its binary\nrepresentation.best_fitis often preferred since it maps to the most\nappropriate primitive type.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 49
      },
      "default": "nullvalid values: [none, precision_only, best_fit, best_fit_eager_double]usenoneif all numeric columns are to be represented by connect\u00e2\u0080\u0099s",
      "valid_values": [
        "none",
        "precision_only",
        "best_fit",
        "best_fit_eager_double"
      ]
    },
    {
      "name": "dialect.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 50,
      "display_name": "dialect.name",
      "documentation": "The name of the database dialect that should be used for this connector. By\ndefault this is empty, and the connector automatically determines the dialect\nbased upon the JDBC connection URL. Use this if you want to override that\nbehavior and use a specific dialect. All properly-packaged dialects in the\nJDBC connector plugin can be used.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [,Db2DatabaseDialect,MySqlDatabaseDialect,SybaseDatabaseDialect,GenericDatabaseDialect,OracleDatabaseDialect,SqlServerDatabaseDialect,PostgreSqlDatabaseDialect,SqliteDatabaseDialect,DerbyDatabaseDialect,SapHanaDatabaseDialect,MockDatabaseDialect,VerticaDatabaseDialect]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 50
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [,db2databasedialect,mysqldatabasedialect,sybasedatabasedialect,genericdatabasedialect,oracledatabasedialect,sqlserverdatabasedialect,postgresqldatabasedialect,sqlitedatabasedialect,derbydatabasedialect,saphanadatabasedialect,mockdatabasedialect,verticadatabasedialect]importance: low",
      "valid_values": [
        "",
        "db2databasedialect",
        "mysqldatabasedialect",
        "sybasedatabasedialect",
        "genericdatabasedialect",
        "oracledatabasedialect",
        "sqlserverdatabasedialect",
        "postgresqldatabasedialect",
        "sqlitedatabasedialect",
        "derbydatabasedialect",
        "saphanadatabasedialect",
        "mockdatabasedialect",
        "verticadatabasedialect"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 51,
      "display_name": "mode",
      "documentation": "The mode for updating a table each time it is polled. Options include:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect\nonly new rows. Note that this will not detect modifications or deletions of\nexisting rows.timestamp: use a timestamp (or timestamp-like) column to detect new and\nmodified rows. This assumes the column is updated with each write, and that\nvalues are monotonically incrementing, but not necessarily unique.timestamp+incrementing: use two columns, a timestamp column that detects\nnew and modified rows and a strictly incrementing column which provides a\nglobally unique ID for updates so each row can be assigned a unique stream\noffset.Importance: highDependents:incrementing.column.name,timestamp.column.name,validate.non.null",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 51
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect",
      "valid_values": [
        "",
        "bulk",
        "timestamp",
        "incrementing",
        "timestamp+incrementing"
      ],
      "dependents": [
        "incrementing.column.name",
        "timestamp.column.name",
        "validate.non.null"
      ]
    },
    {
      "name": "incrementing.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 52,
      "display_name": "incrementing.column.name",
      "documentation": "The name of the strictly incrementing column to use to detect new rows. Any\nempty value indicates the column should be autodetected by looking for an\nauto-incrementing column. This column may not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 52
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 53,
      "display_name": "timestamp.column.name",
      "documentation": "Comma-separated list of one or more timestamp columns to detect new or\nmodified rows using the COALESCE SQL function. Rows whose first non-null\ntimestamp value is greater than the largest previous timestamp value seen will\nbe discovered with each poll. At least one column should not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 53
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.initial",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 54,
      "display_name": "timestamp.initial",
      "documentation": "The epoch timestamp (in milliseconds) used for initial queries that use\ntimestamp criteria. Use -1 to use the current time. If not specified, all data\nwill be retrieved.Type: longDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 54
      },
      "default": "nullimportance: low"
    },
    {
      "name": "validate.non.null",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 55,
      "display_name": "validate.non.null",
      "documentation": "By default, the JDBC connector will validate that all incrementing and\ntimestamp tables have NOT NULL set for the columns being used as their\nID/timestamp. If the tables don\u00e2\u0080\u0099t, JDBC connector will fail to start. Setting\nthis to false will disable these checks.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 55
      },
      "default": "trueimportance: low"
    },
    {
      "name": "query",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 56,
      "display_name": "query",
      "documentation": "If specified,querycan select new or updated rows. Use this\nsetting if you want to join tables, select subsets of columns in a table, or\nfilter data. If used, the connector copies data using this query and\nwhole-table copying is disabled.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumTipYou can usequerywith a WHERE clause if you enablemode=bulk.\nThis loads all rows from a table at each iteration. To specify a WHERE\nclause inother query modes, it must be\npossible to append a WHERE clause to the query. SeeSpecifying a WHERE clause with query modesfor a detailed explanation.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 56
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumtipyou can usequerywith a where clause if you enablemode=bulk."
    },
    {
      "name": "quote.sql.identifiers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 57,
      "display_name": "quote.sql.identifiers",
      "documentation": "When to quote table names, column names, and other identifiers in SQL\nstatements. For backward compatibility, the default isalways.Type: stringDefault: alwaysImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 57
      },
      "default": "alwaysimportance: medium"
    },
    {
      "name": "query.suffix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 58,
      "display_name": "query.suffix",
      "documentation": "Suffix to append at the end of the generated query.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 58
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "query.retry.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 59,
      "display_name": "query.retry.attempts",
      "documentation": "The number of times to retry SQL exceptions encountered when executing queries.Type: intDefault: -1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 59
      },
      "default": "-1importance: low"
    },
    {
      "name": "transaction.isolation.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 60,
      "display_name": "transaction.isolation.mode",
      "documentation": "The mode to control which transaction isolation level is used when running queries\nagainst the database. By default, no explicit transaction isolation mode is\nset.SQL_SERVER_SNAPSHOTwill only work against a connector configured to\nwrite to SQL Server. Options include:DEFAULT,READ_UNCOMMITTED,READ_COMMITTED,REPEATABLE_READ,SERIALIZABLE, andSQL_SERVER_SNAPSHOT.Type: stringDefault: DEFAULTValid Values: [DEFAULT,READ_UNCOMMITED,READ_COMMITED,REPEATABLE_READ,SERIALIZABLE,SQL_SERVER_SNAPSHOT]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 60
      },
      "default": "defaultvalid values: [default,read_uncommited,read_commited,repeatable_read,serializable,sql_server_snapshot]importance: low",
      "valid_values": [
        "default",
        "read_uncommited",
        "read_commited",
        "repeatable_read",
        "serializable",
        "sql_server_snapshot"
      ]
    },
    {
      "name": "table.types",
      "type": "LIST",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 61,
      "display_name": "table.types",
      "documentation": "By default, the JDBC connector will only detect tables with type TABLE from\nthe source Database. This config allows a comma-separated list of table\ntypes to extract.Type: list.TABLEVIEWSYSTEM TABLEGLOBAL TEMPORARYLOCAL TEMPORARYALIASSYNONYMIn most cases it only makes sense to have either TABLE or VIEW.Default: TABLEImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 61
      },
      "default": "tableimportance: low"
    },
    {
      "name": "poll.interval.ms",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 62,
      "display_name": "poll.interval.ms",
      "documentation": "Frequency in ms to poll for new data in each table.Type: intDefault: 5000Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 62
      },
      "default": "5000importance: high"
    },
    {
      "name": "batch.max.rows",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 63,
      "display_name": "batch.max.rows",
      "documentation": "Maximum number of rows to include in a single batch when polling for new data.\nThis setting can be used to limit the amount of data buffered internally in\nthe connector.Type: intDefault: 100Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 63
      },
      "default": "100importance: low"
    },
    {
      "name": "table.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 64,
      "display_name": "table.poll.interval.ms",
      "documentation": "Frequency in ms to poll for new or removed tables, which may result in updated\ntask configurations to start polling for data in added tables or stop polling\nfor data in removed tables.Type: longDefault: 60000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 64
      },
      "default": "60000importance: low"
    },
    {
      "name": "topic.prefix",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 65,
      "display_name": "topic.prefix",
      "documentation": "Prefix to prepend to table names to generate the name of the Apache Kafka\u00c2\u00ae topic to\npublish data to, or in the case of a custom query, the full name of the topic\nto publish to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 65
      }
    },
    {
      "name": "timestamp.delay.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 66,
      "display_name": "timestamp.delay.interval.ms",
      "documentation": "After a row with a certain timestamp appears, this is the amount of time the connector waits to\ninclude it in the result. You can add a delay to allow transactions with an\nearlier timestamp to complete. The first execution fetches all available\nrecords (starting at timestamp 0) until the current time minus the delay. Each\nsubsequent execution retrieves data from the last time you fetched until the\ncurrent time minus the delay.Type: longDefault: 0Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 66
      },
      "default": "0importance: high"
    },
    {
      "name": "db.timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 67,
      "display_name": "db.timezone",
      "documentation": "The name of the JDBC timezone used in the connector when querying with\ntime-based criteria. This should be the timezone of the database as well as\nall the columns being queried. The value set indb.timezonewill also be\nused for timestamp columns while pushing the records to Kafka. Defaults to UTC.Type: stringDefault: UTCValid Values: Any valid JDK time zoneImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 67
      },
      "default": "utcvalid values: any valid jdk time zoneimportance: medium"
    },
    {
      "name": "timestamp.granularity",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 68,
      "display_name": "timestamp.granularity",
      "documentation": "Define the granularity of the Timestamp column. Options include:Type: stringDefault: connect_logicalValid Values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using Kafka Connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSS\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSSSSS\u00e2\u0080\u0099Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 68
      },
      "default": "connect_logicalvalid values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using kafka connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.ssssss\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.sssssssss\u00e2\u0080\u0099importance: low",
      "valid_values": [
        "connect_logical",
        "nanos_long",
        "nanos_string",
        "nanos_iso_datetime_string"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 69,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 69
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 70,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 70
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 71,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 71
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 72,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 72
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 73,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 73
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 74,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 74
      },
      "default": "kafka broker value"
    },
    {
      "name": "connection.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 75,
      "display_name": "connection.url",
      "documentation": "JDBC connection URL.For example:jdbc:oracle:thin:@localhost:1521:orclpdb1,jdbc:mysql://localhost/db_name,jdbc:sqlserver://localhost;instance=SQLEXPRESS;databaseName=db_nameType: stringImportance: highDependents:table.whitelist,table.blacklist",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 75
      },
      "dependents": [
        "table.whitelist",
        "table.blacklist"
      ]
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 76,
      "display_name": "connection.user",
      "documentation": "JDBC connection user.Type: stringDefault: nullImportance: highConfluent strongly recommends you follow the principle of least\nprivilege when creating the database user for this connector. Permissions\nshould be tailored to specific actions on the required tables to ensure the\nconnector can only access the data, or perform the actions necessary for its\nfunction.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 76
      },
      "default": "nullimportance: highconfluent strongly recommends you follow the principle of least"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 77,
      "display_name": "connection.password",
      "documentation": "JDBC connection password.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 77
      },
      "default": "nullimportance: high"
    },
    {
      "name": "jdbc.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 78,
      "display_name": "jdbc.credentials.provider.class",
      "documentation": "Credentials provider to use for authentication to configure the database. By default, the connector usesDefaultJdbcCredentialsProvider. Configure the class with the fully qualified name of your\ncustom credentials provider class.Type: classDefault:io.confluent.connect.jdbc.util.DefaultJdbcCredentialsProviderValid Values: Any class implementing interface:io.confluent.connect.jdbc.util.JdbcCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 78
      },
      "default": "io.confluent.connect.jdbc.util.defaultjdbccredentialsprovidervalid values: any class implementing interface:io.confluent.connect.jdbc.util.jdbccredentialsproviderimportance: low"
    },
    {
      "name": "connection.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 79,
      "display_name": "connection.attempts",
      "documentation": "Maximum number of attempts to retrieve a valid JDBC connection. Must be a\npositive integer.Type: intDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 79
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "connection.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 80,
      "display_name": "connection.backoff.ms",
      "documentation": "Backoff time in milliseconds between connection attempts.Type: longDefault: 10000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 80
      },
      "default": "10000importance: low"
    },
    {
      "name": "catalog.pattern",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 81,
      "display_name": "catalog.pattern",
      "documentation": "Catalog pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the catalog.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 81
      },
      "default": "null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "table.whitelist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 82,
      "display_name": "table.whitelist",
      "documentation": "List of tables to include in copying. If specified,table.blacklistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.whitelist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 82
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "table.blacklist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 83,
      "display_name": "table.blacklist",
      "documentation": "List of tables to exclude from copying. If specified,table.whitelistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.blacklist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 83
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "schema.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 84,
      "display_name": "schema.pattern",
      "documentation": "Schema pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the schema.Importance: highImportantIf you leave this at the default null setting, the connector may time out\nand fail because of the large amount of table metadata being received.\nMake sure to set this parameter for large databases.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 84
      },
      "default": "null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "numeric.precision.mapping",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 85,
      "display_name": "numeric.precision.mapping",
      "documentation": "Whether or not to attempt mapping NUMERIC values by precision to integral\ntypes. This option is now deprecated. A future version may remove it\ncompletely. You should usenumeric.mappinginstead.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 85
      },
      "default": "falseimportance: low"
    },
    {
      "name": "numeric.mapping",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 86,
      "display_name": "numeric.mapping",
      "documentation": "Map NUMERIC values by precision and optionally scale to integral or decimal\ntypes.Type: stringDefault: nullValid Values: [none, precision_only, best_fit, best_fit_eager_double]Usenoneif all NUMERIC columns are to be represented by Connect\u00e2\u0080\u0099s\nDECIMAL logical type.Usebest_fitif NUMERIC columns should be cast to Connect\u00e2\u0080\u0099s INT8,\nINT16, INT32, INT64, or FLOAT64 based upon the column\u00e2\u0080\u0099s precision and scale.This option may\nstill represent the NUMERIC value as Connect DECIMAL if it cannot be cast to a native\ntype without losing precision. For example, a NUMERIC(20) type with precision 20 would\nnot be able to fit in a native INT64 without overflowing and thus would be retained as\nDECIMAL.Usebest_fit_eager_doubleif, in addition to the properties ofbest_fitdescribed\nabove, it is desirable to always cast NUMERIC columns with scale to Connect FLOAT64 type,\ndespite potential of loss in accuracy.Useprecision_onlyto map NUMERIC columns based only on the column\u00e2\u0080\u0099s\nprecision assuming that column\u00e2\u0080\u0099s scale is 0.Thenoneoption is the default, but may lead to serialization issues\nwith Avro since Connect\u00e2\u0080\u0099s DECIMAL type is mapped to its binary\nrepresentation.best_fitis often preferred since it maps to the most\nappropriate primitive type.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 86
      },
      "default": "nullvalid values: [none, precision_only, best_fit, best_fit_eager_double]usenoneif all numeric columns are to be represented by connect\u00e2\u0080\u0099s",
      "valid_values": [
        "none",
        "precision_only",
        "best_fit",
        "best_fit_eager_double"
      ]
    },
    {
      "name": "dialect.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 87,
      "display_name": "dialect.name",
      "documentation": "The name of the database dialect that should be used for this connector. By\ndefault this is empty, and the connector automatically determines the dialect\nbased upon the JDBC connection URL. Use this if you want to override that\nbehavior and use a specific dialect. All properly-packaged dialects in the\nJDBC connector plugin can be used.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [,Db2DatabaseDialect,MySqlDatabaseDialect,SybaseDatabaseDialect,GenericDatabaseDialect,OracleDatabaseDialect,SqlServerDatabaseDialect,PostgreSqlDatabaseDialect,SqliteDatabaseDialect,DerbyDatabaseDialect,SapHanaDatabaseDialect,MockDatabaseDialect,VerticaDatabaseDialect]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 87
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [,db2databasedialect,mysqldatabasedialect,sybasedatabasedialect,genericdatabasedialect,oracledatabasedialect,sqlserverdatabasedialect,postgresqldatabasedialect,sqlitedatabasedialect,derbydatabasedialect,saphanadatabasedialect,mockdatabasedialect,verticadatabasedialect]importance: low",
      "valid_values": [
        "",
        "db2databasedialect",
        "mysqldatabasedialect",
        "sybasedatabasedialect",
        "genericdatabasedialect",
        "oracledatabasedialect",
        "sqlserverdatabasedialect",
        "postgresqldatabasedialect",
        "sqlitedatabasedialect",
        "derbydatabasedialect",
        "saphanadatabasedialect",
        "mockdatabasedialect",
        "verticadatabasedialect"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 88,
      "display_name": "mode",
      "documentation": "The mode for updating a table each time it is polled. Options include:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect\nonly new rows. Note that this will not detect modifications or deletions of\nexisting rows.timestamp: use a timestamp (or timestamp-like) column to detect new and\nmodified rows. This assumes the column is updated with each write, and that\nvalues are monotonically incrementing, but not necessarily unique.timestamp+incrementing: use two columns, a timestamp column that detects\nnew and modified rows and a strictly incrementing column which provides a\nglobally unique ID for updates so each row can be assigned a unique stream\noffset.Importance: highDependents:incrementing.column.name,timestamp.column.name,validate.non.null",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 88
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect",
      "valid_values": [
        "",
        "bulk",
        "timestamp",
        "incrementing",
        "timestamp+incrementing"
      ],
      "dependents": [
        "incrementing.column.name",
        "timestamp.column.name",
        "validate.non.null"
      ]
    },
    {
      "name": "incrementing.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 89,
      "display_name": "incrementing.column.name",
      "documentation": "The name of the strictly incrementing column to use to detect new rows. Any\nempty value indicates the column should be autodetected by looking for an\nauto-incrementing column. This column may not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 89
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 90,
      "display_name": "timestamp.column.name",
      "documentation": "Comma-separated list of one or more timestamp columns to detect new or\nmodified rows using the COALESCE SQL function. Rows whose first non-null\ntimestamp value is greater than the largest previous timestamp value seen will\nbe discovered with each poll. At least one column should not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 90
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.initial",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 91,
      "display_name": "timestamp.initial",
      "documentation": "The epoch timestamp (in milliseconds) used for initial queries that use\ntimestamp criteria. Use -1 to use the current time. If not specified, all data\nwill be retrieved.Type: longDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 91
      },
      "default": "nullimportance: low"
    },
    {
      "name": "validate.non.null",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 92,
      "display_name": "validate.non.null",
      "documentation": "By default, the JDBC connector will validate that all incrementing and\ntimestamp tables have NOT NULL set for the columns being used as their\nID/timestamp. If the tables don\u00e2\u0080\u0099t, JDBC connector will fail to start. Setting\nthis to false will disable these checks.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 92
      },
      "default": "trueimportance: low"
    },
    {
      "name": "query",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 93,
      "display_name": "query",
      "documentation": "If specified,querycan select new or updated rows. Use this\nsetting if you want to join tables, select subsets of columns in a table, or\nfilter data. If used, the connector copies data using this query and\nwhole-table copying is disabled.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumTipYou can usequerywith a WHERE clause if you enablemode=bulk.\nThis loads all rows from a table at each iteration. To specify a WHERE\nclause inother query modes, it must be\npossible to append a WHERE clause to the query. SeeSpecifying a WHERE clause with query modesfor a detailed explanation.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 93
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumtipyou can usequerywith a where clause if you enablemode=bulk."
    },
    {
      "name": "quote.sql.identifiers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 94,
      "display_name": "quote.sql.identifiers",
      "documentation": "When to quote table names, column names, and other identifiers in SQL\nstatements. For backward compatibility, the default isalways.Type: stringDefault: alwaysImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 94
      },
      "default": "alwaysimportance: medium"
    },
    {
      "name": "query.suffix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 95,
      "display_name": "query.suffix",
      "documentation": "Suffix to append at the end of the generated query.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 95
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "query.retry.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 96,
      "display_name": "query.retry.attempts",
      "documentation": "The number of times to retry SQL exceptions encountered when executing queries.Type: intDefault: -1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 96
      },
      "default": "-1importance: low"
    },
    {
      "name": "transaction.isolation.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 97,
      "display_name": "transaction.isolation.mode",
      "documentation": "The mode to control which transaction isolation level is used when running queries\nagainst the database. By default, no explicit transaction isolation mode is\nset.SQL_SERVER_SNAPSHOTwill only work against a connector configured to\nwrite to SQL Server. Options include:DEFAULT,READ_UNCOMMITTED,READ_COMMITTED,REPEATABLE_READ,SERIALIZABLE, andSQL_SERVER_SNAPSHOT.Type: stringDefault: DEFAULTValid Values: [DEFAULT,READ_UNCOMMITED,READ_COMMITED,REPEATABLE_READ,SERIALIZABLE,SQL_SERVER_SNAPSHOT]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 97
      },
      "default": "defaultvalid values: [default,read_uncommited,read_commited,repeatable_read,serializable,sql_server_snapshot]importance: low",
      "valid_values": [
        "default",
        "read_uncommited",
        "read_commited",
        "repeatable_read",
        "serializable",
        "sql_server_snapshot"
      ]
    },
    {
      "name": "table.types",
      "type": "LIST",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 98,
      "display_name": "table.types",
      "documentation": "By default, the JDBC connector will only detect tables with type TABLE from\nthe source Database. This config allows a comma-separated list of table\ntypes to extract.Type: list.TABLEVIEWSYSTEM TABLEGLOBAL TEMPORARYLOCAL TEMPORARYALIASSYNONYMIn most cases it only makes sense to have either TABLE or VIEW.Default: TABLEImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 98
      },
      "default": "tableimportance: low"
    },
    {
      "name": "poll.interval.ms",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 99,
      "display_name": "poll.interval.ms",
      "documentation": "Frequency in ms to poll for new data in each table.Type: intDefault: 5000Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 99
      },
      "default": "5000importance: high"
    },
    {
      "name": "batch.max.rows",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 100,
      "display_name": "batch.max.rows",
      "documentation": "Maximum number of rows to include in a single batch when polling for new data.\nThis setting can be used to limit the amount of data buffered internally in\nthe connector.Type: intDefault: 100Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 100
      },
      "default": "100importance: low"
    },
    {
      "name": "table.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 101,
      "display_name": "table.poll.interval.ms",
      "documentation": "Frequency in ms to poll for new or removed tables, which may result in updated\ntask configurations to start polling for data in added tables or stop polling\nfor data in removed tables.Type: longDefault: 60000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 101
      },
      "default": "60000importance: low"
    },
    {
      "name": "topic.prefix",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 102,
      "display_name": "topic.prefix",
      "documentation": "Prefix to prepend to table names to generate the name of the Apache Kafka\u00c2\u00ae topic to\npublish data to, or in the case of a custom query, the full name of the topic\nto publish to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 102
      }
    },
    {
      "name": "timestamp.delay.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 103,
      "display_name": "timestamp.delay.interval.ms",
      "documentation": "After a row with a certain timestamp appears, this is the amount of time the connector waits to\ninclude it in the result. You can add a delay to allow transactions with an\nearlier timestamp to complete. The first execution fetches all available\nrecords (starting at timestamp 0) until the current time minus the delay. Each\nsubsequent execution retrieves data from the last time you fetched until the\ncurrent time minus the delay.Type: longDefault: 0Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 103
      },
      "default": "0importance: high"
    },
    {
      "name": "db.timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 104,
      "display_name": "db.timezone",
      "documentation": "The name of the JDBC timezone used in the connector when querying with\ntime-based criteria. This should be the timezone of the database as well as\nall the columns being queried. The value set indb.timezonewill also be\nused for timestamp columns while pushing the records to Kafka. Defaults to UTC.Type: stringDefault: UTCValid Values: Any valid JDK time zoneImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 104
      },
      "default": "utcvalid values: any valid jdk time zoneimportance: medium"
    },
    {
      "name": "timestamp.granularity",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 105,
      "display_name": "timestamp.granularity",
      "documentation": "Define the granularity of the Timestamp column. Options include:Type: stringDefault: connect_logicalValid Values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using Kafka Connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSS\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSSSSS\u00e2\u0080\u0099Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 105
      },
      "default": "connect_logicalvalid values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using kafka connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.ssssss\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.sssssssss\u00e2\u0080\u0099importance: low",
      "valid_values": [
        "connect_logical",
        "nanos_long",
        "nanos_string",
        "nanos_iso_datetime_string"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 106,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 106
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 107,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 107
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 108,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 108
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 109,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 109
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 110,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 110
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 111,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 111
      },
      "default": "kafka broker value"
    },
    {
      "name": "connection.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 112,
      "display_name": "connection.url",
      "documentation": "JDBC connection URL.For example:jdbc:oracle:thin:@localhost:1521:orclpdb1,jdbc:mysql://localhost/db_name,jdbc:sqlserver://localhost;instance=SQLEXPRESS;databaseName=db_nameType: stringImportance: highDependents:table.whitelist,table.blacklist",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 112
      },
      "dependents": [
        "table.whitelist",
        "table.blacklist"
      ]
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 113,
      "display_name": "connection.user",
      "documentation": "JDBC connection user.Type: stringDefault: nullImportance: highConfluent strongly recommends you follow the principle of least\nprivilege when creating the database user for this connector. Permissions\nshould be tailored to specific actions on the required tables to ensure the\nconnector can only access the data, or perform the actions necessary for its\nfunction.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 113
      },
      "default": "nullimportance: highconfluent strongly recommends you follow the principle of least"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 114,
      "display_name": "connection.password",
      "documentation": "JDBC connection password.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 114
      },
      "default": "nullimportance: high"
    },
    {
      "name": "jdbc.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 115,
      "display_name": "jdbc.credentials.provider.class",
      "documentation": "Credentials provider to use for authentication to configure the database. By default, the connector usesDefaultJdbcCredentialsProvider. Configure the class with the fully qualified name of your\ncustom credentials provider class.Type: classDefault:io.confluent.connect.jdbc.util.DefaultJdbcCredentialsProviderValid Values: Any class implementing interface:io.confluent.connect.jdbc.util.JdbcCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 115
      },
      "default": "io.confluent.connect.jdbc.util.defaultjdbccredentialsprovidervalid values: any class implementing interface:io.confluent.connect.jdbc.util.jdbccredentialsproviderimportance: low"
    },
    {
      "name": "connection.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 116,
      "display_name": "connection.attempts",
      "documentation": "Maximum number of attempts to retrieve a valid JDBC connection. Must be a\npositive integer.Type: intDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 116
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "connection.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 117,
      "display_name": "connection.backoff.ms",
      "documentation": "Backoff time in milliseconds between connection attempts.Type: longDefault: 10000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 117
      },
      "default": "10000importance: low"
    },
    {
      "name": "catalog.pattern",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 118,
      "display_name": "catalog.pattern",
      "documentation": "Catalog pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the catalog.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 118
      },
      "default": "null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "table.whitelist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 119,
      "display_name": "table.whitelist",
      "documentation": "List of tables to include in copying. If specified,table.blacklistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.whitelist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 119
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "table.blacklist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 120,
      "display_name": "table.blacklist",
      "documentation": "List of tables to exclude from copying. If specified,table.whitelistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.blacklist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 120
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "schema.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 121,
      "display_name": "schema.pattern",
      "documentation": "Schema pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the schema.Importance: highImportantIf you leave this at the default null setting, the connector may time out\nand fail because of the large amount of table metadata being received.\nMake sure to set this parameter for large databases.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 121
      },
      "default": "null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "numeric.precision.mapping",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 122,
      "display_name": "numeric.precision.mapping",
      "documentation": "Whether or not to attempt mapping NUMERIC values by precision to integral\ntypes. This option is now deprecated. A future version may remove it\ncompletely. You should usenumeric.mappinginstead.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 122
      },
      "default": "falseimportance: low"
    },
    {
      "name": "numeric.mapping",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 123,
      "display_name": "numeric.mapping",
      "documentation": "Map NUMERIC values by precision and optionally scale to integral or decimal\ntypes.Type: stringDefault: nullValid Values: [none, precision_only, best_fit, best_fit_eager_double]Usenoneif all NUMERIC columns are to be represented by Connect\u00e2\u0080\u0099s\nDECIMAL logical type.Usebest_fitif NUMERIC columns should be cast to Connect\u00e2\u0080\u0099s INT8,\nINT16, INT32, INT64, or FLOAT64 based upon the column\u00e2\u0080\u0099s precision and scale.This option may\nstill represent the NUMERIC value as Connect DECIMAL if it cannot be cast to a native\ntype without losing precision. For example, a NUMERIC(20) type with precision 20 would\nnot be able to fit in a native INT64 without overflowing and thus would be retained as\nDECIMAL.Usebest_fit_eager_doubleif, in addition to the properties ofbest_fitdescribed\nabove, it is desirable to always cast NUMERIC columns with scale to Connect FLOAT64 type,\ndespite potential of loss in accuracy.Useprecision_onlyto map NUMERIC columns based only on the column\u00e2\u0080\u0099s\nprecision assuming that column\u00e2\u0080\u0099s scale is 0.Thenoneoption is the default, but may lead to serialization issues\nwith Avro since Connect\u00e2\u0080\u0099s DECIMAL type is mapped to its binary\nrepresentation.best_fitis often preferred since it maps to the most\nappropriate primitive type.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 123
      },
      "default": "nullvalid values: [none, precision_only, best_fit, best_fit_eager_double]usenoneif all numeric columns are to be represented by connect\u00e2\u0080\u0099s",
      "valid_values": [
        "none",
        "precision_only",
        "best_fit",
        "best_fit_eager_double"
      ]
    },
    {
      "name": "dialect.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 124,
      "display_name": "dialect.name",
      "documentation": "The name of the database dialect that should be used for this connector. By\ndefault this is empty, and the connector automatically determines the dialect\nbased upon the JDBC connection URL. Use this if you want to override that\nbehavior and use a specific dialect. All properly-packaged dialects in the\nJDBC connector plugin can be used.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [,Db2DatabaseDialect,MySqlDatabaseDialect,SybaseDatabaseDialect,GenericDatabaseDialect,OracleDatabaseDialect,SqlServerDatabaseDialect,PostgreSqlDatabaseDialect,SqliteDatabaseDialect,DerbyDatabaseDialect,SapHanaDatabaseDialect,MockDatabaseDialect,VerticaDatabaseDialect]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 124
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [,db2databasedialect,mysqldatabasedialect,sybasedatabasedialect,genericdatabasedialect,oracledatabasedialect,sqlserverdatabasedialect,postgresqldatabasedialect,sqlitedatabasedialect,derbydatabasedialect,saphanadatabasedialect,mockdatabasedialect,verticadatabasedialect]importance: low",
      "valid_values": [
        "",
        "db2databasedialect",
        "mysqldatabasedialect",
        "sybasedatabasedialect",
        "genericdatabasedialect",
        "oracledatabasedialect",
        "sqlserverdatabasedialect",
        "postgresqldatabasedialect",
        "sqlitedatabasedialect",
        "derbydatabasedialect",
        "saphanadatabasedialect",
        "mockdatabasedialect",
        "verticadatabasedialect"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 125,
      "display_name": "mode",
      "documentation": "The mode for updating a table each time it is polled. Options include:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect\nonly new rows. Note that this will not detect modifications or deletions of\nexisting rows.timestamp: use a timestamp (or timestamp-like) column to detect new and\nmodified rows. This assumes the column is updated with each write, and that\nvalues are monotonically incrementing, but not necessarily unique.timestamp+incrementing: use two columns, a timestamp column that detects\nnew and modified rows and a strictly incrementing column which provides a\nglobally unique ID for updates so each row can be assigned a unique stream\noffset.Importance: highDependents:incrementing.column.name,timestamp.column.name,validate.non.null",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 125
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect",
      "valid_values": [
        "",
        "bulk",
        "timestamp",
        "incrementing",
        "timestamp+incrementing"
      ],
      "dependents": [
        "incrementing.column.name",
        "timestamp.column.name",
        "validate.non.null"
      ]
    },
    {
      "name": "incrementing.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 126,
      "display_name": "incrementing.column.name",
      "documentation": "The name of the strictly incrementing column to use to detect new rows. Any\nempty value indicates the column should be autodetected by looking for an\nauto-incrementing column. This column may not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 126
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 127,
      "display_name": "timestamp.column.name",
      "documentation": "Comma-separated list of one or more timestamp columns to detect new or\nmodified rows using the COALESCE SQL function. Rows whose first non-null\ntimestamp value is greater than the largest previous timestamp value seen will\nbe discovered with each poll. At least one column should not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 127
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.initial",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 128,
      "display_name": "timestamp.initial",
      "documentation": "The epoch timestamp (in milliseconds) used for initial queries that use\ntimestamp criteria. Use -1 to use the current time. If not specified, all data\nwill be retrieved.Type: longDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 128
      },
      "default": "nullimportance: low"
    },
    {
      "name": "validate.non.null",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 129,
      "display_name": "validate.non.null",
      "documentation": "By default, the JDBC connector will validate that all incrementing and\ntimestamp tables have NOT NULL set for the columns being used as their\nID/timestamp. If the tables don\u00e2\u0080\u0099t, JDBC connector will fail to start. Setting\nthis to false will disable these checks.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 129
      },
      "default": "trueimportance: low"
    },
    {
      "name": "query",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 130,
      "display_name": "query",
      "documentation": "If specified,querycan select new or updated rows. Use this\nsetting if you want to join tables, select subsets of columns in a table, or\nfilter data. If used, the connector copies data using this query and\nwhole-table copying is disabled.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumTipYou can usequerywith a WHERE clause if you enablemode=bulk.\nThis loads all rows from a table at each iteration. To specify a WHERE\nclause inother query modes, it must be\npossible to append a WHERE clause to the query. SeeSpecifying a WHERE clause with query modesfor a detailed explanation.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 130
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumtipyou can usequerywith a where clause if you enablemode=bulk."
    },
    {
      "name": "quote.sql.identifiers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 131,
      "display_name": "quote.sql.identifiers",
      "documentation": "When to quote table names, column names, and other identifiers in SQL\nstatements. For backward compatibility, the default isalways.Type: stringDefault: alwaysImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 131
      },
      "default": "alwaysimportance: medium"
    },
    {
      "name": "query.suffix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 132,
      "display_name": "query.suffix",
      "documentation": "Suffix to append at the end of the generated query.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 132
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "query.retry.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 133,
      "display_name": "query.retry.attempts",
      "documentation": "The number of times to retry SQL exceptions encountered when executing queries.Type: intDefault: -1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 133
      },
      "default": "-1importance: low"
    },
    {
      "name": "transaction.isolation.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 134,
      "display_name": "transaction.isolation.mode",
      "documentation": "The mode to control which transaction isolation level is used when running queries\nagainst the database. By default, no explicit transaction isolation mode is\nset.SQL_SERVER_SNAPSHOTwill only work against a connector configured to\nwrite to SQL Server. Options include:DEFAULT,READ_UNCOMMITTED,READ_COMMITTED,REPEATABLE_READ,SERIALIZABLE, andSQL_SERVER_SNAPSHOT.Type: stringDefault: DEFAULTValid Values: [DEFAULT,READ_UNCOMMITED,READ_COMMITED,REPEATABLE_READ,SERIALIZABLE,SQL_SERVER_SNAPSHOT]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 134
      },
      "default": "defaultvalid values: [default,read_uncommited,read_commited,repeatable_read,serializable,sql_server_snapshot]importance: low",
      "valid_values": [
        "default",
        "read_uncommited",
        "read_commited",
        "repeatable_read",
        "serializable",
        "sql_server_snapshot"
      ]
    },
    {
      "name": "table.types",
      "type": "LIST",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 135,
      "display_name": "table.types",
      "documentation": "By default, the JDBC connector will only detect tables with type TABLE from\nthe source Database. This config allows a comma-separated list of table\ntypes to extract.Type: list.TABLEVIEWSYSTEM TABLEGLOBAL TEMPORARYLOCAL TEMPORARYALIASSYNONYMIn most cases it only makes sense to have either TABLE or VIEW.Default: TABLEImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 135
      },
      "default": "tableimportance: low"
    },
    {
      "name": "poll.interval.ms",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 136,
      "display_name": "poll.interval.ms",
      "documentation": "Frequency in ms to poll for new data in each table.Type: intDefault: 5000Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 136
      },
      "default": "5000importance: high"
    },
    {
      "name": "batch.max.rows",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 137,
      "display_name": "batch.max.rows",
      "documentation": "Maximum number of rows to include in a single batch when polling for new data.\nThis setting can be used to limit the amount of data buffered internally in\nthe connector.Type: intDefault: 100Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 137
      },
      "default": "100importance: low"
    },
    {
      "name": "table.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 138,
      "display_name": "table.poll.interval.ms",
      "documentation": "Frequency in ms to poll for new or removed tables, which may result in updated\ntask configurations to start polling for data in added tables or stop polling\nfor data in removed tables.Type: longDefault: 60000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 138
      },
      "default": "60000importance: low"
    },
    {
      "name": "topic.prefix",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 139,
      "display_name": "topic.prefix",
      "documentation": "Prefix to prepend to table names to generate the name of the Apache Kafka\u00c2\u00ae topic to\npublish data to, or in the case of a custom query, the full name of the topic\nto publish to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 139
      }
    },
    {
      "name": "timestamp.delay.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 140,
      "display_name": "timestamp.delay.interval.ms",
      "documentation": "After a row with a certain timestamp appears, this is the amount of time the connector waits to\ninclude it in the result. You can add a delay to allow transactions with an\nearlier timestamp to complete. The first execution fetches all available\nrecords (starting at timestamp 0) until the current time minus the delay. Each\nsubsequent execution retrieves data from the last time you fetched until the\ncurrent time minus the delay.Type: longDefault: 0Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 140
      },
      "default": "0importance: high"
    },
    {
      "name": "db.timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 141,
      "display_name": "db.timezone",
      "documentation": "The name of the JDBC timezone used in the connector when querying with\ntime-based criteria. This should be the timezone of the database as well as\nall the columns being queried. The value set indb.timezonewill also be\nused for timestamp columns while pushing the records to Kafka. Defaults to UTC.Type: stringDefault: UTCValid Values: Any valid JDK time zoneImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 141
      },
      "default": "utcvalid values: any valid jdk time zoneimportance: medium"
    },
    {
      "name": "timestamp.granularity",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 142,
      "display_name": "timestamp.granularity",
      "documentation": "Define the granularity of the Timestamp column. Options include:Type: stringDefault: connect_logicalValid Values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using Kafka Connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSS\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSSSSS\u00e2\u0080\u0099Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 142
      },
      "default": "connect_logicalvalid values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using kafka connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.ssssss\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.sssssssss\u00e2\u0080\u0099importance: low",
      "valid_values": [
        "connect_logical",
        "nanos_long",
        "nanos_string",
        "nanos_iso_datetime_string"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 143,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 143
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 144,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 144
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 145,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 145
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 146,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 146
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 147,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 147
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 148,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 148
      },
      "default": "kafka broker value"
    },
    {
      "name": "connection.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 149,
      "display_name": "connection.url",
      "documentation": "JDBC connection URL.For example:jdbc:oracle:thin:@localhost:1521:orclpdb1,jdbc:mysql://localhost/db_name,jdbc:sqlserver://localhost;instance=SQLEXPRESS;databaseName=db_nameType: stringImportance: highDependents:table.whitelist,table.blacklist",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 149
      },
      "dependents": [
        "table.whitelist",
        "table.blacklist"
      ]
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 150,
      "display_name": "connection.user",
      "documentation": "JDBC connection user.Type: stringDefault: nullImportance: highConfluent strongly recommends you follow the principle of least\nprivilege when creating the database user for this connector. Permissions\nshould be tailored to specific actions on the required tables to ensure the\nconnector can only access the data, or perform the actions necessary for its\nfunction.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 150
      },
      "default": "nullimportance: highconfluent strongly recommends you follow the principle of least"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 151,
      "display_name": "connection.password",
      "documentation": "JDBC connection password.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 151
      },
      "default": "nullimportance: high"
    },
    {
      "name": "jdbc.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 152,
      "display_name": "jdbc.credentials.provider.class",
      "documentation": "Credentials provider to use for authentication to configure the database. By default, the connector usesDefaultJdbcCredentialsProvider. Configure the class with the fully qualified name of your\ncustom credentials provider class.Type: classDefault:io.confluent.connect.jdbc.util.DefaultJdbcCredentialsProviderValid Values: Any class implementing interface:io.confluent.connect.jdbc.util.JdbcCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 152
      },
      "default": "io.confluent.connect.jdbc.util.defaultjdbccredentialsprovidervalid values: any class implementing interface:io.confluent.connect.jdbc.util.jdbccredentialsproviderimportance: low"
    },
    {
      "name": "connection.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 153,
      "display_name": "connection.attempts",
      "documentation": "Maximum number of attempts to retrieve a valid JDBC connection. Must be a\npositive integer.Type: intDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 153
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "connection.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 154,
      "display_name": "connection.backoff.ms",
      "documentation": "Backoff time in milliseconds between connection attempts.Type: longDefault: 10000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 154
      },
      "default": "10000importance: low"
    },
    {
      "name": "catalog.pattern",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 155,
      "display_name": "catalog.pattern",
      "documentation": "Catalog pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the catalog.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 155
      },
      "default": "null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "table.whitelist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 156,
      "display_name": "table.whitelist",
      "documentation": "List of tables to include in copying. If specified,table.blacklistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.whitelist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 156
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "table.blacklist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 157,
      "display_name": "table.blacklist",
      "documentation": "List of tables to exclude from copying. If specified,table.whitelistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.blacklist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 157
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "schema.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 158,
      "display_name": "schema.pattern",
      "documentation": "Schema pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the schema.Importance: highImportantIf you leave this at the default null setting, the connector may time out\nand fail because of the large amount of table metadata being received.\nMake sure to set this parameter for large databases.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 158
      },
      "default": "null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "numeric.precision.mapping",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 159,
      "display_name": "numeric.precision.mapping",
      "documentation": "Whether or not to attempt mapping NUMERIC values by precision to integral\ntypes. This option is now deprecated. A future version may remove it\ncompletely. You should usenumeric.mappinginstead.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 159
      },
      "default": "falseimportance: low"
    },
    {
      "name": "numeric.mapping",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 160,
      "display_name": "numeric.mapping",
      "documentation": "Map NUMERIC values by precision and optionally scale to integral or decimal\ntypes.Type: stringDefault: nullValid Values: [none, precision_only, best_fit, best_fit_eager_double]Usenoneif all NUMERIC columns are to be represented by Connect\u00e2\u0080\u0099s\nDECIMAL logical type.Usebest_fitif NUMERIC columns should be cast to Connect\u00e2\u0080\u0099s INT8,\nINT16, INT32, INT64, or FLOAT64 based upon the column\u00e2\u0080\u0099s precision and scale.This option may\nstill represent the NUMERIC value as Connect DECIMAL if it cannot be cast to a native\ntype without losing precision. For example, a NUMERIC(20) type with precision 20 would\nnot be able to fit in a native INT64 without overflowing and thus would be retained as\nDECIMAL.Usebest_fit_eager_doubleif, in addition to the properties ofbest_fitdescribed\nabove, it is desirable to always cast NUMERIC columns with scale to Connect FLOAT64 type,\ndespite potential of loss in accuracy.Useprecision_onlyto map NUMERIC columns based only on the column\u00e2\u0080\u0099s\nprecision assuming that column\u00e2\u0080\u0099s scale is 0.Thenoneoption is the default, but may lead to serialization issues\nwith Avro since Connect\u00e2\u0080\u0099s DECIMAL type is mapped to its binary\nrepresentation.best_fitis often preferred since it maps to the most\nappropriate primitive type.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 160
      },
      "default": "nullvalid values: [none, precision_only, best_fit, best_fit_eager_double]usenoneif all numeric columns are to be represented by connect\u00e2\u0080\u0099s",
      "valid_values": [
        "none",
        "precision_only",
        "best_fit",
        "best_fit_eager_double"
      ]
    },
    {
      "name": "dialect.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 161,
      "display_name": "dialect.name",
      "documentation": "The name of the database dialect that should be used for this connector. By\ndefault this is empty, and the connector automatically determines the dialect\nbased upon the JDBC connection URL. Use this if you want to override that\nbehavior and use a specific dialect. All properly-packaged dialects in the\nJDBC connector plugin can be used.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [,Db2DatabaseDialect,MySqlDatabaseDialect,SybaseDatabaseDialect,GenericDatabaseDialect,OracleDatabaseDialect,SqlServerDatabaseDialect,PostgreSqlDatabaseDialect,SqliteDatabaseDialect,DerbyDatabaseDialect,SapHanaDatabaseDialect,MockDatabaseDialect,VerticaDatabaseDialect]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 161
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [,db2databasedialect,mysqldatabasedialect,sybasedatabasedialect,genericdatabasedialect,oracledatabasedialect,sqlserverdatabasedialect,postgresqldatabasedialect,sqlitedatabasedialect,derbydatabasedialect,saphanadatabasedialect,mockdatabasedialect,verticadatabasedialect]importance: low",
      "valid_values": [
        "",
        "db2databasedialect",
        "mysqldatabasedialect",
        "sybasedatabasedialect",
        "genericdatabasedialect",
        "oracledatabasedialect",
        "sqlserverdatabasedialect",
        "postgresqldatabasedialect",
        "sqlitedatabasedialect",
        "derbydatabasedialect",
        "saphanadatabasedialect",
        "mockdatabasedialect",
        "verticadatabasedialect"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 162,
      "display_name": "mode",
      "documentation": "The mode for updating a table each time it is polled. Options include:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect\nonly new rows. Note that this will not detect modifications or deletions of\nexisting rows.timestamp: use a timestamp (or timestamp-like) column to detect new and\nmodified rows. This assumes the column is updated with each write, and that\nvalues are monotonically incrementing, but not necessarily unique.timestamp+incrementing: use two columns, a timestamp column that detects\nnew and modified rows and a strictly incrementing column which provides a\nglobally unique ID for updates so each row can be assigned a unique stream\noffset.Importance: highDependents:incrementing.column.name,timestamp.column.name,validate.non.null",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 162
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect",
      "valid_values": [
        "",
        "bulk",
        "timestamp",
        "incrementing",
        "timestamp+incrementing"
      ],
      "dependents": [
        "incrementing.column.name",
        "timestamp.column.name",
        "validate.non.null"
      ]
    },
    {
      "name": "incrementing.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 163,
      "display_name": "incrementing.column.name",
      "documentation": "The name of the strictly incrementing column to use to detect new rows. Any\nempty value indicates the column should be autodetected by looking for an\nauto-incrementing column. This column may not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 163
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 164,
      "display_name": "timestamp.column.name",
      "documentation": "Comma-separated list of one or more timestamp columns to detect new or\nmodified rows using the COALESCE SQL function. Rows whose first non-null\ntimestamp value is greater than the largest previous timestamp value seen will\nbe discovered with each poll. At least one column should not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 164
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.initial",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 165,
      "display_name": "timestamp.initial",
      "documentation": "The epoch timestamp (in milliseconds) used for initial queries that use\ntimestamp criteria. Use -1 to use the current time. If not specified, all data\nwill be retrieved.Type: longDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 165
      },
      "default": "nullimportance: low"
    },
    {
      "name": "validate.non.null",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 166,
      "display_name": "validate.non.null",
      "documentation": "By default, the JDBC connector will validate that all incrementing and\ntimestamp tables have NOT NULL set for the columns being used as their\nID/timestamp. If the tables don\u00e2\u0080\u0099t, JDBC connector will fail to start. Setting\nthis to false will disable these checks.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 166
      },
      "default": "trueimportance: low"
    },
    {
      "name": "query",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 167,
      "display_name": "query",
      "documentation": "If specified,querycan select new or updated rows. Use this\nsetting if you want to join tables, select subsets of columns in a table, or\nfilter data. If used, the connector copies data using this query and\nwhole-table copying is disabled.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumTipYou can usequerywith a WHERE clause if you enablemode=bulk.\nThis loads all rows from a table at each iteration. To specify a WHERE\nclause inother query modes, it must be\npossible to append a WHERE clause to the query. SeeSpecifying a WHERE clause with query modesfor a detailed explanation.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 167
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumtipyou can usequerywith a where clause if you enablemode=bulk."
    },
    {
      "name": "quote.sql.identifiers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 168,
      "display_name": "quote.sql.identifiers",
      "documentation": "When to quote table names, column names, and other identifiers in SQL\nstatements. For backward compatibility, the default isalways.Type: stringDefault: alwaysImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 168
      },
      "default": "alwaysimportance: medium"
    },
    {
      "name": "query.suffix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 169,
      "display_name": "query.suffix",
      "documentation": "Suffix to append at the end of the generated query.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 169
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "query.retry.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 170,
      "display_name": "query.retry.attempts",
      "documentation": "The number of times to retry SQL exceptions encountered when executing queries.Type: intDefault: -1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 170
      },
      "default": "-1importance: low"
    },
    {
      "name": "transaction.isolation.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 171,
      "display_name": "transaction.isolation.mode",
      "documentation": "The mode to control which transaction isolation level is used when running queries\nagainst the database. By default, no explicit transaction isolation mode is\nset.SQL_SERVER_SNAPSHOTwill only work against a connector configured to\nwrite to SQL Server. Options include:DEFAULT,READ_UNCOMMITTED,READ_COMMITTED,REPEATABLE_READ,SERIALIZABLE, andSQL_SERVER_SNAPSHOT.Type: stringDefault: DEFAULTValid Values: [DEFAULT,READ_UNCOMMITED,READ_COMMITED,REPEATABLE_READ,SERIALIZABLE,SQL_SERVER_SNAPSHOT]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 171
      },
      "default": "defaultvalid values: [default,read_uncommited,read_commited,repeatable_read,serializable,sql_server_snapshot]importance: low",
      "valid_values": [
        "default",
        "read_uncommited",
        "read_commited",
        "repeatable_read",
        "serializable",
        "sql_server_snapshot"
      ]
    },
    {
      "name": "table.types",
      "type": "LIST",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 172,
      "display_name": "table.types",
      "documentation": "By default, the JDBC connector will only detect tables with type TABLE from\nthe source Database. This config allows a comma-separated list of table\ntypes to extract.Type: list.TABLEVIEWSYSTEM TABLEGLOBAL TEMPORARYLOCAL TEMPORARYALIASSYNONYMIn most cases it only makes sense to have either TABLE or VIEW.Default: TABLEImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 172
      },
      "default": "tableimportance: low"
    },
    {
      "name": "poll.interval.ms",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 173,
      "display_name": "poll.interval.ms",
      "documentation": "Frequency in ms to poll for new data in each table.Type: intDefault: 5000Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 173
      },
      "default": "5000importance: high"
    },
    {
      "name": "batch.max.rows",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 174,
      "display_name": "batch.max.rows",
      "documentation": "Maximum number of rows to include in a single batch when polling for new data.\nThis setting can be used to limit the amount of data buffered internally in\nthe connector.Type: intDefault: 100Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 174
      },
      "default": "100importance: low"
    },
    {
      "name": "table.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 175,
      "display_name": "table.poll.interval.ms",
      "documentation": "Frequency in ms to poll for new or removed tables, which may result in updated\ntask configurations to start polling for data in added tables or stop polling\nfor data in removed tables.Type: longDefault: 60000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 175
      },
      "default": "60000importance: low"
    },
    {
      "name": "topic.prefix",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 176,
      "display_name": "topic.prefix",
      "documentation": "Prefix to prepend to table names to generate the name of the Apache Kafka\u00c2\u00ae topic to\npublish data to, or in the case of a custom query, the full name of the topic\nto publish to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 176
      }
    },
    {
      "name": "timestamp.delay.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 177,
      "display_name": "timestamp.delay.interval.ms",
      "documentation": "After a row with a certain timestamp appears, this is the amount of time the connector waits to\ninclude it in the result. You can add a delay to allow transactions with an\nearlier timestamp to complete. The first execution fetches all available\nrecords (starting at timestamp 0) until the current time minus the delay. Each\nsubsequent execution retrieves data from the last time you fetched until the\ncurrent time minus the delay.Type: longDefault: 0Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 177
      },
      "default": "0importance: high"
    },
    {
      "name": "db.timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 178,
      "display_name": "db.timezone",
      "documentation": "The name of the JDBC timezone used in the connector when querying with\ntime-based criteria. This should be the timezone of the database as well as\nall the columns being queried. The value set indb.timezonewill also be\nused for timestamp columns while pushing the records to Kafka. Defaults to UTC.Type: stringDefault: UTCValid Values: Any valid JDK time zoneImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 178
      },
      "default": "utcvalid values: any valid jdk time zoneimportance: medium"
    },
    {
      "name": "timestamp.granularity",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 179,
      "display_name": "timestamp.granularity",
      "documentation": "Define the granularity of the Timestamp column. Options include:Type: stringDefault: connect_logicalValid Values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using Kafka Connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSS\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSSSSS\u00e2\u0080\u0099Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 179
      },
      "default": "connect_logicalvalid values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using kafka connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.ssssss\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.sssssssss\u00e2\u0080\u0099importance: low",
      "valid_values": [
        "connect_logical",
        "nanos_long",
        "nanos_string",
        "nanos_iso_datetime_string"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 180,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 180
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 181,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 181
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 182,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 182
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 183,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 183
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 184,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 184
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 185,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 185
      },
      "default": "kafka broker value"
    },
    {
      "name": "connection.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 186,
      "display_name": "connection.url",
      "documentation": "JDBC connection URL.For example:jdbc:oracle:thin:@localhost:1521:orclpdb1,jdbc:mysql://localhost/db_name,jdbc:sqlserver://localhost;instance=SQLEXPRESS;databaseName=db_nameType: stringImportance: highDependents:table.whitelist,table.blacklist",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 186
      },
      "dependents": [
        "table.whitelist",
        "table.blacklist"
      ]
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 187,
      "display_name": "connection.user",
      "documentation": "JDBC connection user.Type: stringDefault: nullImportance: highConfluent strongly recommends you follow the principle of least\nprivilege when creating the database user for this connector. Permissions\nshould be tailored to specific actions on the required tables to ensure the\nconnector can only access the data, or perform the actions necessary for its\nfunction.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 187
      },
      "default": "nullimportance: highconfluent strongly recommends you follow the principle of least"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 188,
      "display_name": "connection.password",
      "documentation": "JDBC connection password.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 188
      },
      "default": "nullimportance: high"
    },
    {
      "name": "jdbc.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 189,
      "display_name": "jdbc.credentials.provider.class",
      "documentation": "Credentials provider to use for authentication to configure the database. By default, the connector usesDefaultJdbcCredentialsProvider. Configure the class with the fully qualified name of your\ncustom credentials provider class.Type: classDefault:io.confluent.connect.jdbc.util.DefaultJdbcCredentialsProviderValid Values: Any class implementing interface:io.confluent.connect.jdbc.util.JdbcCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 189
      },
      "default": "io.confluent.connect.jdbc.util.defaultjdbccredentialsprovidervalid values: any class implementing interface:io.confluent.connect.jdbc.util.jdbccredentialsproviderimportance: low"
    },
    {
      "name": "connection.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 190,
      "display_name": "connection.attempts",
      "documentation": "Maximum number of attempts to retrieve a valid JDBC connection. Must be a\npositive integer.Type: intDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 190
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "connection.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 191,
      "display_name": "connection.backoff.ms",
      "documentation": "Backoff time in milliseconds between connection attempts.Type: longDefault: 10000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 191
      },
      "default": "10000importance: low"
    },
    {
      "name": "catalog.pattern",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 192,
      "display_name": "catalog.pattern",
      "documentation": "Catalog pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the catalog.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 192
      },
      "default": "null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "table.whitelist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 193,
      "display_name": "table.whitelist",
      "documentation": "List of tables to include in copying. If specified,table.blacklistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.whitelist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 193
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "table.blacklist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 194,
      "display_name": "table.blacklist",
      "documentation": "List of tables to exclude from copying. If specified,table.whitelistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.blacklist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 194
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "schema.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 195,
      "display_name": "schema.pattern",
      "documentation": "Schema pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the schema.Importance: highImportantIf you leave this at the default null setting, the connector may time out\nand fail because of the large amount of table metadata being received.\nMake sure to set this parameter for large databases.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 195
      },
      "default": "null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "numeric.precision.mapping",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 196,
      "display_name": "numeric.precision.mapping",
      "documentation": "Whether or not to attempt mapping NUMERIC values by precision to integral\ntypes. This option is now deprecated. A future version may remove it\ncompletely. You should usenumeric.mappinginstead.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 196
      },
      "default": "falseimportance: low"
    },
    {
      "name": "numeric.mapping",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 197,
      "display_name": "numeric.mapping",
      "documentation": "Map NUMERIC values by precision and optionally scale to integral or decimal\ntypes.Type: stringDefault: nullValid Values: [none, precision_only, best_fit, best_fit_eager_double]Usenoneif all NUMERIC columns are to be represented by Connect\u00e2\u0080\u0099s\nDECIMAL logical type.Usebest_fitif NUMERIC columns should be cast to Connect\u00e2\u0080\u0099s INT8,\nINT16, INT32, INT64, or FLOAT64 based upon the column\u00e2\u0080\u0099s precision and scale.This option may\nstill represent the NUMERIC value as Connect DECIMAL if it cannot be cast to a native\ntype without losing precision. For example, a NUMERIC(20) type with precision 20 would\nnot be able to fit in a native INT64 without overflowing and thus would be retained as\nDECIMAL.Usebest_fit_eager_doubleif, in addition to the properties ofbest_fitdescribed\nabove, it is desirable to always cast NUMERIC columns with scale to Connect FLOAT64 type,\ndespite potential of loss in accuracy.Useprecision_onlyto map NUMERIC columns based only on the column\u00e2\u0080\u0099s\nprecision assuming that column\u00e2\u0080\u0099s scale is 0.Thenoneoption is the default, but may lead to serialization issues\nwith Avro since Connect\u00e2\u0080\u0099s DECIMAL type is mapped to its binary\nrepresentation.best_fitis often preferred since it maps to the most\nappropriate primitive type.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 197
      },
      "default": "nullvalid values: [none, precision_only, best_fit, best_fit_eager_double]usenoneif all numeric columns are to be represented by connect\u00e2\u0080\u0099s",
      "valid_values": [
        "none",
        "precision_only",
        "best_fit",
        "best_fit_eager_double"
      ]
    },
    {
      "name": "dialect.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 198,
      "display_name": "dialect.name",
      "documentation": "The name of the database dialect that should be used for this connector. By\ndefault this is empty, and the connector automatically determines the dialect\nbased upon the JDBC connection URL. Use this if you want to override that\nbehavior and use a specific dialect. All properly-packaged dialects in the\nJDBC connector plugin can be used.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [,Db2DatabaseDialect,MySqlDatabaseDialect,SybaseDatabaseDialect,GenericDatabaseDialect,OracleDatabaseDialect,SqlServerDatabaseDialect,PostgreSqlDatabaseDialect,SqliteDatabaseDialect,DerbyDatabaseDialect,SapHanaDatabaseDialect,MockDatabaseDialect,VerticaDatabaseDialect]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 198
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [,db2databasedialect,mysqldatabasedialect,sybasedatabasedialect,genericdatabasedialect,oracledatabasedialect,sqlserverdatabasedialect,postgresqldatabasedialect,sqlitedatabasedialect,derbydatabasedialect,saphanadatabasedialect,mockdatabasedialect,verticadatabasedialect]importance: low",
      "valid_values": [
        "",
        "db2databasedialect",
        "mysqldatabasedialect",
        "sybasedatabasedialect",
        "genericdatabasedialect",
        "oracledatabasedialect",
        "sqlserverdatabasedialect",
        "postgresqldatabasedialect",
        "sqlitedatabasedialect",
        "derbydatabasedialect",
        "saphanadatabasedialect",
        "mockdatabasedialect",
        "verticadatabasedialect"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 199,
      "display_name": "mode",
      "documentation": "The mode for updating a table each time it is polled. Options include:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect\nonly new rows. Note that this will not detect modifications or deletions of\nexisting rows.timestamp: use a timestamp (or timestamp-like) column to detect new and\nmodified rows. This assumes the column is updated with each write, and that\nvalues are monotonically incrementing, but not necessarily unique.timestamp+incrementing: use two columns, a timestamp column that detects\nnew and modified rows and a strictly incrementing column which provides a\nglobally unique ID for updates so each row can be assigned a unique stream\noffset.Importance: highDependents:incrementing.column.name,timestamp.column.name,validate.non.null",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 199
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect",
      "valid_values": [
        "",
        "bulk",
        "timestamp",
        "incrementing",
        "timestamp+incrementing"
      ],
      "dependents": [
        "incrementing.column.name",
        "timestamp.column.name",
        "validate.non.null"
      ]
    },
    {
      "name": "incrementing.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 200,
      "display_name": "incrementing.column.name",
      "documentation": "The name of the strictly incrementing column to use to detect new rows. Any\nempty value indicates the column should be autodetected by looking for an\nauto-incrementing column. This column may not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 200
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 201,
      "display_name": "timestamp.column.name",
      "documentation": "Comma-separated list of one or more timestamp columns to detect new or\nmodified rows using the COALESCE SQL function. Rows whose first non-null\ntimestamp value is greater than the largest previous timestamp value seen will\nbe discovered with each poll. At least one column should not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 201
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.initial",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 202,
      "display_name": "timestamp.initial",
      "documentation": "The epoch timestamp (in milliseconds) used for initial queries that use\ntimestamp criteria. Use -1 to use the current time. If not specified, all data\nwill be retrieved.Type: longDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 202
      },
      "default": "nullimportance: low"
    },
    {
      "name": "validate.non.null",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 203,
      "display_name": "validate.non.null",
      "documentation": "By default, the JDBC connector will validate that all incrementing and\ntimestamp tables have NOT NULL set for the columns being used as their\nID/timestamp. If the tables don\u00e2\u0080\u0099t, JDBC connector will fail to start. Setting\nthis to false will disable these checks.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 203
      },
      "default": "trueimportance: low"
    },
    {
      "name": "query",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 204,
      "display_name": "query",
      "documentation": "If specified,querycan select new or updated rows. Use this\nsetting if you want to join tables, select subsets of columns in a table, or\nfilter data. If used, the connector copies data using this query and\nwhole-table copying is disabled.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumTipYou can usequerywith a WHERE clause if you enablemode=bulk.\nThis loads all rows from a table at each iteration. To specify a WHERE\nclause inother query modes, it must be\npossible to append a WHERE clause to the query. SeeSpecifying a WHERE clause with query modesfor a detailed explanation.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 204
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumtipyou can usequerywith a where clause if you enablemode=bulk."
    },
    {
      "name": "quote.sql.identifiers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 205,
      "display_name": "quote.sql.identifiers",
      "documentation": "When to quote table names, column names, and other identifiers in SQL\nstatements. For backward compatibility, the default isalways.Type: stringDefault: alwaysImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 205
      },
      "default": "alwaysimportance: medium"
    },
    {
      "name": "query.suffix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 206,
      "display_name": "query.suffix",
      "documentation": "Suffix to append at the end of the generated query.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 206
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "query.retry.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 207,
      "display_name": "query.retry.attempts",
      "documentation": "The number of times to retry SQL exceptions encountered when executing queries.Type: intDefault: -1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 207
      },
      "default": "-1importance: low"
    },
    {
      "name": "transaction.isolation.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 208,
      "display_name": "transaction.isolation.mode",
      "documentation": "The mode to control which transaction isolation level is used when running queries\nagainst the database. By default, no explicit transaction isolation mode is\nset.SQL_SERVER_SNAPSHOTwill only work against a connector configured to\nwrite to SQL Server. Options include:DEFAULT,READ_UNCOMMITTED,READ_COMMITTED,REPEATABLE_READ,SERIALIZABLE, andSQL_SERVER_SNAPSHOT.Type: stringDefault: DEFAULTValid Values: [DEFAULT,READ_UNCOMMITED,READ_COMMITED,REPEATABLE_READ,SERIALIZABLE,SQL_SERVER_SNAPSHOT]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 208
      },
      "default": "defaultvalid values: [default,read_uncommited,read_commited,repeatable_read,serializable,sql_server_snapshot]importance: low",
      "valid_values": [
        "default",
        "read_uncommited",
        "read_commited",
        "repeatable_read",
        "serializable",
        "sql_server_snapshot"
      ]
    },
    {
      "name": "table.types",
      "type": "LIST",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 209,
      "display_name": "table.types",
      "documentation": "By default, the JDBC connector will only detect tables with type TABLE from\nthe source Database. This config allows a comma-separated list of table\ntypes to extract.Type: list.TABLEVIEWSYSTEM TABLEGLOBAL TEMPORARYLOCAL TEMPORARYALIASSYNONYMIn most cases it only makes sense to have either TABLE or VIEW.Default: TABLEImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 209
      },
      "default": "tableimportance: low"
    },
    {
      "name": "poll.interval.ms",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 210,
      "display_name": "poll.interval.ms",
      "documentation": "Frequency in ms to poll for new data in each table.Type: intDefault: 5000Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 210
      },
      "default": "5000importance: high"
    },
    {
      "name": "batch.max.rows",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 211,
      "display_name": "batch.max.rows",
      "documentation": "Maximum number of rows to include in a single batch when polling for new data.\nThis setting can be used to limit the amount of data buffered internally in\nthe connector.Type: intDefault: 100Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 211
      },
      "default": "100importance: low"
    },
    {
      "name": "table.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 212,
      "display_name": "table.poll.interval.ms",
      "documentation": "Frequency in ms to poll for new or removed tables, which may result in updated\ntask configurations to start polling for data in added tables or stop polling\nfor data in removed tables.Type: longDefault: 60000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 212
      },
      "default": "60000importance: low"
    },
    {
      "name": "topic.prefix",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 213,
      "display_name": "topic.prefix",
      "documentation": "Prefix to prepend to table names to generate the name of the Apache Kafka\u00c2\u00ae topic to\npublish data to, or in the case of a custom query, the full name of the topic\nto publish to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 213
      }
    },
    {
      "name": "timestamp.delay.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 214,
      "display_name": "timestamp.delay.interval.ms",
      "documentation": "After a row with a certain timestamp appears, this is the amount of time the connector waits to\ninclude it in the result. You can add a delay to allow transactions with an\nearlier timestamp to complete. The first execution fetches all available\nrecords (starting at timestamp 0) until the current time minus the delay. Each\nsubsequent execution retrieves data from the last time you fetched until the\ncurrent time minus the delay.Type: longDefault: 0Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 214
      },
      "default": "0importance: high"
    },
    {
      "name": "db.timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 215,
      "display_name": "db.timezone",
      "documentation": "The name of the JDBC timezone used in the connector when querying with\ntime-based criteria. This should be the timezone of the database as well as\nall the columns being queried. The value set indb.timezonewill also be\nused for timestamp columns while pushing the records to Kafka. Defaults to UTC.Type: stringDefault: UTCValid Values: Any valid JDK time zoneImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 215
      },
      "default": "utcvalid values: any valid jdk time zoneimportance: medium"
    },
    {
      "name": "timestamp.granularity",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 216,
      "display_name": "timestamp.granularity",
      "documentation": "Define the granularity of the Timestamp column. Options include:Type: stringDefault: connect_logicalValid Values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using Kafka Connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSS\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSSSSS\u00e2\u0080\u0099Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 216
      },
      "default": "connect_logicalvalid values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using kafka connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.ssssss\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.sssssssss\u00e2\u0080\u0099importance: low",
      "valid_values": [
        "connect_logical",
        "nanos_long",
        "nanos_string",
        "nanos_iso_datetime_string"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 217,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 217
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 218,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 218
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 219,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 219
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 220,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 220
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 221,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 221
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 222,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 222
      },
      "default": "kafka broker value"
    },
    {
      "name": "connection.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 223,
      "display_name": "connection.url",
      "documentation": "JDBC connection URL.For example:jdbc:oracle:thin:@localhost:1521:orclpdb1,jdbc:mysql://localhost/db_name,jdbc:sqlserver://localhost;instance=SQLEXPRESS;databaseName=db_nameType: stringImportance: highDependents:table.whitelist,table.blacklist",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 223
      },
      "dependents": [
        "table.whitelist",
        "table.blacklist"
      ]
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 224,
      "display_name": "connection.user",
      "documentation": "JDBC connection user.Type: stringDefault: nullImportance: highConfluent strongly recommends you follow the principle of least\nprivilege when creating the database user for this connector. Permissions\nshould be tailored to specific actions on the required tables to ensure the\nconnector can only access the data, or perform the actions necessary for its\nfunction.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 224
      },
      "default": "nullimportance: highconfluent strongly recommends you follow the principle of least"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 225,
      "display_name": "connection.password",
      "documentation": "JDBC connection password.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 225
      },
      "default": "nullimportance: high"
    },
    {
      "name": "jdbc.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 226,
      "display_name": "jdbc.credentials.provider.class",
      "documentation": "Credentials provider to use for authentication to configure the database. By default, the connector usesDefaultJdbcCredentialsProvider. Configure the class with the fully qualified name of your\ncustom credentials provider class.Type: classDefault:io.confluent.connect.jdbc.util.DefaultJdbcCredentialsProviderValid Values: Any class implementing interface:io.confluent.connect.jdbc.util.JdbcCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 226
      },
      "default": "io.confluent.connect.jdbc.util.defaultjdbccredentialsprovidervalid values: any class implementing interface:io.confluent.connect.jdbc.util.jdbccredentialsproviderimportance: low"
    },
    {
      "name": "connection.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 227,
      "display_name": "connection.attempts",
      "documentation": "Maximum number of attempts to retrieve a valid JDBC connection. Must be a\npositive integer.Type: intDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 227
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "connection.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 228,
      "display_name": "connection.backoff.ms",
      "documentation": "Backoff time in milliseconds between connection attempts.Type: longDefault: 10000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 228
      },
      "default": "10000importance: low"
    },
    {
      "name": "catalog.pattern",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 229,
      "display_name": "catalog.pattern",
      "documentation": "Catalog pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the catalog.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 229
      },
      "default": "null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "table.whitelist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 230,
      "display_name": "table.whitelist",
      "documentation": "List of tables to include in copying. If specified,table.blacklistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.whitelist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 230
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "table.blacklist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 231,
      "display_name": "table.blacklist",
      "documentation": "List of tables to exclude from copying. If specified,table.whitelistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.blacklist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 231
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "schema.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 232,
      "display_name": "schema.pattern",
      "documentation": "Schema pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the schema.Importance: highImportantIf you leave this at the default null setting, the connector may time out\nand fail because of the large amount of table metadata being received.\nMake sure to set this parameter for large databases.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 232
      },
      "default": "null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "numeric.precision.mapping",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 233,
      "display_name": "numeric.precision.mapping",
      "documentation": "Whether or not to attempt mapping NUMERIC values by precision to integral\ntypes. This option is now deprecated. A future version may remove it\ncompletely. You should usenumeric.mappinginstead.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 233
      },
      "default": "falseimportance: low"
    },
    {
      "name": "numeric.mapping",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 234,
      "display_name": "numeric.mapping",
      "documentation": "Map NUMERIC values by precision and optionally scale to integral or decimal\ntypes.Type: stringDefault: nullValid Values: [none, precision_only, best_fit, best_fit_eager_double]Usenoneif all NUMERIC columns are to be represented by Connect\u00e2\u0080\u0099s\nDECIMAL logical type.Usebest_fitif NUMERIC columns should be cast to Connect\u00e2\u0080\u0099s INT8,\nINT16, INT32, INT64, or FLOAT64 based upon the column\u00e2\u0080\u0099s precision and scale.This option may\nstill represent the NUMERIC value as Connect DECIMAL if it cannot be cast to a native\ntype without losing precision. For example, a NUMERIC(20) type with precision 20 would\nnot be able to fit in a native INT64 without overflowing and thus would be retained as\nDECIMAL.Usebest_fit_eager_doubleif, in addition to the properties ofbest_fitdescribed\nabove, it is desirable to always cast NUMERIC columns with scale to Connect FLOAT64 type,\ndespite potential of loss in accuracy.Useprecision_onlyto map NUMERIC columns based only on the column\u00e2\u0080\u0099s\nprecision assuming that column\u00e2\u0080\u0099s scale is 0.Thenoneoption is the default, but may lead to serialization issues\nwith Avro since Connect\u00e2\u0080\u0099s DECIMAL type is mapped to its binary\nrepresentation.best_fitis often preferred since it maps to the most\nappropriate primitive type.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 234
      },
      "default": "nullvalid values: [none, precision_only, best_fit, best_fit_eager_double]usenoneif all numeric columns are to be represented by connect\u00e2\u0080\u0099s",
      "valid_values": [
        "none",
        "precision_only",
        "best_fit",
        "best_fit_eager_double"
      ]
    },
    {
      "name": "dialect.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 235,
      "display_name": "dialect.name",
      "documentation": "The name of the database dialect that should be used for this connector. By\ndefault this is empty, and the connector automatically determines the dialect\nbased upon the JDBC connection URL. Use this if you want to override that\nbehavior and use a specific dialect. All properly-packaged dialects in the\nJDBC connector plugin can be used.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [,Db2DatabaseDialect,MySqlDatabaseDialect,SybaseDatabaseDialect,GenericDatabaseDialect,OracleDatabaseDialect,SqlServerDatabaseDialect,PostgreSqlDatabaseDialect,SqliteDatabaseDialect,DerbyDatabaseDialect,SapHanaDatabaseDialect,MockDatabaseDialect,VerticaDatabaseDialect]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 235
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [,db2databasedialect,mysqldatabasedialect,sybasedatabasedialect,genericdatabasedialect,oracledatabasedialect,sqlserverdatabasedialect,postgresqldatabasedialect,sqlitedatabasedialect,derbydatabasedialect,saphanadatabasedialect,mockdatabasedialect,verticadatabasedialect]importance: low",
      "valid_values": [
        "",
        "db2databasedialect",
        "mysqldatabasedialect",
        "sybasedatabasedialect",
        "genericdatabasedialect",
        "oracledatabasedialect",
        "sqlserverdatabasedialect",
        "postgresqldatabasedialect",
        "sqlitedatabasedialect",
        "derbydatabasedialect",
        "saphanadatabasedialect",
        "mockdatabasedialect",
        "verticadatabasedialect"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 236,
      "display_name": "mode",
      "documentation": "The mode for updating a table each time it is polled. Options include:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect\nonly new rows. Note that this will not detect modifications or deletions of\nexisting rows.timestamp: use a timestamp (or timestamp-like) column to detect new and\nmodified rows. This assumes the column is updated with each write, and that\nvalues are monotonically incrementing, but not necessarily unique.timestamp+incrementing: use two columns, a timestamp column that detects\nnew and modified rows and a strictly incrementing column which provides a\nglobally unique ID for updates so each row can be assigned a unique stream\noffset.Importance: highDependents:incrementing.column.name,timestamp.column.name,validate.non.null",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 236
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect",
      "valid_values": [
        "",
        "bulk",
        "timestamp",
        "incrementing",
        "timestamp+incrementing"
      ],
      "dependents": [
        "incrementing.column.name",
        "timestamp.column.name",
        "validate.non.null"
      ]
    },
    {
      "name": "incrementing.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 237,
      "display_name": "incrementing.column.name",
      "documentation": "The name of the strictly incrementing column to use to detect new rows. Any\nempty value indicates the column should be autodetected by looking for an\nauto-incrementing column. This column may not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 237
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 238,
      "display_name": "timestamp.column.name",
      "documentation": "Comma-separated list of one or more timestamp columns to detect new or\nmodified rows using the COALESCE SQL function. Rows whose first non-null\ntimestamp value is greater than the largest previous timestamp value seen will\nbe discovered with each poll. At least one column should not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 238
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.initial",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 239,
      "display_name": "timestamp.initial",
      "documentation": "The epoch timestamp (in milliseconds) used for initial queries that use\ntimestamp criteria. Use -1 to use the current time. If not specified, all data\nwill be retrieved.Type: longDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 239
      },
      "default": "nullimportance: low"
    },
    {
      "name": "validate.non.null",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 240,
      "display_name": "validate.non.null",
      "documentation": "By default, the JDBC connector will validate that all incrementing and\ntimestamp tables have NOT NULL set for the columns being used as their\nID/timestamp. If the tables don\u00e2\u0080\u0099t, JDBC connector will fail to start. Setting\nthis to false will disable these checks.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 240
      },
      "default": "trueimportance: low"
    },
    {
      "name": "query",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 241,
      "display_name": "query",
      "documentation": "If specified,querycan select new or updated rows. Use this\nsetting if you want to join tables, select subsets of columns in a table, or\nfilter data. If used, the connector copies data using this query and\nwhole-table copying is disabled.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumTipYou can usequerywith a WHERE clause if you enablemode=bulk.\nThis loads all rows from a table at each iteration. To specify a WHERE\nclause inother query modes, it must be\npossible to append a WHERE clause to the query. SeeSpecifying a WHERE clause with query modesfor a detailed explanation.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 241
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumtipyou can usequerywith a where clause if you enablemode=bulk."
    },
    {
      "name": "quote.sql.identifiers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 242,
      "display_name": "quote.sql.identifiers",
      "documentation": "When to quote table names, column names, and other identifiers in SQL\nstatements. For backward compatibility, the default isalways.Type: stringDefault: alwaysImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 242
      },
      "default": "alwaysimportance: medium"
    },
    {
      "name": "query.suffix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 243,
      "display_name": "query.suffix",
      "documentation": "Suffix to append at the end of the generated query.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 243
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "query.retry.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 244,
      "display_name": "query.retry.attempts",
      "documentation": "The number of times to retry SQL exceptions encountered when executing queries.Type: intDefault: -1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 244
      },
      "default": "-1importance: low"
    },
    {
      "name": "transaction.isolation.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 245,
      "display_name": "transaction.isolation.mode",
      "documentation": "The mode to control which transaction isolation level is used when running queries\nagainst the database. By default, no explicit transaction isolation mode is\nset.SQL_SERVER_SNAPSHOTwill only work against a connector configured to\nwrite to SQL Server. Options include:DEFAULT,READ_UNCOMMITTED,READ_COMMITTED,REPEATABLE_READ,SERIALIZABLE, andSQL_SERVER_SNAPSHOT.Type: stringDefault: DEFAULTValid Values: [DEFAULT,READ_UNCOMMITED,READ_COMMITED,REPEATABLE_READ,SERIALIZABLE,SQL_SERVER_SNAPSHOT]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 245
      },
      "default": "defaultvalid values: [default,read_uncommited,read_commited,repeatable_read,serializable,sql_server_snapshot]importance: low",
      "valid_values": [
        "default",
        "read_uncommited",
        "read_commited",
        "repeatable_read",
        "serializable",
        "sql_server_snapshot"
      ]
    },
    {
      "name": "table.types",
      "type": "LIST",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 246,
      "display_name": "table.types",
      "documentation": "By default, the JDBC connector will only detect tables with type TABLE from\nthe source Database. This config allows a comma-separated list of table\ntypes to extract.Type: list.TABLEVIEWSYSTEM TABLEGLOBAL TEMPORARYLOCAL TEMPORARYALIASSYNONYMIn most cases it only makes sense to have either TABLE or VIEW.Default: TABLEImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 246
      },
      "default": "tableimportance: low"
    },
    {
      "name": "poll.interval.ms",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 247,
      "display_name": "poll.interval.ms",
      "documentation": "Frequency in ms to poll for new data in each table.Type: intDefault: 5000Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 247
      },
      "default": "5000importance: high"
    },
    {
      "name": "batch.max.rows",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 248,
      "display_name": "batch.max.rows",
      "documentation": "Maximum number of rows to include in a single batch when polling for new data.\nThis setting can be used to limit the amount of data buffered internally in\nthe connector.Type: intDefault: 100Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 248
      },
      "default": "100importance: low"
    },
    {
      "name": "table.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 249,
      "display_name": "table.poll.interval.ms",
      "documentation": "Frequency in ms to poll for new or removed tables, which may result in updated\ntask configurations to start polling for data in added tables or stop polling\nfor data in removed tables.Type: longDefault: 60000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 249
      },
      "default": "60000importance: low"
    },
    {
      "name": "topic.prefix",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 250,
      "display_name": "topic.prefix",
      "documentation": "Prefix to prepend to table names to generate the name of the Apache Kafka\u00c2\u00ae topic to\npublish data to, or in the case of a custom query, the full name of the topic\nto publish to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 250
      }
    },
    {
      "name": "timestamp.delay.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 251,
      "display_name": "timestamp.delay.interval.ms",
      "documentation": "After a row with a certain timestamp appears, this is the amount of time the connector waits to\ninclude it in the result. You can add a delay to allow transactions with an\nearlier timestamp to complete. The first execution fetches all available\nrecords (starting at timestamp 0) until the current time minus the delay. Each\nsubsequent execution retrieves data from the last time you fetched until the\ncurrent time minus the delay.Type: longDefault: 0Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 251
      },
      "default": "0importance: high"
    },
    {
      "name": "db.timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 252,
      "display_name": "db.timezone",
      "documentation": "The name of the JDBC timezone used in the connector when querying with\ntime-based criteria. This should be the timezone of the database as well as\nall the columns being queried. The value set indb.timezonewill also be\nused for timestamp columns while pushing the records to Kafka. Defaults to UTC.Type: stringDefault: UTCValid Values: Any valid JDK time zoneImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 252
      },
      "default": "utcvalid values: any valid jdk time zoneimportance: medium"
    },
    {
      "name": "timestamp.granularity",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 253,
      "display_name": "timestamp.granularity",
      "documentation": "Define the granularity of the Timestamp column. Options include:Type: stringDefault: connect_logicalValid Values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using Kafka Connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSS\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSSSSS\u00e2\u0080\u0099Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 253
      },
      "default": "connect_logicalvalid values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using kafka connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.ssssss\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.sssssssss\u00e2\u0080\u0099importance: low",
      "valid_values": [
        "connect_logical",
        "nanos_long",
        "nanos_string",
        "nanos_iso_datetime_string"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 254,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 254
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 255,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 255
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 256,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 256
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 257,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 257
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 258,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 258
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 259,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 259
      },
      "default": "kafka broker value"
    },
    {
      "name": "connection.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 260,
      "display_name": "connection.url",
      "documentation": "JDBC connection URL.For example:jdbc:oracle:thin:@localhost:1521:orclpdb1,jdbc:mysql://localhost/db_name,jdbc:sqlserver://localhost;instance=SQLEXPRESS;databaseName=db_nameType: stringImportance: highDependents:table.whitelist,table.blacklist",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 260
      },
      "dependents": [
        "table.whitelist",
        "table.blacklist"
      ]
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 261,
      "display_name": "connection.user",
      "documentation": "JDBC connection user.Type: stringDefault: nullImportance: highConfluent strongly recommends you follow the principle of least\nprivilege when creating the database user for this connector. Permissions\nshould be tailored to specific actions on the required tables to ensure the\nconnector can only access the data, or perform the actions necessary for its\nfunction.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 261
      },
      "default": "nullimportance: highconfluent strongly recommends you follow the principle of least"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 262,
      "display_name": "connection.password",
      "documentation": "JDBC connection password.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 262
      },
      "default": "nullimportance: high"
    },
    {
      "name": "jdbc.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 263,
      "display_name": "jdbc.credentials.provider.class",
      "documentation": "Credentials provider to use for authentication to configure the database. By default, the connector usesDefaultJdbcCredentialsProvider. Configure the class with the fully qualified name of your\ncustom credentials provider class.Type: classDefault:io.confluent.connect.jdbc.util.DefaultJdbcCredentialsProviderValid Values: Any class implementing interface:io.confluent.connect.jdbc.util.JdbcCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 263
      },
      "default": "io.confluent.connect.jdbc.util.defaultjdbccredentialsprovidervalid values: any class implementing interface:io.confluent.connect.jdbc.util.jdbccredentialsproviderimportance: low"
    },
    {
      "name": "connection.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 264,
      "display_name": "connection.attempts",
      "documentation": "Maximum number of attempts to retrieve a valid JDBC connection. Must be a\npositive integer.Type: intDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 264
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "connection.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 265,
      "display_name": "connection.backoff.ms",
      "documentation": "Backoff time in milliseconds between connection attempts.Type: longDefault: 10000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 265
      },
      "default": "10000importance: low"
    },
    {
      "name": "catalog.pattern",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 266,
      "display_name": "catalog.pattern",
      "documentation": "Catalog pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the catalog.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 266
      },
      "default": "null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "table.whitelist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 267,
      "display_name": "table.whitelist",
      "documentation": "List of tables to include in copying. If specified,table.blacklistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.whitelist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 267
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "table.blacklist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 268,
      "display_name": "table.blacklist",
      "documentation": "List of tables to exclude from copying. If specified,table.whitelistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.blacklist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 268
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "schema.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 269,
      "display_name": "schema.pattern",
      "documentation": "Schema pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the schema.Importance: highImportantIf you leave this at the default null setting, the connector may time out\nand fail because of the large amount of table metadata being received.\nMake sure to set this parameter for large databases.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 269
      },
      "default": "null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "numeric.precision.mapping",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 270,
      "display_name": "numeric.precision.mapping",
      "documentation": "Whether or not to attempt mapping NUMERIC values by precision to integral\ntypes. This option is now deprecated. A future version may remove it\ncompletely. You should usenumeric.mappinginstead.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 270
      },
      "default": "falseimportance: low"
    },
    {
      "name": "numeric.mapping",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 271,
      "display_name": "numeric.mapping",
      "documentation": "Map NUMERIC values by precision and optionally scale to integral or decimal\ntypes.Type: stringDefault: nullValid Values: [none, precision_only, best_fit, best_fit_eager_double]Usenoneif all NUMERIC columns are to be represented by Connect\u00e2\u0080\u0099s\nDECIMAL logical type.Usebest_fitif NUMERIC columns should be cast to Connect\u00e2\u0080\u0099s INT8,\nINT16, INT32, INT64, or FLOAT64 based upon the column\u00e2\u0080\u0099s precision and scale.This option may\nstill represent the NUMERIC value as Connect DECIMAL if it cannot be cast to a native\ntype without losing precision. For example, a NUMERIC(20) type with precision 20 would\nnot be able to fit in a native INT64 without overflowing and thus would be retained as\nDECIMAL.Usebest_fit_eager_doubleif, in addition to the properties ofbest_fitdescribed\nabove, it is desirable to always cast NUMERIC columns with scale to Connect FLOAT64 type,\ndespite potential of loss in accuracy.Useprecision_onlyto map NUMERIC columns based only on the column\u00e2\u0080\u0099s\nprecision assuming that column\u00e2\u0080\u0099s scale is 0.Thenoneoption is the default, but may lead to serialization issues\nwith Avro since Connect\u00e2\u0080\u0099s DECIMAL type is mapped to its binary\nrepresentation.best_fitis often preferred since it maps to the most\nappropriate primitive type.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 271
      },
      "default": "nullvalid values: [none, precision_only, best_fit, best_fit_eager_double]usenoneif all numeric columns are to be represented by connect\u00e2\u0080\u0099s",
      "valid_values": [
        "none",
        "precision_only",
        "best_fit",
        "best_fit_eager_double"
      ]
    },
    {
      "name": "dialect.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 272,
      "display_name": "dialect.name",
      "documentation": "The name of the database dialect that should be used for this connector. By\ndefault this is empty, and the connector automatically determines the dialect\nbased upon the JDBC connection URL. Use this if you want to override that\nbehavior and use a specific dialect. All properly-packaged dialects in the\nJDBC connector plugin can be used.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [,Db2DatabaseDialect,MySqlDatabaseDialect,SybaseDatabaseDialect,GenericDatabaseDialect,OracleDatabaseDialect,SqlServerDatabaseDialect,PostgreSqlDatabaseDialect,SqliteDatabaseDialect,DerbyDatabaseDialect,SapHanaDatabaseDialect,MockDatabaseDialect,VerticaDatabaseDialect]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 272
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [,db2databasedialect,mysqldatabasedialect,sybasedatabasedialect,genericdatabasedialect,oracledatabasedialect,sqlserverdatabasedialect,postgresqldatabasedialect,sqlitedatabasedialect,derbydatabasedialect,saphanadatabasedialect,mockdatabasedialect,verticadatabasedialect]importance: low",
      "valid_values": [
        "",
        "db2databasedialect",
        "mysqldatabasedialect",
        "sybasedatabasedialect",
        "genericdatabasedialect",
        "oracledatabasedialect",
        "sqlserverdatabasedialect",
        "postgresqldatabasedialect",
        "sqlitedatabasedialect",
        "derbydatabasedialect",
        "saphanadatabasedialect",
        "mockdatabasedialect",
        "verticadatabasedialect"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 273,
      "display_name": "mode",
      "documentation": "The mode for updating a table each time it is polled. Options include:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect\nonly new rows. Note that this will not detect modifications or deletions of\nexisting rows.timestamp: use a timestamp (or timestamp-like) column to detect new and\nmodified rows. This assumes the column is updated with each write, and that\nvalues are monotonically incrementing, but not necessarily unique.timestamp+incrementing: use two columns, a timestamp column that detects\nnew and modified rows and a strictly incrementing column which provides a\nglobally unique ID for updates so each row can be assigned a unique stream\noffset.Importance: highDependents:incrementing.column.name,timestamp.column.name,validate.non.null",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 273
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect",
      "valid_values": [
        "",
        "bulk",
        "timestamp",
        "incrementing",
        "timestamp+incrementing"
      ],
      "dependents": [
        "incrementing.column.name",
        "timestamp.column.name",
        "validate.non.null"
      ]
    },
    {
      "name": "incrementing.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 274,
      "display_name": "incrementing.column.name",
      "documentation": "The name of the strictly incrementing column to use to detect new rows. Any\nempty value indicates the column should be autodetected by looking for an\nauto-incrementing column. This column may not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 274
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 275,
      "display_name": "timestamp.column.name",
      "documentation": "Comma-separated list of one or more timestamp columns to detect new or\nmodified rows using the COALESCE SQL function. Rows whose first non-null\ntimestamp value is greater than the largest previous timestamp value seen will\nbe discovered with each poll. At least one column should not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 275
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.initial",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 276,
      "display_name": "timestamp.initial",
      "documentation": "The epoch timestamp (in milliseconds) used for initial queries that use\ntimestamp criteria. Use -1 to use the current time. If not specified, all data\nwill be retrieved.Type: longDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 276
      },
      "default": "nullimportance: low"
    },
    {
      "name": "validate.non.null",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 277,
      "display_name": "validate.non.null",
      "documentation": "By default, the JDBC connector will validate that all incrementing and\ntimestamp tables have NOT NULL set for the columns being used as their\nID/timestamp. If the tables don\u00e2\u0080\u0099t, JDBC connector will fail to start. Setting\nthis to false will disable these checks.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 277
      },
      "default": "trueimportance: low"
    },
    {
      "name": "query",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 278,
      "display_name": "query",
      "documentation": "If specified,querycan select new or updated rows. Use this\nsetting if you want to join tables, select subsets of columns in a table, or\nfilter data. If used, the connector copies data using this query and\nwhole-table copying is disabled.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumTipYou can usequerywith a WHERE clause if you enablemode=bulk.\nThis loads all rows from a table at each iteration. To specify a WHERE\nclause inother query modes, it must be\npossible to append a WHERE clause to the query. SeeSpecifying a WHERE clause with query modesfor a detailed explanation.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 278
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumtipyou can usequerywith a where clause if you enablemode=bulk."
    },
    {
      "name": "quote.sql.identifiers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 279,
      "display_name": "quote.sql.identifiers",
      "documentation": "When to quote table names, column names, and other identifiers in SQL\nstatements. For backward compatibility, the default isalways.Type: stringDefault: alwaysImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 279
      },
      "default": "alwaysimportance: medium"
    },
    {
      "name": "query.suffix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 280,
      "display_name": "query.suffix",
      "documentation": "Suffix to append at the end of the generated query.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 280
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "query.retry.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 281,
      "display_name": "query.retry.attempts",
      "documentation": "The number of times to retry SQL exceptions encountered when executing queries.Type: intDefault: -1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 281
      },
      "default": "-1importance: low"
    },
    {
      "name": "transaction.isolation.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 282,
      "display_name": "transaction.isolation.mode",
      "documentation": "The mode to control which transaction isolation level is used when running queries\nagainst the database. By default, no explicit transaction isolation mode is\nset.SQL_SERVER_SNAPSHOTwill only work against a connector configured to\nwrite to SQL Server. Options include:DEFAULT,READ_UNCOMMITTED,READ_COMMITTED,REPEATABLE_READ,SERIALIZABLE, andSQL_SERVER_SNAPSHOT.Type: stringDefault: DEFAULTValid Values: [DEFAULT,READ_UNCOMMITED,READ_COMMITED,REPEATABLE_READ,SERIALIZABLE,SQL_SERVER_SNAPSHOT]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 282
      },
      "default": "defaultvalid values: [default,read_uncommited,read_commited,repeatable_read,serializable,sql_server_snapshot]importance: low",
      "valid_values": [
        "default",
        "read_uncommited",
        "read_commited",
        "repeatable_read",
        "serializable",
        "sql_server_snapshot"
      ]
    },
    {
      "name": "table.types",
      "type": "LIST",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 283,
      "display_name": "table.types",
      "documentation": "By default, the JDBC connector will only detect tables with type TABLE from\nthe source Database. This config allows a comma-separated list of table\ntypes to extract.Type: list.TABLEVIEWSYSTEM TABLEGLOBAL TEMPORARYLOCAL TEMPORARYALIASSYNONYMIn most cases it only makes sense to have either TABLE or VIEW.Default: TABLEImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 283
      },
      "default": "tableimportance: low"
    },
    {
      "name": "poll.interval.ms",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 284,
      "display_name": "poll.interval.ms",
      "documentation": "Frequency in ms to poll for new data in each table.Type: intDefault: 5000Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 284
      },
      "default": "5000importance: high"
    },
    {
      "name": "batch.max.rows",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 285,
      "display_name": "batch.max.rows",
      "documentation": "Maximum number of rows to include in a single batch when polling for new data.\nThis setting can be used to limit the amount of data buffered internally in\nthe connector.Type: intDefault: 100Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 285
      },
      "default": "100importance: low"
    },
    {
      "name": "table.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 286,
      "display_name": "table.poll.interval.ms",
      "documentation": "Frequency in ms to poll for new or removed tables, which may result in updated\ntask configurations to start polling for data in added tables or stop polling\nfor data in removed tables.Type: longDefault: 60000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 286
      },
      "default": "60000importance: low"
    },
    {
      "name": "topic.prefix",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 287,
      "display_name": "topic.prefix",
      "documentation": "Prefix to prepend to table names to generate the name of the Apache Kafka\u00c2\u00ae topic to\npublish data to, or in the case of a custom query, the full name of the topic\nto publish to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 287
      }
    },
    {
      "name": "timestamp.delay.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 288,
      "display_name": "timestamp.delay.interval.ms",
      "documentation": "After a row with a certain timestamp appears, this is the amount of time the connector waits to\ninclude it in the result. You can add a delay to allow transactions with an\nearlier timestamp to complete. The first execution fetches all available\nrecords (starting at timestamp 0) until the current time minus the delay. Each\nsubsequent execution retrieves data from the last time you fetched until the\ncurrent time minus the delay.Type: longDefault: 0Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 288
      },
      "default": "0importance: high"
    },
    {
      "name": "db.timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 289,
      "display_name": "db.timezone",
      "documentation": "The name of the JDBC timezone used in the connector when querying with\ntime-based criteria. This should be the timezone of the database as well as\nall the columns being queried. The value set indb.timezonewill also be\nused for timestamp columns while pushing the records to Kafka. Defaults to UTC.Type: stringDefault: UTCValid Values: Any valid JDK time zoneImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 289
      },
      "default": "utcvalid values: any valid jdk time zoneimportance: medium"
    },
    {
      "name": "timestamp.granularity",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 290,
      "display_name": "timestamp.granularity",
      "documentation": "Define the granularity of the Timestamp column. Options include:Type: stringDefault: connect_logicalValid Values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using Kafka Connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSS\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSSSSS\u00e2\u0080\u0099Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 290
      },
      "default": "connect_logicalvalid values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using kafka connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.ssssss\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.sssssssss\u00e2\u0080\u0099importance: low",
      "valid_values": [
        "connect_logical",
        "nanos_long",
        "nanos_string",
        "nanos_iso_datetime_string"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 291,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 291
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 292,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 292
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 293,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 293
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 294,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 294
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 295,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 295
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 296,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 296
      },
      "default": "kafka broker value"
    },
    {
      "name": "connection.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 297,
      "display_name": "connection.url",
      "documentation": "JDBC connection URL.For example:jdbc:oracle:thin:@localhost:1521:orclpdb1,jdbc:mysql://localhost/db_name,jdbc:sqlserver://localhost;instance=SQLEXPRESS;databaseName=db_nameType: stringImportance: highDependents:table.whitelist,table.blacklist",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 297
      },
      "dependents": [
        "table.whitelist",
        "table.blacklist"
      ]
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 298,
      "display_name": "connection.user",
      "documentation": "JDBC connection user.Type: stringDefault: nullImportance: highConfluent strongly recommends you follow the principle of least\nprivilege when creating the database user for this connector. Permissions\nshould be tailored to specific actions on the required tables to ensure the\nconnector can only access the data, or perform the actions necessary for its\nfunction.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 298
      },
      "default": "nullimportance: highconfluent strongly recommends you follow the principle of least"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 299,
      "display_name": "connection.password",
      "documentation": "JDBC connection password.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 299
      },
      "default": "nullimportance: high"
    },
    {
      "name": "jdbc.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 300,
      "display_name": "jdbc.credentials.provider.class",
      "documentation": "Credentials provider to use for authentication to configure the database. By default, the connector usesDefaultJdbcCredentialsProvider. Configure the class with the fully qualified name of your\ncustom credentials provider class.Type: classDefault:io.confluent.connect.jdbc.util.DefaultJdbcCredentialsProviderValid Values: Any class implementing interface:io.confluent.connect.jdbc.util.JdbcCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 300
      },
      "default": "io.confluent.connect.jdbc.util.defaultjdbccredentialsprovidervalid values: any class implementing interface:io.confluent.connect.jdbc.util.jdbccredentialsproviderimportance: low"
    },
    {
      "name": "connection.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 301,
      "display_name": "connection.attempts",
      "documentation": "Maximum number of attempts to retrieve a valid JDBC connection. Must be a\npositive integer.Type: intDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 301
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "connection.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 302,
      "display_name": "connection.backoff.ms",
      "documentation": "Backoff time in milliseconds between connection attempts.Type: longDefault: 10000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 302
      },
      "default": "10000importance: low"
    },
    {
      "name": "catalog.pattern",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 303,
      "display_name": "catalog.pattern",
      "documentation": "Catalog pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the catalog.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 303
      },
      "default": "null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "table.whitelist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 304,
      "display_name": "table.whitelist",
      "documentation": "List of tables to include in copying. If specified,table.blacklistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.whitelist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 304
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "table.blacklist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 305,
      "display_name": "table.blacklist",
      "documentation": "List of tables to exclude from copying. If specified,table.whitelistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.blacklist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 305
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "schema.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 306,
      "display_name": "schema.pattern",
      "documentation": "Schema pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the schema.Importance: highImportantIf you leave this at the default null setting, the connector may time out\nand fail because of the large amount of table metadata being received.\nMake sure to set this parameter for large databases.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 306
      },
      "default": "null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "numeric.precision.mapping",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 307,
      "display_name": "numeric.precision.mapping",
      "documentation": "Whether or not to attempt mapping NUMERIC values by precision to integral\ntypes. This option is now deprecated. A future version may remove it\ncompletely. You should usenumeric.mappinginstead.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 307
      },
      "default": "falseimportance: low"
    },
    {
      "name": "numeric.mapping",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 308,
      "display_name": "numeric.mapping",
      "documentation": "Map NUMERIC values by precision and optionally scale to integral or decimal\ntypes.Type: stringDefault: nullValid Values: [none, precision_only, best_fit, best_fit_eager_double]Usenoneif all NUMERIC columns are to be represented by Connect\u00e2\u0080\u0099s\nDECIMAL logical type.Usebest_fitif NUMERIC columns should be cast to Connect\u00e2\u0080\u0099s INT8,\nINT16, INT32, INT64, or FLOAT64 based upon the column\u00e2\u0080\u0099s precision and scale.This option may\nstill represent the NUMERIC value as Connect DECIMAL if it cannot be cast to a native\ntype without losing precision. For example, a NUMERIC(20) type with precision 20 would\nnot be able to fit in a native INT64 without overflowing and thus would be retained as\nDECIMAL.Usebest_fit_eager_doubleif, in addition to the properties ofbest_fitdescribed\nabove, it is desirable to always cast NUMERIC columns with scale to Connect FLOAT64 type,\ndespite potential of loss in accuracy.Useprecision_onlyto map NUMERIC columns based only on the column\u00e2\u0080\u0099s\nprecision assuming that column\u00e2\u0080\u0099s scale is 0.Thenoneoption is the default, but may lead to serialization issues\nwith Avro since Connect\u00e2\u0080\u0099s DECIMAL type is mapped to its binary\nrepresentation.best_fitis often preferred since it maps to the most\nappropriate primitive type.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 308
      },
      "default": "nullvalid values: [none, precision_only, best_fit, best_fit_eager_double]usenoneif all numeric columns are to be represented by connect\u00e2\u0080\u0099s",
      "valid_values": [
        "none",
        "precision_only",
        "best_fit",
        "best_fit_eager_double"
      ]
    },
    {
      "name": "dialect.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 309,
      "display_name": "dialect.name",
      "documentation": "The name of the database dialect that should be used for this connector. By\ndefault this is empty, and the connector automatically determines the dialect\nbased upon the JDBC connection URL. Use this if you want to override that\nbehavior and use a specific dialect. All properly-packaged dialects in the\nJDBC connector plugin can be used.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [,Db2DatabaseDialect,MySqlDatabaseDialect,SybaseDatabaseDialect,GenericDatabaseDialect,OracleDatabaseDialect,SqlServerDatabaseDialect,PostgreSqlDatabaseDialect,SqliteDatabaseDialect,DerbyDatabaseDialect,SapHanaDatabaseDialect,MockDatabaseDialect,VerticaDatabaseDialect]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 309
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [,db2databasedialect,mysqldatabasedialect,sybasedatabasedialect,genericdatabasedialect,oracledatabasedialect,sqlserverdatabasedialect,postgresqldatabasedialect,sqlitedatabasedialect,derbydatabasedialect,saphanadatabasedialect,mockdatabasedialect,verticadatabasedialect]importance: low",
      "valid_values": [
        "",
        "db2databasedialect",
        "mysqldatabasedialect",
        "sybasedatabasedialect",
        "genericdatabasedialect",
        "oracledatabasedialect",
        "sqlserverdatabasedialect",
        "postgresqldatabasedialect",
        "sqlitedatabasedialect",
        "derbydatabasedialect",
        "saphanadatabasedialect",
        "mockdatabasedialect",
        "verticadatabasedialect"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 310,
      "display_name": "mode",
      "documentation": "The mode for updating a table each time it is polled. Options include:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect\nonly new rows. Note that this will not detect modifications or deletions of\nexisting rows.timestamp: use a timestamp (or timestamp-like) column to detect new and\nmodified rows. This assumes the column is updated with each write, and that\nvalues are monotonically incrementing, but not necessarily unique.timestamp+incrementing: use two columns, a timestamp column that detects\nnew and modified rows and a strictly incrementing column which provides a\nglobally unique ID for updates so each row can be assigned a unique stream\noffset.Importance: highDependents:incrementing.column.name,timestamp.column.name,validate.non.null",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 310
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect",
      "valid_values": [
        "",
        "bulk",
        "timestamp",
        "incrementing",
        "timestamp+incrementing"
      ],
      "dependents": [
        "incrementing.column.name",
        "timestamp.column.name",
        "validate.non.null"
      ]
    },
    {
      "name": "incrementing.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 311,
      "display_name": "incrementing.column.name",
      "documentation": "The name of the strictly incrementing column to use to detect new rows. Any\nempty value indicates the column should be autodetected by looking for an\nauto-incrementing column. This column may not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 311
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 312,
      "display_name": "timestamp.column.name",
      "documentation": "Comma-separated list of one or more timestamp columns to detect new or\nmodified rows using the COALESCE SQL function. Rows whose first non-null\ntimestamp value is greater than the largest previous timestamp value seen will\nbe discovered with each poll. At least one column should not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 312
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.initial",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 313,
      "display_name": "timestamp.initial",
      "documentation": "The epoch timestamp (in milliseconds) used for initial queries that use\ntimestamp criteria. Use -1 to use the current time. If not specified, all data\nwill be retrieved.Type: longDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 313
      },
      "default": "nullimportance: low"
    },
    {
      "name": "validate.non.null",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 314,
      "display_name": "validate.non.null",
      "documentation": "By default, the JDBC connector will validate that all incrementing and\ntimestamp tables have NOT NULL set for the columns being used as their\nID/timestamp. If the tables don\u00e2\u0080\u0099t, JDBC connector will fail to start. Setting\nthis to false will disable these checks.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 314
      },
      "default": "trueimportance: low"
    },
    {
      "name": "query",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 315,
      "display_name": "query",
      "documentation": "If specified,querycan select new or updated rows. Use this\nsetting if you want to join tables, select subsets of columns in a table, or\nfilter data. If used, the connector copies data using this query and\nwhole-table copying is disabled.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumTipYou can usequerywith a WHERE clause if you enablemode=bulk.\nThis loads all rows from a table at each iteration. To specify a WHERE\nclause inother query modes, it must be\npossible to append a WHERE clause to the query. SeeSpecifying a WHERE clause with query modesfor a detailed explanation.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 315
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumtipyou can usequerywith a where clause if you enablemode=bulk."
    },
    {
      "name": "quote.sql.identifiers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 316,
      "display_name": "quote.sql.identifiers",
      "documentation": "When to quote table names, column names, and other identifiers in SQL\nstatements. For backward compatibility, the default isalways.Type: stringDefault: alwaysImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 316
      },
      "default": "alwaysimportance: medium"
    },
    {
      "name": "query.suffix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 317,
      "display_name": "query.suffix",
      "documentation": "Suffix to append at the end of the generated query.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 317
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "query.retry.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 318,
      "display_name": "query.retry.attempts",
      "documentation": "The number of times to retry SQL exceptions encountered when executing queries.Type: intDefault: -1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 318
      },
      "default": "-1importance: low"
    },
    {
      "name": "transaction.isolation.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 319,
      "display_name": "transaction.isolation.mode",
      "documentation": "The mode to control which transaction isolation level is used when running queries\nagainst the database. By default, no explicit transaction isolation mode is\nset.SQL_SERVER_SNAPSHOTwill only work against a connector configured to\nwrite to SQL Server. Options include:DEFAULT,READ_UNCOMMITTED,READ_COMMITTED,REPEATABLE_READ,SERIALIZABLE, andSQL_SERVER_SNAPSHOT.Type: stringDefault: DEFAULTValid Values: [DEFAULT,READ_UNCOMMITED,READ_COMMITED,REPEATABLE_READ,SERIALIZABLE,SQL_SERVER_SNAPSHOT]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 319
      },
      "default": "defaultvalid values: [default,read_uncommited,read_commited,repeatable_read,serializable,sql_server_snapshot]importance: low",
      "valid_values": [
        "default",
        "read_uncommited",
        "read_commited",
        "repeatable_read",
        "serializable",
        "sql_server_snapshot"
      ]
    },
    {
      "name": "table.types",
      "type": "LIST",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 320,
      "display_name": "table.types",
      "documentation": "By default, the JDBC connector will only detect tables with type TABLE from\nthe source Database. This config allows a comma-separated list of table\ntypes to extract.Type: list.TABLEVIEWSYSTEM TABLEGLOBAL TEMPORARYLOCAL TEMPORARYALIASSYNONYMIn most cases it only makes sense to have either TABLE or VIEW.Default: TABLEImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 320
      },
      "default": "tableimportance: low"
    },
    {
      "name": "poll.interval.ms",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 321,
      "display_name": "poll.interval.ms",
      "documentation": "Frequency in ms to poll for new data in each table.Type: intDefault: 5000Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 321
      },
      "default": "5000importance: high"
    },
    {
      "name": "batch.max.rows",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 322,
      "display_name": "batch.max.rows",
      "documentation": "Maximum number of rows to include in a single batch when polling for new data.\nThis setting can be used to limit the amount of data buffered internally in\nthe connector.Type: intDefault: 100Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 322
      },
      "default": "100importance: low"
    },
    {
      "name": "table.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 323,
      "display_name": "table.poll.interval.ms",
      "documentation": "Frequency in ms to poll for new or removed tables, which may result in updated\ntask configurations to start polling for data in added tables or stop polling\nfor data in removed tables.Type: longDefault: 60000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 323
      },
      "default": "60000importance: low"
    },
    {
      "name": "topic.prefix",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 324,
      "display_name": "topic.prefix",
      "documentation": "Prefix to prepend to table names to generate the name of the Apache Kafka\u00c2\u00ae topic to\npublish data to, or in the case of a custom query, the full name of the topic\nto publish to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 324
      }
    },
    {
      "name": "timestamp.delay.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection Security",
      "order_in_group": 325,
      "display_name": "timestamp.delay.interval.ms",
      "documentation": "After a row with a certain timestamp appears, this is the amount of time the connector waits to\ninclude it in the result. You can add a delay to allow transactions with an\nearlier timestamp to complete. The first execution fetches all available\nrecords (starting at timestamp 0) until the current time minus the delay. Each\nsubsequent execution retrieves data from the last time you fetched until the\ncurrent time minus the delay.Type: longDefault: 0Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 325
      },
      "default": "0importance: high"
    },
    {
      "name": "db.timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 326,
      "display_name": "db.timezone",
      "documentation": "The name of the JDBC timezone used in the connector when querying with\ntime-based criteria. This should be the timezone of the database as well as\nall the columns being queried. The value set indb.timezonewill also be\nused for timestamp columns while pushing the records to Kafka. Defaults to UTC.Type: stringDefault: UTCValid Values: Any valid JDK time zoneImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 326
      },
      "default": "utcvalid values: any valid jdk time zoneimportance: medium"
    },
    {
      "name": "timestamp.granularity",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection Security",
      "order_in_group": 327,
      "display_name": "timestamp.granularity",
      "documentation": "Define the granularity of the Timestamp column. Options include:Type: stringDefault: connect_logicalValid Values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using Kafka Connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSS\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSSSSS\u00e2\u0080\u0099Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 327
      },
      "default": "connect_logicalvalid values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using kafka connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.ssssss\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.sssssssss\u00e2\u0080\u0099importance: low",
      "valid_values": [
        "connect_logical",
        "nanos_long",
        "nanos_string",
        "nanos_iso_datetime_string"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 328,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 328
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 329,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 329
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 330,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 330
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 331,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 331
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 332,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 332
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection Security",
      "order_in_group": 333,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 333
      },
      "default": "kafka broker value"
    },
    {
      "name": "connection.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database",
      "order_in_group": 334,
      "display_name": "connection.url",
      "documentation": "JDBC connection URL.For example:jdbc:oracle:thin:@localhost:1521:orclpdb1,jdbc:mysql://localhost/db_name,jdbc:sqlserver://localhost;instance=SQLEXPRESS;databaseName=db_nameType: stringImportance: highDependents:table.whitelist,table.blacklist",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 334
      },
      "dependents": [
        "table.whitelist",
        "table.blacklist"
      ]
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database",
      "order_in_group": 335,
      "display_name": "connection.user",
      "documentation": "JDBC connection user.Type: stringDefault: nullImportance: highConfluent strongly recommends you follow the principle of least\nprivilege when creating the database user for this connector. Permissions\nshould be tailored to specific actions on the required tables to ensure the\nconnector can only access the data, or perform the actions necessary for its\nfunction.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 335
      },
      "default": "nullimportance: highconfluent strongly recommends you follow the principle of least"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database",
      "order_in_group": 336,
      "display_name": "connection.password",
      "documentation": "JDBC connection password.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 336
      },
      "default": "nullimportance: high"
    },
    {
      "name": "jdbc.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database",
      "order_in_group": 337,
      "display_name": "jdbc.credentials.provider.class",
      "documentation": "Credentials provider to use for authentication to configure the database. By default, the connector usesDefaultJdbcCredentialsProvider. Configure the class with the fully qualified name of your\ncustom credentials provider class.Type: classDefault:io.confluent.connect.jdbc.util.DefaultJdbcCredentialsProviderValid Values: Any class implementing interface:io.confluent.connect.jdbc.util.JdbcCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 337
      },
      "default": "io.confluent.connect.jdbc.util.defaultjdbccredentialsprovidervalid values: any class implementing interface:io.confluent.connect.jdbc.util.jdbccredentialsproviderimportance: low"
    },
    {
      "name": "connection.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database",
      "order_in_group": 338,
      "display_name": "connection.attempts",
      "documentation": "Maximum number of attempts to retrieve a valid JDBC connection. Must be a\npositive integer.Type: intDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 338
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "connection.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database",
      "order_in_group": 339,
      "display_name": "connection.backoff.ms",
      "documentation": "Backoff time in milliseconds between connection attempts.Type: longDefault: 10000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 339
      },
      "default": "10000importance: low"
    },
    {
      "name": "catalog.pattern",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database",
      "order_in_group": 340,
      "display_name": "catalog.pattern",
      "documentation": "Catalog pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the catalog.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 340
      },
      "default": "null\"\"retrieves those without a catalognull (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "table.whitelist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database",
      "order_in_group": 341,
      "display_name": "table.whitelist",
      "documentation": "List of tables to include in copying. If specified,table.blacklistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.whitelist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 341
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "table.blacklist",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database",
      "order_in_group": 342,
      "display_name": "table.blacklist",
      "documentation": "List of tables to exclude from copying. If specified,table.whitelistmay\nnot be set. Use a comma-separated list to specify multiple tables (for\nexample,table.blacklist:\"User,Address,Email\").Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 342
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "schema.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Database",
      "order_in_group": 343,
      "display_name": "schema.pattern",
      "documentation": "Schema pattern to fetch table metadata from the database.Type: stringDefault: null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the\nsearch and that all table metadata is fetched, regardless of the schema.Importance: highImportantIf you leave this at the default null setting, the connector may time out\nand fail because of the large amount of table metadata being received.\nMake sure to set this parameter for large databases.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 343
      },
      "default": "null\"\"retrieves those without a schema.null (default) indicates that the schema name is not used to narrow the"
    },
    {
      "name": "numeric.precision.mapping",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database",
      "order_in_group": 344,
      "display_name": "numeric.precision.mapping",
      "documentation": "Whether or not to attempt mapping NUMERIC values by precision to integral\ntypes. This option is now deprecated. A future version may remove it\ncompletely. You should usenumeric.mappinginstead.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 344
      },
      "default": "falseimportance: low"
    },
    {
      "name": "numeric.mapping",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database",
      "order_in_group": 345,
      "display_name": "numeric.mapping",
      "documentation": "Map NUMERIC values by precision and optionally scale to integral or decimal\ntypes.Type: stringDefault: nullValid Values: [none, precision_only, best_fit, best_fit_eager_double]Usenoneif all NUMERIC columns are to be represented by Connect\u00e2\u0080\u0099s\nDECIMAL logical type.Usebest_fitif NUMERIC columns should be cast to Connect\u00e2\u0080\u0099s INT8,\nINT16, INT32, INT64, or FLOAT64 based upon the column\u00e2\u0080\u0099s precision and scale.This option may\nstill represent the NUMERIC value as Connect DECIMAL if it cannot be cast to a native\ntype without losing precision. For example, a NUMERIC(20) type with precision 20 would\nnot be able to fit in a native INT64 without overflowing and thus would be retained as\nDECIMAL.Usebest_fit_eager_doubleif, in addition to the properties ofbest_fitdescribed\nabove, it is desirable to always cast NUMERIC columns with scale to Connect FLOAT64 type,\ndespite potential of loss in accuracy.Useprecision_onlyto map NUMERIC columns based only on the column\u00e2\u0080\u0099s\nprecision assuming that column\u00e2\u0080\u0099s scale is 0.Thenoneoption is the default, but may lead to serialization issues\nwith Avro since Connect\u00e2\u0080\u0099s DECIMAL type is mapped to its binary\nrepresentation.best_fitis often preferred since it maps to the most\nappropriate primitive type.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 345
      },
      "default": "nullvalid values: [none, precision_only, best_fit, best_fit_eager_double]usenoneif all numeric columns are to be represented by connect\u00e2\u0080\u0099s",
      "valid_values": [
        "none",
        "precision_only",
        "best_fit",
        "best_fit_eager_double"
      ]
    },
    {
      "name": "dialect.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Database",
      "order_in_group": 346,
      "display_name": "dialect.name",
      "documentation": "The name of the database dialect that should be used for this connector. By\ndefault this is empty, and the connector automatically determines the dialect\nbased upon the JDBC connection URL. Use this if you want to override that\nbehavior and use a specific dialect. All properly-packaged dialects in the\nJDBC connector plugin can be used.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [,Db2DatabaseDialect,MySqlDatabaseDialect,SybaseDatabaseDialect,GenericDatabaseDialect,OracleDatabaseDialect,SqlServerDatabaseDialect,PostgreSqlDatabaseDialect,SqliteDatabaseDialect,DerbyDatabaseDialect,SapHanaDatabaseDialect,MockDatabaseDialect,VerticaDatabaseDialect]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 346
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [,db2databasedialect,mysqldatabasedialect,sybasedatabasedialect,genericdatabasedialect,oracledatabasedialect,sqlserverdatabasedialect,postgresqldatabasedialect,sqlitedatabasedialect,derbydatabasedialect,saphanadatabasedialect,mockdatabasedialect,verticadatabasedialect]importance: low",
      "valid_values": [
        "",
        "db2databasedialect",
        "mysqldatabasedialect",
        "sybasedatabasedialect",
        "genericdatabasedialect",
        "oracledatabasedialect",
        "sqlserverdatabasedialect",
        "postgresqldatabasedialect",
        "sqlitedatabasedialect",
        "derbydatabasedialect",
        "saphanadatabasedialect",
        "mockdatabasedialect",
        "verticadatabasedialect"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Mode",
      "order_in_group": 347,
      "display_name": "mode",
      "documentation": "The mode for updating a table each time it is polled. Options include:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect\nonly new rows. Note that this will not detect modifications or deletions of\nexisting rows.timestamp: use a timestamp (or timestamp-like) column to detect new and\nmodified rows. This assumes the column is updated with each write, and that\nvalues are monotonically incrementing, but not necessarily unique.timestamp+incrementing: use two columns, a timestamp column that detects\nnew and modified rows and a strictly incrementing column which provides a\nglobally unique ID for updates so each row can be assigned a unique stream\noffset.Importance: highDependents:incrementing.column.name,timestamp.column.name,validate.non.null",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 347
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, bulk, timestamp, incrementing, timestamp+incrementing]bulk: perform a bulk load of the entire table each time it is polledincrementing: use a strictly incrementing column on each table to detect",
      "valid_values": [
        "",
        "bulk",
        "timestamp",
        "incrementing",
        "timestamp+incrementing"
      ],
      "dependents": [
        "incrementing.column.name",
        "timestamp.column.name",
        "validate.non.null"
      ]
    },
    {
      "name": "incrementing.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Mode",
      "order_in_group": 348,
      "display_name": "incrementing.column.name",
      "documentation": "The name of the strictly incrementing column to use to detect new rows. Any\nempty value indicates the column should be autodetected by looking for an\nauto-incrementing column. This column may not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 348
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.column.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Mode",
      "order_in_group": 349,
      "display_name": "timestamp.column.name",
      "documentation": "Comma-separated list of one or more timestamp columns to detect new or\nmodified rows using the COALESCE SQL function. Rows whose first non-null\ntimestamp value is greater than the largest previous timestamp value seen will\nbe discovered with each poll. At least one column should not be nullable.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 349
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.initial",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Mode",
      "order_in_group": 350,
      "display_name": "timestamp.initial",
      "documentation": "The epoch timestamp (in milliseconds) used for initial queries that use\ntimestamp criteria. Use -1 to use the current time. If not specified, all data\nwill be retrieved.Type: longDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 350
      },
      "default": "nullimportance: low"
    },
    {
      "name": "validate.non.null",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Mode",
      "order_in_group": 351,
      "display_name": "validate.non.null",
      "documentation": "By default, the JDBC connector will validate that all incrementing and\ntimestamp tables have NOT NULL set for the columns being used as their\nID/timestamp. If the tables don\u00e2\u0080\u0099t, JDBC connector will fail to start. Setting\nthis to false will disable these checks.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 351
      },
      "default": "trueimportance: low"
    },
    {
      "name": "query",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Mode",
      "order_in_group": 352,
      "display_name": "query",
      "documentation": "If specified,querycan select new or updated rows. Use this\nsetting if you want to join tables, select subsets of columns in a table, or\nfilter data. If used, the connector copies data using this query and\nwhole-table copying is disabled.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumTipYou can usequerywith a WHERE clause if you enablemode=bulk.\nThis loads all rows from a table at each iteration. To specify a WHERE\nclause inother query modes, it must be\npossible to append a WHERE clause to the query. SeeSpecifying a WHERE clause with query modesfor a detailed explanation.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 352
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumtipyou can usequerywith a where clause if you enablemode=bulk."
    },
    {
      "name": "quote.sql.identifiers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Mode",
      "order_in_group": 353,
      "display_name": "quote.sql.identifiers",
      "documentation": "When to quote table names, column names, and other identifiers in SQL\nstatements. For backward compatibility, the default isalways.Type: stringDefault: alwaysImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 353
      },
      "default": "alwaysimportance: medium"
    },
    {
      "name": "query.suffix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Mode",
      "order_in_group": 354,
      "display_name": "query.suffix",
      "documentation": "Suffix to append at the end of the generated query.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 354
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "query.retry.attempts",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Mode",
      "order_in_group": 355,
      "display_name": "query.retry.attempts",
      "documentation": "The number of times to retry SQL exceptions encountered when executing queries.Type: intDefault: -1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 355
      },
      "default": "-1importance: low"
    },
    {
      "name": "transaction.isolation.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Mode",
      "order_in_group": 356,
      "display_name": "transaction.isolation.mode",
      "documentation": "The mode to control which transaction isolation level is used when running queries\nagainst the database. By default, no explicit transaction isolation mode is\nset.SQL_SERVER_SNAPSHOTwill only work against a connector configured to\nwrite to SQL Server. Options include:DEFAULT,READ_UNCOMMITTED,READ_COMMITTED,REPEATABLE_READ,SERIALIZABLE, andSQL_SERVER_SNAPSHOT.Type: stringDefault: DEFAULTValid Values: [DEFAULT,READ_UNCOMMITED,READ_COMMITED,REPEATABLE_READ,SERIALIZABLE,SQL_SERVER_SNAPSHOT]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 356
      },
      "default": "defaultvalid values: [default,read_uncommited,read_commited,repeatable_read,serializable,sql_server_snapshot]importance: low",
      "valid_values": [
        "default",
        "read_uncommited",
        "read_commited",
        "repeatable_read",
        "serializable",
        "sql_server_snapshot"
      ]
    },
    {
      "name": "table.types",
      "type": "LIST",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 357,
      "display_name": "table.types",
      "documentation": "By default, the JDBC connector will only detect tables with type TABLE from\nthe source Database. This config allows a comma-separated list of table\ntypes to extract.Type: list.TABLEVIEWSYSTEM TABLEGLOBAL TEMPORARYLOCAL TEMPORARYALIASSYNONYMIn most cases it only makes sense to have either TABLE or VIEW.Default: TABLEImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 357
      },
      "default": "tableimportance: low"
    },
    {
      "name": "poll.interval.ms",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 358,
      "display_name": "poll.interval.ms",
      "documentation": "Frequency in ms to poll for new data in each table.Type: intDefault: 5000Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 358
      },
      "default": "5000importance: high"
    },
    {
      "name": "batch.max.rows",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 359,
      "display_name": "batch.max.rows",
      "documentation": "Maximum number of rows to include in a single batch when polling for new data.\nThis setting can be used to limit the amount of data buffered internally in\nthe connector.Type: intDefault: 100Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 359
      },
      "default": "100importance: low"
    },
    {
      "name": "table.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 360,
      "display_name": "table.poll.interval.ms",
      "documentation": "Frequency in ms to poll for new or removed tables, which may result in updated\ntask configurations to start polling for data in added tables or stop polling\nfor data in removed tables.Type: longDefault: 60000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 360
      },
      "default": "60000importance: low"
    },
    {
      "name": "topic.prefix",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 361,
      "display_name": "topic.prefix",
      "documentation": "Prefix to prepend to table names to generate the name of the Apache Kafka\u00c2\u00ae topic to\npublish data to, or in the case of a custom query, the full name of the topic\nto publish to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 361
      }
    },
    {
      "name": "timestamp.delay.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 362,
      "display_name": "timestamp.delay.interval.ms",
      "documentation": "After a row with a certain timestamp appears, this is the amount of time the connector waits to\ninclude it in the result. You can add a delay to allow transactions with an\nearlier timestamp to complete. The first execution fetches all available\nrecords (starting at timestamp 0) until the current time minus the delay. Each\nsubsequent execution retrieves data from the last time you fetched until the\ncurrent time minus the delay.Type: longDefault: 0Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 362
      },
      "default": "0importance: high"
    },
    {
      "name": "db.timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 363,
      "display_name": "db.timezone",
      "documentation": "The name of the JDBC timezone used in the connector when querying with\ntime-based criteria. This should be the timezone of the database as well as\nall the columns being queried. The value set indb.timezonewill also be\nused for timestamp columns while pushing the records to Kafka. Defaults to UTC.Type: stringDefault: UTCValid Values: Any valid JDK time zoneImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 363
      },
      "default": "utcvalid values: any valid jdk time zoneimportance: medium"
    },
    {
      "name": "timestamp.granularity",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 364,
      "display_name": "timestamp.granularity",
      "documentation": "Define the granularity of the Timestamp column. Options include:Type: stringDefault: connect_logicalValid Values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using Kafka Connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSS\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-MM-dd\u00e2\u0080\u0099T\u00e2\u0080\u0099HH:mm:ss.SSSSSSSSS\u00e2\u0080\u0099Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 364
      },
      "default": "connect_logicalvalid values: [connect_logical, nanos_long, nanos_string, nanos_iso_datetime_string]connect_logical (default): represents timestamp values using kafka connect\u00e2\u0080\u0099s built-in representationsmicros_long: represents timestamp values as micros since epochmicros_string: represents timestamp values as micros since epoch in stringmicros_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.ssssss\u00e2\u0080\u0099nanos_long: represents timestamp values as nanos since epochnanos_string: represents timestamp values as nanos since epoch in stringnanos_iso_datetime_string: uses the iso format \u00e2\u0080\u0098yyyy-mm-dd\u00e2\u0080\u0099t\u00e2\u0080\u0099hh:mm:ss.sssssssss\u00e2\u0080\u0099importance: low",
      "valid_values": [
        "connect_logical",
        "nanos_long",
        "nanos_string",
        "nanos_iso_datetime_string"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 365,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 365
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 366,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 366
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 367,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 367
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 368,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 368
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 369,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 369
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 370,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 370
      },
      "default": "kafka broker value"
    },
    {
      "name": "Search by configuration property name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "Search by configuration property name",
      "documentation": "Enter a string to search and filter by configuration property name.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "name",
      "documentation": "Globally unique name to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "connector.class",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 3,
      "display_name": "connector.class",
      "documentation": "Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \u00e2\u0080\u009cFileStreamSink\u00e2\u0080\u009d or \u00e2\u0080\u009cFileStreamSinkConnector\u00e2\u0080\u009d to make the configuration a bit shorter",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "tasks.max",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 4,
      "display_name": "tasks.max",
      "documentation": "Maximum number of tasks to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "tasks.max.enforce",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 5,
      "display_name": "tasks.max.enforce",
      "documentation": "(Deprecated) Whether to enforce that the tasks.max property is respected by the connector. By default, connectors that generate too many tasks will fail, and existing sets of tasks that exceed the tasks.max property will also be failed. If this property is set to false, then connectors will be allowed to generate more than the maximum number of tasks, and existing sets of tasks that exceed the tasks.max property will be allowed to run. This property is deprecated and will be removed in an upcoming major release.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "key.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 6,
      "display_name": "key.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "value.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 7,
      "display_name": "value.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "header.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 8,
      "display_name": "header.converter",
      "documentation": "HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      }
    },
    {
      "name": "config.action.reload",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 9,
      "display_name": "config.action.reload",
      "documentation": "The action that Connect should take on the connector when changes in external configuration providers result in a change in the connector\u00e2\u0080\u0099s configuration properties. A value of \u00e2\u0080\u0098none\u00e2\u0080\u0099 indicates that Connect will do nothing. A value of \u00e2\u0080\u0098restart\u00e2\u0080\u0099 indicates that Connect should restart/reload the connector with the updated configuration properties.The restart may actually be scheduled in the future if the external configuration provider indicates that a configuration value will expire in the future.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      }
    },
    {
      "name": "transforms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 10,
      "display_name": "transforms",
      "documentation": "Aliases for the transformations to be applied to records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      }
    },
    {
      "name": "predicates",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 11,
      "display_name": "predicates",
      "documentation": "Aliases for the predicates used by transformations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "errors.retry.timeout",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 12,
      "display_name": "errors.retry.timeout",
      "documentation": "The maximum duration in milliseconds that a failed operation will be reattempted. The default is 0, which means no retries will be attempted. Use -1 for infinite retries.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "errors.retry.delay.max.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 13,
      "display_name": "errors.retry.delay.max.ms",
      "documentation": "The maximum duration in milliseconds between consecutive retry attempts. Jitter will be added to the delay once this limit is reached to prevent thundering herd issues.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      }
    },
    {
      "name": "errors.tolerance",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 14,
      "display_name": "errors.tolerance",
      "documentation": "Behavior for tolerating errors during connector operation. \u00e2\u0080\u0098none\u00e2\u0080\u0099 is the default value and signals that any error will result in an immediate connector task failure; \u00e2\u0080\u0098all\u00e2\u0080\u0099 changes the behavior to skip over problematic records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "errors.log.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 15,
      "display_name": "errors.log.enable",
      "documentation": "If true, write each error and the details of the failed operation and problematic record to the Connect application log. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, so that only errors that are not tolerated are reported.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      }
    },
    {
      "name": "errors.log.include.messages",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 16,
      "display_name": "errors.log.include.messages",
      "documentation": "Whether to include in the log the Connect record that resulted in a failure. For sink records, the topic, partition, offset, and timestamp will be logged. For source records, the key and value (and their schemas), all headers, and the timestamp, Kafka topic, Kafka partition, source partition, and source offset will be logged. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, which will prevent record keys, values, and headers from being written to log files.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "exactly.once.support",
      "type": "STRING",
      "required": true,
      "importance": "HIGH",
      "group": "Common",
      "order_in_group": 18,
      "display_name": "exactly.once.support",
      "documentation": "Permitted values are requested, required. If set to \u00e2\u0080\u009crequired\u00e2\u0080\u009d, forces a preflight check for the connector to ensure that it can provide exactly-once semantics with the given configuration. Some connectors may be capable of providing exactly-once semantics but not signal to Connect that they support this; in that case, documentation for the connector should be consulted carefully before creating it, and the value for this property should be set to \u00e2\u0080\u009crequested\u00e2\u0080\u009d. Additionally, if the value is set to \u00e2\u0080\u009crequired\u00e2\u0080\u009d but the worker that performs preflight validation does not have exactly-once support enabled for source connectors, requests to create or validate the connector will fail.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      }
    },
    {
      "name": "transaction.boundary",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 19,
      "display_name": "transaction.boundary",
      "documentation": "Permitted values are: poll, interval, connector. If set to \u00e2\u0080\u0098poll\u00e2\u0080\u0099, a new producer transaction will be started and committed for every batch of records that each task from this connector provides to Connect. If set to \u00e2\u0080\u0098connector\u00e2\u0080\u0099, relies on connector-defined transaction boundaries; note that not all connectors are capable of defining their own transaction boundaries, and in that case, attempts to instantiate a connector with this value will fail. Finally, if set to \u00e2\u0080\u0098interval\u00e2\u0080\u0099, commits transactions only after a user-defined time interval has passed.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      }
    },
    {
      "name": "transaction.boundary.interval.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 20,
      "display_name": "transaction.boundary.interval.ms",
      "documentation": "If \u00e2\u0080\u0098transaction.boundary\u00e2\u0080\u0099 is set to \u00e2\u0080\u0098interval\u00e2\u0080\u0099, determines the interval for producer transaction commits by connector tasks. If unset, defaults to the value of the worker-level \u00e2\u0080\u0098offset.flush.interval.ms\u00e2\u0080\u0099 property. It has no effect if a different transaction.boundary is specified.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      }
    },
    {
      "name": "offsets.storage.topic",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 21,
      "display_name": "offsets.storage.topic",
      "documentation": "The name of a separate offsets topic to use for this connector. If empty or not specified, the worker\u00e2\u0080\u0099s global offsets topic name will be used. If specified, the offsets topic will be created if it does not already exist on the Kafka cluster targeted by this connector (which may be different from the one used for the worker\u00e2\u0080\u0099s global offsets topic if the bootstrap.servers property of the connector\u00e2\u0080\u0099s producer has been overridden from the worker\u00e2\u0080\u0099s). Only applicable in distributed mode; in standalone mode, setting this property will have no effect.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      }
    }
  ]
}