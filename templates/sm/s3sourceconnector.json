{
  "template_id": "S3SourceConnector",
  "connector_type": "SOURCE",
  "connector.class": "io.confluent.connect.s3.source.S3SourceConnector",
  "name": "{{.logicalClusterId}}",
  "imports": [],
  "group_order": [
    "S3 Parameters",
    "S3 Parameters (Generalized Connector Only)",
    "Connector Parameters",
    "Storage Parameters",
    "Partitioner Parameters (Backup and Restore Connector Only)",
    "Auto topic creation",
    "CSFLE configuration",
    "Confluent Platform license",
    "Confluent license properties",
    "License topic configuration",
    "License topic ACLs",
    "Override Default Configuration Properties"
  ],
  "config_defs": [
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 1,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 1
      },
      "default": "nullimportance: high"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 2,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 3,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]importance: medium"
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 4,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector uses \u00e2\u0080\u0098DefaultAWSCredentialsProviderChain\u00e2\u0080\u0099.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 5,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS Access Key ID used to connect to S3. If specified, this will be used over the credentials provider chain.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 6,
      "display_name": "aws.secret.access.key",
      "documentation": "The AWS Secret Access Key used to connect to S3. If specified, this will be used over the credentials provider chain.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 7,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.path.style.access",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 8,
      "display_name": "s3.path.style.access",
      "documentation": "Whether to use S3 path-style access.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 9,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 10,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 11,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 12,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 13,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable/disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client waits for a 100 (CONTINUE) response before sending the request body. If false, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      },
      "default": "trueimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 14,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors, including, but not limited to the value of this parameter, type of exception occurred, throttling settings of the underlying S3 client, etc.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 15,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server-Side Encryption algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: either one of [kms, aes256], or an empty string.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: either one of [kms, aes256], or an empty string.importance: low"
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 16,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server-Side Encryption customer-provided key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 17,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for Byte Array Format. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator looks like multiple records in the S3 object output.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      },
      "default": "nullimportance: low"
    },
    {
      "name": "schema.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 18,
      "display_name": "schema.cache.size",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "record.batch.max.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 19,
      "display_name": "record.batch.max.size",
      "documentation": "The maximum amount of records to return each time S3 is polled.Type: intDefault: 200Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      },
      "default": "200valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 20,
      "display_name": "mode",
      "documentation": "The connector\u00e2\u0080\u0099s operation mode.Type: stringDefault: RESTORE_BACKUPValid Values: [GENERIC, RESTORE_BACKUP]Importance: highDependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      },
      "default": "restore_backupvalid values: [generic, restore_backup]importance: highdependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "valid_values": [
        "generic",
        "restore_backup"
      ],
      "dependents": [
        "task.batch.size",
        "starting.timestamp",
        "bucket.listing.max.objects.threshold",
        "topic.regex.list",
        "partitioner.class",
        "partition.field.name",
        "path.format"
      ]
    },
    {
      "name": "topic.regex.list",
      "type": "LISTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 21,
      "display_name": "topic.regex.list",
      "documentation": "A comma-separated list of pairs of type<kafkatopic>:<regex>that is used to map file paths to Kafka topics.\nAn example might betopic1:.*\\.jsonto source all files ending in.jsonto a kafka topic namedtopic1.\nYou can specify multiple of these<kafkatopic>:<regex>mappings to send different sets of files to different topics. Any files that aren\u00e2\u0080\u0099t mapped by a regex will be ignored and not sourced.\nFiles that match multiple mappings will be sent to the first topic in the list that maps the file.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: A list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: a list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...importance: high"
    },
    {
      "name": "task.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 22,
      "display_name": "task.batch.size",
      "documentation": "The number of files assigned to each task at a time.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,2000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 22
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,2000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2000"
      ]
    },
    {
      "name": "file.discovery.starting.timestamp",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 23,
      "display_name": "file.discovery.starting.timestamp",
      "documentation": "A Unix timestamp (in epoch milliseconds) that denotes where to start\nprocessing files. Any file encountered with a creation time earlier than this\nwill be ignored.ImportantThefile.discovery.starting.timestampconfiguration property should\nonly be used when there are no stored offsets for a connector\u00e2\u0080\u0093that is, this\nparameter is intended for new connectors to start from a specific timestamp\nrather than reading all the files in a bucket.Type: longDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 23
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "bucket.listing.max.objects.threshold",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 24,
      "display_name": "bucket.listing.max.objects.threshold",
      "documentation": "An integer that represents the maximum number of objects the connector will\nindex from the bucket at a time before failing. A value of-1indicates\nno limit.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 24
      },
      "default": "-1importance: medium"
    },
    {
      "name": "parse.error.topic.prefix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 25,
      "display_name": "parse.error.topic.prefix",
      "documentation": "The topic name prefix for a topic where records with error information would\nbe published whenever the connector encounters a malformed file or an\nexception while parsing the source file. This setting appends the topic prefix\nwith-${connectorName}. The final error topic name would be${parse.error.topic.prefix}-${connectorName}. The connector will populate\nthis topic whenbehavior.on.erroris set to eitherignoreorlog.\nAdditionally, connector uses this topic to write empty data in case of certain\nedge conditions to ensure connector is able to continue processing the files.Type: stringDefault:errorImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 25
      },
      "default": "errorimportance: medium"
    },
    {
      "name": "s3.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 26,
      "display_name": "s3.poll.interval.ms",
      "documentation": "Frequency in milliseconds to poll for new or removed folders. This may result in updated task configurations starting to poll for data in added folders or stopping polling for data in removed folders.Type: longDefault: 60000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 26
      },
      "default": "60000importance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 27,
      "display_name": "format.class",
      "documentation": "Class responsible for converting S3 objects to source records.Type: classValid Values:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.string.StringFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 27
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 28,
      "display_name": "topics.dir",
      "documentation": "Top level directory where data was stored to be re-ingested by Kafka.NoteWith the Generalized S3 Source connector, when thetopics.dirparameter\nis set to a blank space value ('') , the connector reads all the\ndata specified under the S3 bucket. If you don\u00e2\u0080\u0099t set a value fortopics.dir, the configuration property takes the default value oftopicsand expects all the data in the specified S3 bucket to be\nunder a folder calledtopics.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 28
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 29,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter pattern.Type: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 29
      },
      "default": "/importance: medium"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 30,
      "display_name": "behavior.on.error",
      "documentation": "Sets how the connector handles errors that occur when processing records and parsing source files.failimmediately stops the connector and throws the encountered exception.ignorewill log an event populated with filename and exception-message in event header, into the error-topic. This file is ignored and connector progresses to next file.logfollows same steps asignore, additionally logs the encountered exception.Note - error-topic is only populated whenignoreORlogare used. Error topic is named -${parse.error.topic.prefix}-${connectorName}Type: stringDefault: failValid Values:fail,ignore,logImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 30
      },
      "default": "failvalid values:fail,ignore,logimportance: medium"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 31,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when reading data from the store.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 31
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: high"
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 32,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 32
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 33,
      "display_name": "path.format",
      "documentation": "This configuration that was used to set the format of the data directories when partitioning with a TimeBasedPartitioner. For example, if you setpath.formatto'year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, then a valid data directories would be:/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 33
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 34,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for Byte Array Format. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 34
      },
      "default": ".binimportance: low"
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 35,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 35
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 36,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 36
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 37,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 37
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 38,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 38
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 39,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 39
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 40,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 40
      },
      "default": "kafka broker value"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 41,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster used for licensing. All servers in the cluster will be discovered from the initial connection. This list should be in the form <code>host1:port1,host2:port2,\u00e2\u0080\u00a6</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 41
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 42,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 42
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 43,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration, including licensing information. This is used only if the topic does not already exist, and the default of 3 is appropriate for production use. If you are using a development environment with less than 3 brokers, you must set this to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 43
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 44,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 44
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 45,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 45
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 46,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 46
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 47,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 47
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 48,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 48
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 49,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 49
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 50,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 50
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 51,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 51
      },
      "default": "nullimportance: high"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 52,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 52
      }
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 53,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 53
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]importance: medium"
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 54,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector uses \u00e2\u0080\u0098DefaultAWSCredentialsProviderChain\u00e2\u0080\u0099.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 54
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 55,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS Access Key ID used to connect to S3. If specified, this will be used over the credentials provider chain.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 55
      }
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 56,
      "display_name": "aws.secret.access.key",
      "documentation": "The AWS Secret Access Key used to connect to S3. If specified, this will be used over the credentials provider chain.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 56
      }
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 57,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 57
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.path.style.access",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 58,
      "display_name": "s3.path.style.access",
      "documentation": "Whether to use S3 path-style access.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 58
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 59,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 59
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 60,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 60
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 61,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 61
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 62,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 62
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 63,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable/disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client waits for a 100 (CONTINUE) response before sending the request body. If false, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 63
      },
      "default": "trueimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 64,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors, including, but not limited to the value of this parameter, type of exception occurred, throttling settings of the underlying S3 client, etc.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 64
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 65,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server-Side Encryption algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: either one of [kms, aes256], or an empty string.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 65
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: either one of [kms, aes256], or an empty string.importance: low"
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 66,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server-Side Encryption customer-provided key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 66
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 67,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for Byte Array Format. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator looks like multiple records in the S3 object output.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 67
      },
      "default": "nullimportance: low"
    },
    {
      "name": "schema.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 68,
      "display_name": "schema.cache.size",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 68
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "record.batch.max.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 69,
      "display_name": "record.batch.max.size",
      "documentation": "The maximum amount of records to return each time S3 is polled.Type: intDefault: 200Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 69
      },
      "default": "200valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 70,
      "display_name": "mode",
      "documentation": "The connector\u00e2\u0080\u0099s operation mode.Type: stringDefault: RESTORE_BACKUPValid Values: [GENERIC, RESTORE_BACKUP]Importance: highDependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 70
      },
      "default": "restore_backupvalid values: [generic, restore_backup]importance: highdependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "valid_values": [
        "generic",
        "restore_backup"
      ],
      "dependents": [
        "task.batch.size",
        "starting.timestamp",
        "bucket.listing.max.objects.threshold",
        "topic.regex.list",
        "partitioner.class",
        "partition.field.name",
        "path.format"
      ]
    },
    {
      "name": "topic.regex.list",
      "type": "LISTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 71,
      "display_name": "topic.regex.list",
      "documentation": "A comma-separated list of pairs of type<kafkatopic>:<regex>that is used to map file paths to Kafka topics.\nAn example might betopic1:.*\\.jsonto source all files ending in.jsonto a kafka topic namedtopic1.\nYou can specify multiple of these<kafkatopic>:<regex>mappings to send different sets of files to different topics. Any files that aren\u00e2\u0080\u0099t mapped by a regex will be ignored and not sourced.\nFiles that match multiple mappings will be sent to the first topic in the list that maps the file.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: A list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 71
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: a list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...importance: high"
    },
    {
      "name": "task.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 72,
      "display_name": "task.batch.size",
      "documentation": "The number of files assigned to each task at a time.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,2000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 72
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,2000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2000"
      ]
    },
    {
      "name": "file.discovery.starting.timestamp",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 73,
      "display_name": "file.discovery.starting.timestamp",
      "documentation": "A Unix timestamp (in epoch milliseconds) that denotes where to start\nprocessing files. Any file encountered with a creation time earlier than this\nwill be ignored.ImportantThefile.discovery.starting.timestampconfiguration property should\nonly be used when there are no stored offsets for a connector\u00e2\u0080\u0093that is, this\nparameter is intended for new connectors to start from a specific timestamp\nrather than reading all the files in a bucket.Type: longDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 73
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "bucket.listing.max.objects.threshold",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 74,
      "display_name": "bucket.listing.max.objects.threshold",
      "documentation": "An integer that represents the maximum number of objects the connector will\nindex from the bucket at a time before failing. A value of-1indicates\nno limit.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 74
      },
      "default": "-1importance: medium"
    },
    {
      "name": "parse.error.topic.prefix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 75,
      "display_name": "parse.error.topic.prefix",
      "documentation": "The topic name prefix for a topic where records with error information would\nbe published whenever the connector encounters a malformed file or an\nexception while parsing the source file. This setting appends the topic prefix\nwith-${connectorName}. The final error topic name would be${parse.error.topic.prefix}-${connectorName}. The connector will populate\nthis topic whenbehavior.on.erroris set to eitherignoreorlog.\nAdditionally, connector uses this topic to write empty data in case of certain\nedge conditions to ensure connector is able to continue processing the files.Type: stringDefault:errorImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 75
      },
      "default": "errorimportance: medium"
    },
    {
      "name": "s3.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 76,
      "display_name": "s3.poll.interval.ms",
      "documentation": "Frequency in milliseconds to poll for new or removed folders. This may result in updated task configurations starting to poll for data in added folders or stopping polling for data in removed folders.Type: longDefault: 60000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 76
      },
      "default": "60000importance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 77,
      "display_name": "format.class",
      "documentation": "Class responsible for converting S3 objects to source records.Type: classValid Values:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.string.StringFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 77
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 78,
      "display_name": "topics.dir",
      "documentation": "Top level directory where data was stored to be re-ingested by Kafka.NoteWith the Generalized S3 Source connector, when thetopics.dirparameter\nis set to a blank space value ('') , the connector reads all the\ndata specified under the S3 bucket. If you don\u00e2\u0080\u0099t set a value fortopics.dir, the configuration property takes the default value oftopicsand expects all the data in the specified S3 bucket to be\nunder a folder calledtopics.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 78
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 79,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter pattern.Type: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 79
      },
      "default": "/importance: medium"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 80,
      "display_name": "behavior.on.error",
      "documentation": "Sets how the connector handles errors that occur when processing records and parsing source files.failimmediately stops the connector and throws the encountered exception.ignorewill log an event populated with filename and exception-message in event header, into the error-topic. This file is ignored and connector progresses to next file.logfollows same steps asignore, additionally logs the encountered exception.Note - error-topic is only populated whenignoreORlogare used. Error topic is named -${parse.error.topic.prefix}-${connectorName}Type: stringDefault: failValid Values:fail,ignore,logImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 80
      },
      "default": "failvalid values:fail,ignore,logimportance: medium"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 81,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when reading data from the store.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 81
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: high"
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 82,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 82
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 83,
      "display_name": "path.format",
      "documentation": "This configuration that was used to set the format of the data directories when partitioning with a TimeBasedPartitioner. For example, if you setpath.formatto'year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, then a valid data directories would be:/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 83
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 84,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for Byte Array Format. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 84
      },
      "default": ".binimportance: low"
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 85,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 85
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 86,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 86
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 87,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 87
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 88,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 88
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 89,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 89
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 90,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 90
      },
      "default": "kafka broker value"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 91,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster used for licensing. All servers in the cluster will be discovered from the initial connection. This list should be in the form <code>host1:port1,host2:port2,\u00e2\u0080\u00a6</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 91
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 92,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 92
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 93,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration, including licensing information. This is used only if the topic does not already exist, and the default of 3 is appropriate for production use. If you are using a development environment with less than 3 brokers, you must set this to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 93
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 94,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 94
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 95,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 95
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 96,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 96
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 97,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 97
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 98,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 98
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 99,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 99
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 100,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 100
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 101,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 101
      },
      "default": "nullimportance: high"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 102,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 102
      }
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 103,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 103
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]importance: medium"
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 104,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector uses \u00e2\u0080\u0098DefaultAWSCredentialsProviderChain\u00e2\u0080\u0099.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 104
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 105,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS Access Key ID used to connect to S3. If specified, this will be used over the credentials provider chain.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 105
      }
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 106,
      "display_name": "aws.secret.access.key",
      "documentation": "The AWS Secret Access Key used to connect to S3. If specified, this will be used over the credentials provider chain.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 106
      }
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 107,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 107
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.path.style.access",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 108,
      "display_name": "s3.path.style.access",
      "documentation": "Whether to use S3 path-style access.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 108
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 109,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 109
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 110,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 110
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 111,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 111
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 112,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 112
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 113,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable/disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client waits for a 100 (CONTINUE) response before sending the request body. If false, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 113
      },
      "default": "trueimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 114,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors, including, but not limited to the value of this parameter, type of exception occurred, throttling settings of the underlying S3 client, etc.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 114
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 115,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server-Side Encryption algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: either one of [kms, aes256], or an empty string.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 115
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: either one of [kms, aes256], or an empty string.importance: low"
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 116,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server-Side Encryption customer-provided key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 116
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 117,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for Byte Array Format. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator looks like multiple records in the S3 object output.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 117
      },
      "default": "nullimportance: low"
    },
    {
      "name": "schema.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 118,
      "display_name": "schema.cache.size",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 118
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "record.batch.max.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 119,
      "display_name": "record.batch.max.size",
      "documentation": "The maximum amount of records to return each time S3 is polled.Type: intDefault: 200Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 119
      },
      "default": "200valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 120,
      "display_name": "mode",
      "documentation": "The connector\u00e2\u0080\u0099s operation mode.Type: stringDefault: RESTORE_BACKUPValid Values: [GENERIC, RESTORE_BACKUP]Importance: highDependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 120
      },
      "default": "restore_backupvalid values: [generic, restore_backup]importance: highdependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "valid_values": [
        "generic",
        "restore_backup"
      ],
      "dependents": [
        "task.batch.size",
        "starting.timestamp",
        "bucket.listing.max.objects.threshold",
        "topic.regex.list",
        "partitioner.class",
        "partition.field.name",
        "path.format"
      ]
    },
    {
      "name": "topic.regex.list",
      "type": "LISTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 121,
      "display_name": "topic.regex.list",
      "documentation": "A comma-separated list of pairs of type<kafkatopic>:<regex>that is used to map file paths to Kafka topics.\nAn example might betopic1:.*\\.jsonto source all files ending in.jsonto a kafka topic namedtopic1.\nYou can specify multiple of these<kafkatopic>:<regex>mappings to send different sets of files to different topics. Any files that aren\u00e2\u0080\u0099t mapped by a regex will be ignored and not sourced.\nFiles that match multiple mappings will be sent to the first topic in the list that maps the file.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: A list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 121
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: a list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...importance: high"
    },
    {
      "name": "task.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 122,
      "display_name": "task.batch.size",
      "documentation": "The number of files assigned to each task at a time.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,2000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 122
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,2000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2000"
      ]
    },
    {
      "name": "file.discovery.starting.timestamp",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 123,
      "display_name": "file.discovery.starting.timestamp",
      "documentation": "A Unix timestamp (in epoch milliseconds) that denotes where to start\nprocessing files. Any file encountered with a creation time earlier than this\nwill be ignored.ImportantThefile.discovery.starting.timestampconfiguration property should\nonly be used when there are no stored offsets for a connector\u00e2\u0080\u0093that is, this\nparameter is intended for new connectors to start from a specific timestamp\nrather than reading all the files in a bucket.Type: longDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 123
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "bucket.listing.max.objects.threshold",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 124,
      "display_name": "bucket.listing.max.objects.threshold",
      "documentation": "An integer that represents the maximum number of objects the connector will\nindex from the bucket at a time before failing. A value of-1indicates\nno limit.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 124
      },
      "default": "-1importance: medium"
    },
    {
      "name": "parse.error.topic.prefix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 125,
      "display_name": "parse.error.topic.prefix",
      "documentation": "The topic name prefix for a topic where records with error information would\nbe published whenever the connector encounters a malformed file or an\nexception while parsing the source file. This setting appends the topic prefix\nwith-${connectorName}. The final error topic name would be${parse.error.topic.prefix}-${connectorName}. The connector will populate\nthis topic whenbehavior.on.erroris set to eitherignoreorlog.\nAdditionally, connector uses this topic to write empty data in case of certain\nedge conditions to ensure connector is able to continue processing the files.Type: stringDefault:errorImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 125
      },
      "default": "errorimportance: medium"
    },
    {
      "name": "s3.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 126,
      "display_name": "s3.poll.interval.ms",
      "documentation": "Frequency in milliseconds to poll for new or removed folders. This may result in updated task configurations starting to poll for data in added folders or stopping polling for data in removed folders.Type: longDefault: 60000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 126
      },
      "default": "60000importance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 127,
      "display_name": "format.class",
      "documentation": "Class responsible for converting S3 objects to source records.Type: classValid Values:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.string.StringFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 127
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 128,
      "display_name": "topics.dir",
      "documentation": "Top level directory where data was stored to be re-ingested by Kafka.NoteWith the Generalized S3 Source connector, when thetopics.dirparameter\nis set to a blank space value ('') , the connector reads all the\ndata specified under the S3 bucket. If you don\u00e2\u0080\u0099t set a value fortopics.dir, the configuration property takes the default value oftopicsand expects all the data in the specified S3 bucket to be\nunder a folder calledtopics.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 128
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 129,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter pattern.Type: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 129
      },
      "default": "/importance: medium"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 130,
      "display_name": "behavior.on.error",
      "documentation": "Sets how the connector handles errors that occur when processing records and parsing source files.failimmediately stops the connector and throws the encountered exception.ignorewill log an event populated with filename and exception-message in event header, into the error-topic. This file is ignored and connector progresses to next file.logfollows same steps asignore, additionally logs the encountered exception.Note - error-topic is only populated whenignoreORlogare used. Error topic is named -${parse.error.topic.prefix}-${connectorName}Type: stringDefault: failValid Values:fail,ignore,logImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 130
      },
      "default": "failvalid values:fail,ignore,logimportance: medium"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 131,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when reading data from the store.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 131
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: high"
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 132,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 132
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 133,
      "display_name": "path.format",
      "documentation": "This configuration that was used to set the format of the data directories when partitioning with a TimeBasedPartitioner. For example, if you setpath.formatto'year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, then a valid data directories would be:/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 133
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 134,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for Byte Array Format. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 134
      },
      "default": ".binimportance: low"
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 135,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 135
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 136,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 136
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 137,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 137
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 138,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 138
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 139,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 139
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 140,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 140
      },
      "default": "kafka broker value"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 141,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster used for licensing. All servers in the cluster will be discovered from the initial connection. This list should be in the form <code>host1:port1,host2:port2,\u00e2\u0080\u00a6</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 141
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 142,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 142
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 143,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration, including licensing information. This is used only if the topic does not already exist, and the default of 3 is appropriate for production use. If you are using a development environment with less than 3 brokers, you must set this to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 143
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 144,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 144
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 145,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 145
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 146,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 146
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 147,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 147
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 148,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 148
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 149,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 149
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 150,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 150
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 151,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 151
      },
      "default": "nullimportance: high"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 152,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 152
      }
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 153,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 153
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]importance: medium"
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 154,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector uses \u00e2\u0080\u0098DefaultAWSCredentialsProviderChain\u00e2\u0080\u0099.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 154
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 155,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS Access Key ID used to connect to S3. If specified, this will be used over the credentials provider chain.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 155
      }
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 156,
      "display_name": "aws.secret.access.key",
      "documentation": "The AWS Secret Access Key used to connect to S3. If specified, this will be used over the credentials provider chain.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 156
      }
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 157,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 157
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.path.style.access",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 158,
      "display_name": "s3.path.style.access",
      "documentation": "Whether to use S3 path-style access.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 158
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 159,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 159
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 160,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 160
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 161,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 161
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 162,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 162
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 163,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable/disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client waits for a 100 (CONTINUE) response before sending the request body. If false, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 163
      },
      "default": "trueimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 164,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors, including, but not limited to the value of this parameter, type of exception occurred, throttling settings of the underlying S3 client, etc.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 164
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 165,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server-Side Encryption algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: either one of [kms, aes256], or an empty string.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 165
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: either one of [kms, aes256], or an empty string.importance: low"
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 166,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server-Side Encryption customer-provided key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 166
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 167,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for Byte Array Format. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator looks like multiple records in the S3 object output.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 167
      },
      "default": "nullimportance: low"
    },
    {
      "name": "schema.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 168,
      "display_name": "schema.cache.size",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 168
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "record.batch.max.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 169,
      "display_name": "record.batch.max.size",
      "documentation": "The maximum amount of records to return each time S3 is polled.Type: intDefault: 200Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 169
      },
      "default": "200valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 170,
      "display_name": "mode",
      "documentation": "The connector\u00e2\u0080\u0099s operation mode.Type: stringDefault: RESTORE_BACKUPValid Values: [GENERIC, RESTORE_BACKUP]Importance: highDependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 170
      },
      "default": "restore_backupvalid values: [generic, restore_backup]importance: highdependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "valid_values": [
        "generic",
        "restore_backup"
      ],
      "dependents": [
        "task.batch.size",
        "starting.timestamp",
        "bucket.listing.max.objects.threshold",
        "topic.regex.list",
        "partitioner.class",
        "partition.field.name",
        "path.format"
      ]
    },
    {
      "name": "topic.regex.list",
      "type": "LISTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 171,
      "display_name": "topic.regex.list",
      "documentation": "A comma-separated list of pairs of type<kafkatopic>:<regex>that is used to map file paths to Kafka topics.\nAn example might betopic1:.*\\.jsonto source all files ending in.jsonto a kafka topic namedtopic1.\nYou can specify multiple of these<kafkatopic>:<regex>mappings to send different sets of files to different topics. Any files that aren\u00e2\u0080\u0099t mapped by a regex will be ignored and not sourced.\nFiles that match multiple mappings will be sent to the first topic in the list that maps the file.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: A list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 171
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: a list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...importance: high"
    },
    {
      "name": "task.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 172,
      "display_name": "task.batch.size",
      "documentation": "The number of files assigned to each task at a time.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,2000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 172
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,2000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2000"
      ]
    },
    {
      "name": "file.discovery.starting.timestamp",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 173,
      "display_name": "file.discovery.starting.timestamp",
      "documentation": "A Unix timestamp (in epoch milliseconds) that denotes where to start\nprocessing files. Any file encountered with a creation time earlier than this\nwill be ignored.ImportantThefile.discovery.starting.timestampconfiguration property should\nonly be used when there are no stored offsets for a connector\u00e2\u0080\u0093that is, this\nparameter is intended for new connectors to start from a specific timestamp\nrather than reading all the files in a bucket.Type: longDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 173
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "bucket.listing.max.objects.threshold",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 174,
      "display_name": "bucket.listing.max.objects.threshold",
      "documentation": "An integer that represents the maximum number of objects the connector will\nindex from the bucket at a time before failing. A value of-1indicates\nno limit.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 174
      },
      "default": "-1importance: medium"
    },
    {
      "name": "parse.error.topic.prefix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 175,
      "display_name": "parse.error.topic.prefix",
      "documentation": "The topic name prefix for a topic where records with error information would\nbe published whenever the connector encounters a malformed file or an\nexception while parsing the source file. This setting appends the topic prefix\nwith-${connectorName}. The final error topic name would be${parse.error.topic.prefix}-${connectorName}. The connector will populate\nthis topic whenbehavior.on.erroris set to eitherignoreorlog.\nAdditionally, connector uses this topic to write empty data in case of certain\nedge conditions to ensure connector is able to continue processing the files.Type: stringDefault:errorImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 175
      },
      "default": "errorimportance: medium"
    },
    {
      "name": "s3.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 176,
      "display_name": "s3.poll.interval.ms",
      "documentation": "Frequency in milliseconds to poll for new or removed folders. This may result in updated task configurations starting to poll for data in added folders or stopping polling for data in removed folders.Type: longDefault: 60000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 176
      },
      "default": "60000importance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 177,
      "display_name": "format.class",
      "documentation": "Class responsible for converting S3 objects to source records.Type: classValid Values:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.string.StringFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 177
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 178,
      "display_name": "topics.dir",
      "documentation": "Top level directory where data was stored to be re-ingested by Kafka.NoteWith the Generalized S3 Source connector, when thetopics.dirparameter\nis set to a blank space value ('') , the connector reads all the\ndata specified under the S3 bucket. If you don\u00e2\u0080\u0099t set a value fortopics.dir, the configuration property takes the default value oftopicsand expects all the data in the specified S3 bucket to be\nunder a folder calledtopics.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 178
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 179,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter pattern.Type: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 179
      },
      "default": "/importance: medium"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 180,
      "display_name": "behavior.on.error",
      "documentation": "Sets how the connector handles errors that occur when processing records and parsing source files.failimmediately stops the connector and throws the encountered exception.ignorewill log an event populated with filename and exception-message in event header, into the error-topic. This file is ignored and connector progresses to next file.logfollows same steps asignore, additionally logs the encountered exception.Note - error-topic is only populated whenignoreORlogare used. Error topic is named -${parse.error.topic.prefix}-${connectorName}Type: stringDefault: failValid Values:fail,ignore,logImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 180
      },
      "default": "failvalid values:fail,ignore,logimportance: medium"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 181,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when reading data from the store.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 181
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: high"
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 182,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 182
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 183,
      "display_name": "path.format",
      "documentation": "This configuration that was used to set the format of the data directories when partitioning with a TimeBasedPartitioner. For example, if you setpath.formatto'year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, then a valid data directories would be:/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 183
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 184,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for Byte Array Format. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 184
      },
      "default": ".binimportance: low"
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 185,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 185
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 186,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 186
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 187,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 187
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 188,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 188
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 189,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 189
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 190,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 190
      },
      "default": "kafka broker value"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 191,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster used for licensing. All servers in the cluster will be discovered from the initial connection. This list should be in the form <code>host1:port1,host2:port2,\u00e2\u0080\u00a6</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 191
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 192,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 192
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 193,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration, including licensing information. This is used only if the topic does not already exist, and the default of 3 is appropriate for production use. If you are using a development environment with less than 3 brokers, you must set this to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 193
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 194,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 194
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 195,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 195
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 196,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 196
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 197,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 197
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 198,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 198
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 199,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 199
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 200,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 200
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 201,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 201
      },
      "default": "nullimportance: high"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 202,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 202
      }
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 203,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 203
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]importance: medium"
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 204,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector uses \u00e2\u0080\u0098DefaultAWSCredentialsProviderChain\u00e2\u0080\u0099.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 204
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 205,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS Access Key ID used to connect to S3. If specified, this will be used over the credentials provider chain.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 205
      }
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 206,
      "display_name": "aws.secret.access.key",
      "documentation": "The AWS Secret Access Key used to connect to S3. If specified, this will be used over the credentials provider chain.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 206
      }
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 207,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 207
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.path.style.access",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 208,
      "display_name": "s3.path.style.access",
      "documentation": "Whether to use S3 path-style access.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 208
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 209,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 209
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 210,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 210
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 211,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 211
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 212,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 212
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 213,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable/disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client waits for a 100 (CONTINUE) response before sending the request body. If false, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 213
      },
      "default": "trueimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 214,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors, including, but not limited to the value of this parameter, type of exception occurred, throttling settings of the underlying S3 client, etc.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 214
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 215,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server-Side Encryption algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: either one of [kms, aes256], or an empty string.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 215
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: either one of [kms, aes256], or an empty string.importance: low"
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 216,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server-Side Encryption customer-provided key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 216
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 217,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for Byte Array Format. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator looks like multiple records in the S3 object output.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 217
      },
      "default": "nullimportance: low"
    },
    {
      "name": "schema.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 218,
      "display_name": "schema.cache.size",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 218
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "record.batch.max.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 219,
      "display_name": "record.batch.max.size",
      "documentation": "The maximum amount of records to return each time S3 is polled.Type: intDefault: 200Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 219
      },
      "default": "200valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 220,
      "display_name": "mode",
      "documentation": "The connector\u00e2\u0080\u0099s operation mode.Type: stringDefault: RESTORE_BACKUPValid Values: [GENERIC, RESTORE_BACKUP]Importance: highDependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 220
      },
      "default": "restore_backupvalid values: [generic, restore_backup]importance: highdependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "valid_values": [
        "generic",
        "restore_backup"
      ],
      "dependents": [
        "task.batch.size",
        "starting.timestamp",
        "bucket.listing.max.objects.threshold",
        "topic.regex.list",
        "partitioner.class",
        "partition.field.name",
        "path.format"
      ]
    },
    {
      "name": "topic.regex.list",
      "type": "LISTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 221,
      "display_name": "topic.regex.list",
      "documentation": "A comma-separated list of pairs of type<kafkatopic>:<regex>that is used to map file paths to Kafka topics.\nAn example might betopic1:.*\\.jsonto source all files ending in.jsonto a kafka topic namedtopic1.\nYou can specify multiple of these<kafkatopic>:<regex>mappings to send different sets of files to different topics. Any files that aren\u00e2\u0080\u0099t mapped by a regex will be ignored and not sourced.\nFiles that match multiple mappings will be sent to the first topic in the list that maps the file.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: A list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 221
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: a list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...importance: high"
    },
    {
      "name": "task.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 222,
      "display_name": "task.batch.size",
      "documentation": "The number of files assigned to each task at a time.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,2000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 222
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,2000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2000"
      ]
    },
    {
      "name": "file.discovery.starting.timestamp",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 223,
      "display_name": "file.discovery.starting.timestamp",
      "documentation": "A Unix timestamp (in epoch milliseconds) that denotes where to start\nprocessing files. Any file encountered with a creation time earlier than this\nwill be ignored.ImportantThefile.discovery.starting.timestampconfiguration property should\nonly be used when there are no stored offsets for a connector\u00e2\u0080\u0093that is, this\nparameter is intended for new connectors to start from a specific timestamp\nrather than reading all the files in a bucket.Type: longDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 223
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "bucket.listing.max.objects.threshold",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 224,
      "display_name": "bucket.listing.max.objects.threshold",
      "documentation": "An integer that represents the maximum number of objects the connector will\nindex from the bucket at a time before failing. A value of-1indicates\nno limit.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 224
      },
      "default": "-1importance: medium"
    },
    {
      "name": "parse.error.topic.prefix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 225,
      "display_name": "parse.error.topic.prefix",
      "documentation": "The topic name prefix for a topic where records with error information would\nbe published whenever the connector encounters a malformed file or an\nexception while parsing the source file. This setting appends the topic prefix\nwith-${connectorName}. The final error topic name would be${parse.error.topic.prefix}-${connectorName}. The connector will populate\nthis topic whenbehavior.on.erroris set to eitherignoreorlog.\nAdditionally, connector uses this topic to write empty data in case of certain\nedge conditions to ensure connector is able to continue processing the files.Type: stringDefault:errorImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 225
      },
      "default": "errorimportance: medium"
    },
    {
      "name": "s3.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 226,
      "display_name": "s3.poll.interval.ms",
      "documentation": "Frequency in milliseconds to poll for new or removed folders. This may result in updated task configurations starting to poll for data in added folders or stopping polling for data in removed folders.Type: longDefault: 60000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 226
      },
      "default": "60000importance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 227,
      "display_name": "format.class",
      "documentation": "Class responsible for converting S3 objects to source records.Type: classValid Values:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.string.StringFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 227
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 228,
      "display_name": "topics.dir",
      "documentation": "Top level directory where data was stored to be re-ingested by Kafka.NoteWith the Generalized S3 Source connector, when thetopics.dirparameter\nis set to a blank space value ('') , the connector reads all the\ndata specified under the S3 bucket. If you don\u00e2\u0080\u0099t set a value fortopics.dir, the configuration property takes the default value oftopicsand expects all the data in the specified S3 bucket to be\nunder a folder calledtopics.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 228
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 229,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter pattern.Type: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 229
      },
      "default": "/importance: medium"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 230,
      "display_name": "behavior.on.error",
      "documentation": "Sets how the connector handles errors that occur when processing records and parsing source files.failimmediately stops the connector and throws the encountered exception.ignorewill log an event populated with filename and exception-message in event header, into the error-topic. This file is ignored and connector progresses to next file.logfollows same steps asignore, additionally logs the encountered exception.Note - error-topic is only populated whenignoreORlogare used. Error topic is named -${parse.error.topic.prefix}-${connectorName}Type: stringDefault: failValid Values:fail,ignore,logImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 230
      },
      "default": "failvalid values:fail,ignore,logimportance: medium"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 231,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when reading data from the store.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 231
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: high"
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 232,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 232
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 233,
      "display_name": "path.format",
      "documentation": "This configuration that was used to set the format of the data directories when partitioning with a TimeBasedPartitioner. For example, if you setpath.formatto'year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, then a valid data directories would be:/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 233
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 234,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for Byte Array Format. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 234
      },
      "default": ".binimportance: low"
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 235,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 235
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 236,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 236
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 237,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 237
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 238,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 238
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 239,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 239
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 240,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 240
      },
      "default": "kafka broker value"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 241,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster used for licensing. All servers in the cluster will be discovered from the initial connection. This list should be in the form <code>host1:port1,host2:port2,\u00e2\u0080\u00a6</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 241
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 242,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 242
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 243,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration, including licensing information. This is used only if the topic does not already exist, and the default of 3 is appropriate for production use. If you are using a development environment with less than 3 brokers, you must set this to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 243
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 244,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 244
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 245,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 245
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 246,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 246
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 247,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 247
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 248,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 248
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 249,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 249
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 250,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 250
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 251,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 251
      },
      "default": "nullimportance: high"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 252,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 252
      }
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 253,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 253
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]importance: medium"
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 254,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector uses \u00e2\u0080\u0098DefaultAWSCredentialsProviderChain\u00e2\u0080\u0099.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 254
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 255,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS Access Key ID used to connect to S3. If specified, this will be used over the credentials provider chain.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 255
      }
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 256,
      "display_name": "aws.secret.access.key",
      "documentation": "The AWS Secret Access Key used to connect to S3. If specified, this will be used over the credentials provider chain.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 256
      }
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 257,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 257
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.path.style.access",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 258,
      "display_name": "s3.path.style.access",
      "documentation": "Whether to use S3 path-style access.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 258
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 259,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 259
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 260,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 260
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 261,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 261
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 262,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 262
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 263,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable/disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client waits for a 100 (CONTINUE) response before sending the request body. If false, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 263
      },
      "default": "trueimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 264,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors, including, but not limited to the value of this parameter, type of exception occurred, throttling settings of the underlying S3 client, etc.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 264
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 265,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server-Side Encryption algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: either one of [kms, aes256], or an empty string.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 265
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: either one of [kms, aes256], or an empty string.importance: low"
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 266,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server-Side Encryption customer-provided key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 266
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 267,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for Byte Array Format. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator looks like multiple records in the S3 object output.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 267
      },
      "default": "nullimportance: low"
    },
    {
      "name": "schema.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 268,
      "display_name": "schema.cache.size",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 268
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "record.batch.max.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 269,
      "display_name": "record.batch.max.size",
      "documentation": "The maximum amount of records to return each time S3 is polled.Type: intDefault: 200Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 269
      },
      "default": "200valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 270,
      "display_name": "mode",
      "documentation": "The connector\u00e2\u0080\u0099s operation mode.Type: stringDefault: RESTORE_BACKUPValid Values: [GENERIC, RESTORE_BACKUP]Importance: highDependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 270
      },
      "default": "restore_backupvalid values: [generic, restore_backup]importance: highdependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "valid_values": [
        "generic",
        "restore_backup"
      ],
      "dependents": [
        "task.batch.size",
        "starting.timestamp",
        "bucket.listing.max.objects.threshold",
        "topic.regex.list",
        "partitioner.class",
        "partition.field.name",
        "path.format"
      ]
    },
    {
      "name": "topic.regex.list",
      "type": "LISTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 271,
      "display_name": "topic.regex.list",
      "documentation": "A comma-separated list of pairs of type<kafkatopic>:<regex>that is used to map file paths to Kafka topics.\nAn example might betopic1:.*\\.jsonto source all files ending in.jsonto a kafka topic namedtopic1.\nYou can specify multiple of these<kafkatopic>:<regex>mappings to send different sets of files to different topics. Any files that aren\u00e2\u0080\u0099t mapped by a regex will be ignored and not sourced.\nFiles that match multiple mappings will be sent to the first topic in the list that maps the file.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: A list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 271
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: a list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...importance: high"
    },
    {
      "name": "task.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 272,
      "display_name": "task.batch.size",
      "documentation": "The number of files assigned to each task at a time.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,2000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 272
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,2000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2000"
      ]
    },
    {
      "name": "file.discovery.starting.timestamp",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 273,
      "display_name": "file.discovery.starting.timestamp",
      "documentation": "A Unix timestamp (in epoch milliseconds) that denotes where to start\nprocessing files. Any file encountered with a creation time earlier than this\nwill be ignored.ImportantThefile.discovery.starting.timestampconfiguration property should\nonly be used when there are no stored offsets for a connector\u00e2\u0080\u0093that is, this\nparameter is intended for new connectors to start from a specific timestamp\nrather than reading all the files in a bucket.Type: longDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 273
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "bucket.listing.max.objects.threshold",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 274,
      "display_name": "bucket.listing.max.objects.threshold",
      "documentation": "An integer that represents the maximum number of objects the connector will\nindex from the bucket at a time before failing. A value of-1indicates\nno limit.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 274
      },
      "default": "-1importance: medium"
    },
    {
      "name": "parse.error.topic.prefix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 275,
      "display_name": "parse.error.topic.prefix",
      "documentation": "The topic name prefix for a topic where records with error information would\nbe published whenever the connector encounters a malformed file or an\nexception while parsing the source file. This setting appends the topic prefix\nwith-${connectorName}. The final error topic name would be${parse.error.topic.prefix}-${connectorName}. The connector will populate\nthis topic whenbehavior.on.erroris set to eitherignoreorlog.\nAdditionally, connector uses this topic to write empty data in case of certain\nedge conditions to ensure connector is able to continue processing the files.Type: stringDefault:errorImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 275
      },
      "default": "errorimportance: medium"
    },
    {
      "name": "s3.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 276,
      "display_name": "s3.poll.interval.ms",
      "documentation": "Frequency in milliseconds to poll for new or removed folders. This may result in updated task configurations starting to poll for data in added folders or stopping polling for data in removed folders.Type: longDefault: 60000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 276
      },
      "default": "60000importance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 277,
      "display_name": "format.class",
      "documentation": "Class responsible for converting S3 objects to source records.Type: classValid Values:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.string.StringFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 277
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 278,
      "display_name": "topics.dir",
      "documentation": "Top level directory where data was stored to be re-ingested by Kafka.NoteWith the Generalized S3 Source connector, when thetopics.dirparameter\nis set to a blank space value ('') , the connector reads all the\ndata specified under the S3 bucket. If you don\u00e2\u0080\u0099t set a value fortopics.dir, the configuration property takes the default value oftopicsand expects all the data in the specified S3 bucket to be\nunder a folder calledtopics.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 278
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 279,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter pattern.Type: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 279
      },
      "default": "/importance: medium"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 280,
      "display_name": "behavior.on.error",
      "documentation": "Sets how the connector handles errors that occur when processing records and parsing source files.failimmediately stops the connector and throws the encountered exception.ignorewill log an event populated with filename and exception-message in event header, into the error-topic. This file is ignored and connector progresses to next file.logfollows same steps asignore, additionally logs the encountered exception.Note - error-topic is only populated whenignoreORlogare used. Error topic is named -${parse.error.topic.prefix}-${connectorName}Type: stringDefault: failValid Values:fail,ignore,logImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 280
      },
      "default": "failvalid values:fail,ignore,logimportance: medium"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 281,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when reading data from the store.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 281
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: high"
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 282,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 282
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 283,
      "display_name": "path.format",
      "documentation": "This configuration that was used to set the format of the data directories when partitioning with a TimeBasedPartitioner. For example, if you setpath.formatto'year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, then a valid data directories would be:/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 283
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 284,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for Byte Array Format. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 284
      },
      "default": ".binimportance: low"
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 285,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 285
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 286,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 286
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 287,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 287
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 288,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 288
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 289,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 289
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 290,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 290
      },
      "default": "kafka broker value"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 291,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster used for licensing. All servers in the cluster will be discovered from the initial connection. This list should be in the form <code>host1:port1,host2:port2,\u00e2\u0080\u00a6</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 291
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 292,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 292
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 293,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration, including licensing information. This is used only if the topic does not already exist, and the default of 3 is appropriate for production use. If you are using a development environment with less than 3 brokers, you must set this to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 293
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 294,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 294
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 295,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 295
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 296,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 296
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 297,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 297
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 298,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 298
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 299,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 299
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 300,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 300
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 301,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 301
      },
      "default": "nullimportance: high"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 302,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 302
      }
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 303,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 303
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]importance: medium"
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 304,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector uses \u00e2\u0080\u0098DefaultAWSCredentialsProviderChain\u00e2\u0080\u0099.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 304
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 305,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS Access Key ID used to connect to S3. If specified, this will be used over the credentials provider chain.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 305
      }
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 306,
      "display_name": "aws.secret.access.key",
      "documentation": "The AWS Secret Access Key used to connect to S3. If specified, this will be used over the credentials provider chain.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 306
      }
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 307,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 307
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.path.style.access",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 308,
      "display_name": "s3.path.style.access",
      "documentation": "Whether to use S3 path-style access.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 308
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 309,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 309
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 310,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 310
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 311,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 311
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 312,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 312
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 313,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable/disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client waits for a 100 (CONTINUE) response before sending the request body. If false, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 313
      },
      "default": "trueimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 314,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors, including, but not limited to the value of this parameter, type of exception occurred, throttling settings of the underlying S3 client, etc.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 314
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 315,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server-Side Encryption algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: either one of [kms, aes256], or an empty string.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 315
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: either one of [kms, aes256], or an empty string.importance: low"
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 316,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server-Side Encryption customer-provided key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 316
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 317,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for Byte Array Format. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator looks like multiple records in the S3 object output.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 317
      },
      "default": "nullimportance: low"
    },
    {
      "name": "schema.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 318,
      "display_name": "schema.cache.size",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 318
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "record.batch.max.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 319,
      "display_name": "record.batch.max.size",
      "documentation": "The maximum amount of records to return each time S3 is polled.Type: intDefault: 200Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 319
      },
      "default": "200valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 320,
      "display_name": "mode",
      "documentation": "The connector\u00e2\u0080\u0099s operation mode.Type: stringDefault: RESTORE_BACKUPValid Values: [GENERIC, RESTORE_BACKUP]Importance: highDependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 320
      },
      "default": "restore_backupvalid values: [generic, restore_backup]importance: highdependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "valid_values": [
        "generic",
        "restore_backup"
      ],
      "dependents": [
        "task.batch.size",
        "starting.timestamp",
        "bucket.listing.max.objects.threshold",
        "topic.regex.list",
        "partitioner.class",
        "partition.field.name",
        "path.format"
      ]
    },
    {
      "name": "topic.regex.list",
      "type": "LISTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 321,
      "display_name": "topic.regex.list",
      "documentation": "A comma-separated list of pairs of type<kafkatopic>:<regex>that is used to map file paths to Kafka topics.\nAn example might betopic1:.*\\.jsonto source all files ending in.jsonto a kafka topic namedtopic1.\nYou can specify multiple of these<kafkatopic>:<regex>mappings to send different sets of files to different topics. Any files that aren\u00e2\u0080\u0099t mapped by a regex will be ignored and not sourced.\nFiles that match multiple mappings will be sent to the first topic in the list that maps the file.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: A list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 321
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: a list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...importance: high"
    },
    {
      "name": "task.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 322,
      "display_name": "task.batch.size",
      "documentation": "The number of files assigned to each task at a time.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,2000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 322
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,2000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2000"
      ]
    },
    {
      "name": "file.discovery.starting.timestamp",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 323,
      "display_name": "file.discovery.starting.timestamp",
      "documentation": "A Unix timestamp (in epoch milliseconds) that denotes where to start\nprocessing files. Any file encountered with a creation time earlier than this\nwill be ignored.ImportantThefile.discovery.starting.timestampconfiguration property should\nonly be used when there are no stored offsets for a connector\u00e2\u0080\u0093that is, this\nparameter is intended for new connectors to start from a specific timestamp\nrather than reading all the files in a bucket.Type: longDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 323
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "bucket.listing.max.objects.threshold",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 324,
      "display_name": "bucket.listing.max.objects.threshold",
      "documentation": "An integer that represents the maximum number of objects the connector will\nindex from the bucket at a time before failing. A value of-1indicates\nno limit.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 324
      },
      "default": "-1importance: medium"
    },
    {
      "name": "parse.error.topic.prefix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 325,
      "display_name": "parse.error.topic.prefix",
      "documentation": "The topic name prefix for a topic where records with error information would\nbe published whenever the connector encounters a malformed file or an\nexception while parsing the source file. This setting appends the topic prefix\nwith-${connectorName}. The final error topic name would be${parse.error.topic.prefix}-${connectorName}. The connector will populate\nthis topic whenbehavior.on.erroris set to eitherignoreorlog.\nAdditionally, connector uses this topic to write empty data in case of certain\nedge conditions to ensure connector is able to continue processing the files.Type: stringDefault:errorImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 325
      },
      "default": "errorimportance: medium"
    },
    {
      "name": "s3.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 326,
      "display_name": "s3.poll.interval.ms",
      "documentation": "Frequency in milliseconds to poll for new or removed folders. This may result in updated task configurations starting to poll for data in added folders or stopping polling for data in removed folders.Type: longDefault: 60000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 326
      },
      "default": "60000importance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 327,
      "display_name": "format.class",
      "documentation": "Class responsible for converting S3 objects to source records.Type: classValid Values:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.string.StringFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 327
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 328,
      "display_name": "topics.dir",
      "documentation": "Top level directory where data was stored to be re-ingested by Kafka.NoteWith the Generalized S3 Source connector, when thetopics.dirparameter\nis set to a blank space value ('') , the connector reads all the\ndata specified under the S3 bucket. If you don\u00e2\u0080\u0099t set a value fortopics.dir, the configuration property takes the default value oftopicsand expects all the data in the specified S3 bucket to be\nunder a folder calledtopics.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 328
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 329,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter pattern.Type: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 329
      },
      "default": "/importance: medium"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 330,
      "display_name": "behavior.on.error",
      "documentation": "Sets how the connector handles errors that occur when processing records and parsing source files.failimmediately stops the connector and throws the encountered exception.ignorewill log an event populated with filename and exception-message in event header, into the error-topic. This file is ignored and connector progresses to next file.logfollows same steps asignore, additionally logs the encountered exception.Note - error-topic is only populated whenignoreORlogare used. Error topic is named -${parse.error.topic.prefix}-${connectorName}Type: stringDefault: failValid Values:fail,ignore,logImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 330
      },
      "default": "failvalid values:fail,ignore,logimportance: medium"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 331,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when reading data from the store.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 331
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: high"
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 332,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 332
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 333,
      "display_name": "path.format",
      "documentation": "This configuration that was used to set the format of the data directories when partitioning with a TimeBasedPartitioner. For example, if you setpath.formatto'year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, then a valid data directories would be:/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 333
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 334,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for Byte Array Format. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 334
      },
      "default": ".binimportance: low"
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 335,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 335
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 336,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 336
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 337,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 337
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 338,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 338
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 339,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 339
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 340,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 340
      },
      "default": "kafka broker value"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 341,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster used for licensing. All servers in the cluster will be discovered from the initial connection. This list should be in the form <code>host1:port1,host2:port2,\u00e2\u0080\u00a6</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 341
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 342,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 342
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 343,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration, including licensing information. This is used only if the topic does not already exist, and the default of 3 is appropriate for production use. If you are using a development environment with less than 3 brokers, you must set this to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 343
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 344,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 344
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 345,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 345
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 346,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 346
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 347,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 347
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 348,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 348
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 349,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 349
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 350,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 350
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 351,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 351
      },
      "default": "nullimportance: high"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 352,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 352
      }
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 353,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 353
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]importance: medium"
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 354,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector uses \u00e2\u0080\u0098DefaultAWSCredentialsProviderChain\u00e2\u0080\u0099.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 354
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 355,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS Access Key ID used to connect to S3. If specified, this will be used over the credentials provider chain.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 355
      }
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 356,
      "display_name": "aws.secret.access.key",
      "documentation": "The AWS Secret Access Key used to connect to S3. If specified, this will be used over the credentials provider chain.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 356
      }
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 357,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 357
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.path.style.access",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 358,
      "display_name": "s3.path.style.access",
      "documentation": "Whether to use S3 path-style access.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 358
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 359,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 359
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 360,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 360
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 361,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 361
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 362,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 362
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 363,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable/disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client waits for a 100 (CONTINUE) response before sending the request body. If false, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 363
      },
      "default": "trueimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 364,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors, including, but not limited to the value of this parameter, type of exception occurred, throttling settings of the underlying S3 client, etc.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 364
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 365,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server-Side Encryption algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: either one of [kms, aes256], or an empty string.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 365
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: either one of [kms, aes256], or an empty string.importance: low"
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 366,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server-Side Encryption customer-provided key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 366
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 367,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for Byte Array Format. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator looks like multiple records in the S3 object output.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 367
      },
      "default": "nullimportance: low"
    },
    {
      "name": "schema.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 368,
      "display_name": "schema.cache.size",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 368
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "record.batch.max.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 369,
      "display_name": "record.batch.max.size",
      "documentation": "The maximum amount of records to return each time S3 is polled.Type: intDefault: 200Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 369
      },
      "default": "200valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 370,
      "display_name": "mode",
      "documentation": "The connector\u00e2\u0080\u0099s operation mode.Type: stringDefault: RESTORE_BACKUPValid Values: [GENERIC, RESTORE_BACKUP]Importance: highDependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 370
      },
      "default": "restore_backupvalid values: [generic, restore_backup]importance: highdependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "valid_values": [
        "generic",
        "restore_backup"
      ],
      "dependents": [
        "task.batch.size",
        "starting.timestamp",
        "bucket.listing.max.objects.threshold",
        "topic.regex.list",
        "partitioner.class",
        "partition.field.name",
        "path.format"
      ]
    },
    {
      "name": "topic.regex.list",
      "type": "LISTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 371,
      "display_name": "topic.regex.list",
      "documentation": "A comma-separated list of pairs of type<kafkatopic>:<regex>that is used to map file paths to Kafka topics.\nAn example might betopic1:.*\\.jsonto source all files ending in.jsonto a kafka topic namedtopic1.\nYou can specify multiple of these<kafkatopic>:<regex>mappings to send different sets of files to different topics. Any files that aren\u00e2\u0080\u0099t mapped by a regex will be ignored and not sourced.\nFiles that match multiple mappings will be sent to the first topic in the list that maps the file.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: A list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 371
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: a list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...importance: high"
    },
    {
      "name": "task.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 372,
      "display_name": "task.batch.size",
      "documentation": "The number of files assigned to each task at a time.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,2000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 372
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,2000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2000"
      ]
    },
    {
      "name": "file.discovery.starting.timestamp",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 373,
      "display_name": "file.discovery.starting.timestamp",
      "documentation": "A Unix timestamp (in epoch milliseconds) that denotes where to start\nprocessing files. Any file encountered with a creation time earlier than this\nwill be ignored.ImportantThefile.discovery.starting.timestampconfiguration property should\nonly be used when there are no stored offsets for a connector\u00e2\u0080\u0093that is, this\nparameter is intended for new connectors to start from a specific timestamp\nrather than reading all the files in a bucket.Type: longDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 373
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "bucket.listing.max.objects.threshold",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 374,
      "display_name": "bucket.listing.max.objects.threshold",
      "documentation": "An integer that represents the maximum number of objects the connector will\nindex from the bucket at a time before failing. A value of-1indicates\nno limit.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 374
      },
      "default": "-1importance: medium"
    },
    {
      "name": "parse.error.topic.prefix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 375,
      "display_name": "parse.error.topic.prefix",
      "documentation": "The topic name prefix for a topic where records with error information would\nbe published whenever the connector encounters a malformed file or an\nexception while parsing the source file. This setting appends the topic prefix\nwith-${connectorName}. The final error topic name would be${parse.error.topic.prefix}-${connectorName}. The connector will populate\nthis topic whenbehavior.on.erroris set to eitherignoreorlog.\nAdditionally, connector uses this topic to write empty data in case of certain\nedge conditions to ensure connector is able to continue processing the files.Type: stringDefault:errorImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 375
      },
      "default": "errorimportance: medium"
    },
    {
      "name": "s3.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 376,
      "display_name": "s3.poll.interval.ms",
      "documentation": "Frequency in milliseconds to poll for new or removed folders. This may result in updated task configurations starting to poll for data in added folders or stopping polling for data in removed folders.Type: longDefault: 60000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 376
      },
      "default": "60000importance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 377,
      "display_name": "format.class",
      "documentation": "Class responsible for converting S3 objects to source records.Type: classValid Values:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.string.StringFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 377
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 378,
      "display_name": "topics.dir",
      "documentation": "Top level directory where data was stored to be re-ingested by Kafka.NoteWith the Generalized S3 Source connector, when thetopics.dirparameter\nis set to a blank space value ('') , the connector reads all the\ndata specified under the S3 bucket. If you don\u00e2\u0080\u0099t set a value fortopics.dir, the configuration property takes the default value oftopicsand expects all the data in the specified S3 bucket to be\nunder a folder calledtopics.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 378
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 379,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter pattern.Type: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 379
      },
      "default": "/importance: medium"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 380,
      "display_name": "behavior.on.error",
      "documentation": "Sets how the connector handles errors that occur when processing records and parsing source files.failimmediately stops the connector and throws the encountered exception.ignorewill log an event populated with filename and exception-message in event header, into the error-topic. This file is ignored and connector progresses to next file.logfollows same steps asignore, additionally logs the encountered exception.Note - error-topic is only populated whenignoreORlogare used. Error topic is named -${parse.error.topic.prefix}-${connectorName}Type: stringDefault: failValid Values:fail,ignore,logImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 380
      },
      "default": "failvalid values:fail,ignore,logimportance: medium"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 381,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when reading data from the store.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 381
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: high"
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 382,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 382
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 383,
      "display_name": "path.format",
      "documentation": "This configuration that was used to set the format of the data directories when partitioning with a TimeBasedPartitioner. For example, if you setpath.formatto'year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, then a valid data directories would be:/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 383
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 384,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for Byte Array Format. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 384
      },
      "default": ".binimportance: low"
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 385,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 385
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 386,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 386
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 387,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 387
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 388,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 388
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 389,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 389
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 390,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 390
      },
      "default": "kafka broker value"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 391,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster used for licensing. All servers in the cluster will be discovered from the initial connection. This list should be in the form <code>host1:port1,host2:port2,\u00e2\u0080\u00a6</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 391
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 392,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 392
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 393,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration, including licensing information. This is used only if the topic does not already exist, and the default of 3 is appropriate for production use. If you are using a development environment with less than 3 brokers, you must set this to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 393
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 394,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 394
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 395,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 395
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 396,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 396
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 397,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 397
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 398,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 398
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 399,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 399
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 400,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 400
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 401,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 401
      },
      "default": "nullimportance: high"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 402,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 402
      }
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 403,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 403
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]importance: medium"
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 404,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector uses \u00e2\u0080\u0098DefaultAWSCredentialsProviderChain\u00e2\u0080\u0099.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 404
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 405,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS Access Key ID used to connect to S3. If specified, this will be used over the credentials provider chain.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 405
      }
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 406,
      "display_name": "aws.secret.access.key",
      "documentation": "The AWS Secret Access Key used to connect to S3. If specified, this will be used over the credentials provider chain.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 406
      }
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 407,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 407
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.path.style.access",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 408,
      "display_name": "s3.path.style.access",
      "documentation": "Whether to use S3 path-style access.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 408
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 409,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 409
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 410,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 410
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 411,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 411
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 412,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 412
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 413,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable/disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client waits for a 100 (CONTINUE) response before sending the request body. If false, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 413
      },
      "default": "trueimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 414,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors, including, but not limited to the value of this parameter, type of exception occurred, throttling settings of the underlying S3 client, etc.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 414
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 415,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server-Side Encryption algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: either one of [kms, aes256], or an empty string.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 415
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: either one of [kms, aes256], or an empty string.importance: low"
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 416,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server-Side Encryption customer-provided key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 416
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 417,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for Byte Array Format. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator looks like multiple records in the S3 object output.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 417
      },
      "default": "nullimportance: low"
    },
    {
      "name": "schema.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 418,
      "display_name": "schema.cache.size",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 418
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "record.batch.max.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 419,
      "display_name": "record.batch.max.size",
      "documentation": "The maximum amount of records to return each time S3 is polled.Type: intDefault: 200Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 419
      },
      "default": "200valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 420,
      "display_name": "mode",
      "documentation": "The connector\u00e2\u0080\u0099s operation mode.Type: stringDefault: RESTORE_BACKUPValid Values: [GENERIC, RESTORE_BACKUP]Importance: highDependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 420
      },
      "default": "restore_backupvalid values: [generic, restore_backup]importance: highdependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "valid_values": [
        "generic",
        "restore_backup"
      ],
      "dependents": [
        "task.batch.size",
        "starting.timestamp",
        "bucket.listing.max.objects.threshold",
        "topic.regex.list",
        "partitioner.class",
        "partition.field.name",
        "path.format"
      ]
    },
    {
      "name": "topic.regex.list",
      "type": "LISTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 421,
      "display_name": "topic.regex.list",
      "documentation": "A comma-separated list of pairs of type<kafkatopic>:<regex>that is used to map file paths to Kafka topics.\nAn example might betopic1:.*\\.jsonto source all files ending in.jsonto a kafka topic namedtopic1.\nYou can specify multiple of these<kafkatopic>:<regex>mappings to send different sets of files to different topics. Any files that aren\u00e2\u0080\u0099t mapped by a regex will be ignored and not sourced.\nFiles that match multiple mappings will be sent to the first topic in the list that maps the file.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: A list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 421
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: a list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...importance: high"
    },
    {
      "name": "task.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 422,
      "display_name": "task.batch.size",
      "documentation": "The number of files assigned to each task at a time.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,2000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 422
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,2000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2000"
      ]
    },
    {
      "name": "file.discovery.starting.timestamp",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 423,
      "display_name": "file.discovery.starting.timestamp",
      "documentation": "A Unix timestamp (in epoch milliseconds) that denotes where to start\nprocessing files. Any file encountered with a creation time earlier than this\nwill be ignored.ImportantThefile.discovery.starting.timestampconfiguration property should\nonly be used when there are no stored offsets for a connector\u00e2\u0080\u0093that is, this\nparameter is intended for new connectors to start from a specific timestamp\nrather than reading all the files in a bucket.Type: longDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 423
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "bucket.listing.max.objects.threshold",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 424,
      "display_name": "bucket.listing.max.objects.threshold",
      "documentation": "An integer that represents the maximum number of objects the connector will\nindex from the bucket at a time before failing. A value of-1indicates\nno limit.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 424
      },
      "default": "-1importance: medium"
    },
    {
      "name": "parse.error.topic.prefix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 425,
      "display_name": "parse.error.topic.prefix",
      "documentation": "The topic name prefix for a topic where records with error information would\nbe published whenever the connector encounters a malformed file or an\nexception while parsing the source file. This setting appends the topic prefix\nwith-${connectorName}. The final error topic name would be${parse.error.topic.prefix}-${connectorName}. The connector will populate\nthis topic whenbehavior.on.erroris set to eitherignoreorlog.\nAdditionally, connector uses this topic to write empty data in case of certain\nedge conditions to ensure connector is able to continue processing the files.Type: stringDefault:errorImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 425
      },
      "default": "errorimportance: medium"
    },
    {
      "name": "s3.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 426,
      "display_name": "s3.poll.interval.ms",
      "documentation": "Frequency in milliseconds to poll for new or removed folders. This may result in updated task configurations starting to poll for data in added folders or stopping polling for data in removed folders.Type: longDefault: 60000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 426
      },
      "default": "60000importance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 427,
      "display_name": "format.class",
      "documentation": "Class responsible for converting S3 objects to source records.Type: classValid Values:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.string.StringFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 427
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 428,
      "display_name": "topics.dir",
      "documentation": "Top level directory where data was stored to be re-ingested by Kafka.NoteWith the Generalized S3 Source connector, when thetopics.dirparameter\nis set to a blank space value ('') , the connector reads all the\ndata specified under the S3 bucket. If you don\u00e2\u0080\u0099t set a value fortopics.dir, the configuration property takes the default value oftopicsand expects all the data in the specified S3 bucket to be\nunder a folder calledtopics.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 428
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 429,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter pattern.Type: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 429
      },
      "default": "/importance: medium"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 430,
      "display_name": "behavior.on.error",
      "documentation": "Sets how the connector handles errors that occur when processing records and parsing source files.failimmediately stops the connector and throws the encountered exception.ignorewill log an event populated with filename and exception-message in event header, into the error-topic. This file is ignored and connector progresses to next file.logfollows same steps asignore, additionally logs the encountered exception.Note - error-topic is only populated whenignoreORlogare used. Error topic is named -${parse.error.topic.prefix}-${connectorName}Type: stringDefault: failValid Values:fail,ignore,logImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 430
      },
      "default": "failvalid values:fail,ignore,logimportance: medium"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 431,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when reading data from the store.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 431
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: high"
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 432,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 432
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 433,
      "display_name": "path.format",
      "documentation": "This configuration that was used to set the format of the data directories when partitioning with a TimeBasedPartitioner. For example, if you setpath.formatto'year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, then a valid data directories would be:/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 433
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 434,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for Byte Array Format. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 434
      },
      "default": ".binimportance: low"
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 435,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 435
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 436,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 436
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 437,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 437
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 438,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 438
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 439,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 439
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 440,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 440
      },
      "default": "kafka broker value"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 441,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster used for licensing. All servers in the cluster will be discovered from the initial connection. This list should be in the form <code>host1:port1,host2:port2,\u00e2\u0080\u00a6</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 441
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 442,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 442
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 443,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration, including licensing information. This is used only if the topic does not already exist, and the default of 3 is appropriate for production use. If you are using a development environment with less than 3 brokers, you must set this to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 443
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 444,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 444
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 445,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 445
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 446,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 446
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 447,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 447
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 448,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 448
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 449,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 449
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 450,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 450
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 451,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 451
      },
      "default": "nullimportance: high"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters",
      "order_in_group": 452,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 452
      }
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 453,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 453
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-west-2, eu-west-1, ap-northeast-2, ap-northeast-1, ca-central-1, sa-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, us-west-2]importance: medium"
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 454,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector uses \u00e2\u0080\u0098DefaultAWSCredentialsProviderChain\u00e2\u0080\u0099.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 454
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 455,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS Access Key ID used to connect to S3. If specified, this will be used over the credentials provider chain.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 455
      }
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 456,
      "display_name": "aws.secret.access.key",
      "documentation": "The AWS Secret Access Key used to connect to S3. If specified, this will be used over the credentials provider chain.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 456
      }
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 457,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 457
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.path.style.access",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 458,
      "display_name": "s3.path.style.access",
      "documentation": "Whether to use S3 path-style access.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 458
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 459,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 459
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 460,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 460
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 461,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 461
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 462,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 462
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 463,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable/disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client waits for a 100 (CONTINUE) response before sending the request body. If false, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 463
      },
      "default": "trueimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 464,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors, including, but not limited to the value of this parameter, type of exception occurred, throttling settings of the underlying S3 client, etc.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 464
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 465,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server-Side Encryption algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: either one of [kms, aes256], or an empty string.Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 465
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: either one of [kms, aes256], or an empty string.importance: low"
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 466,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server-Side Encryption customer-provided key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 466
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 467,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for Byte Array Format. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator looks like multiple records in the S3 object output.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 467
      },
      "default": "nullimportance: low"
    },
    {
      "name": "schema.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3 Parameters",
      "order_in_group": 468,
      "display_name": "schema.cache.size",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 468
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "record.batch.max.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters",
      "order_in_group": 469,
      "display_name": "record.batch.max.size",
      "documentation": "The maximum amount of records to return each time S3 is polled.Type: intDefault: 200Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 469
      },
      "default": "200valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters (Generalized Connector Only)",
      "order_in_group": 470,
      "display_name": "mode",
      "documentation": "The connector\u00e2\u0080\u0099s operation mode.Type: stringDefault: RESTORE_BACKUPValid Values: [GENERIC, RESTORE_BACKUP]Importance: highDependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 470
      },
      "default": "restore_backupvalid values: [generic, restore_backup]importance: highdependents:task.batch.size,starting.timestamp,bucket.listing.max.objects.threshold,topic.regex.list,partitioner.class,partition.field.name,path.format",
      "valid_values": [
        "generic",
        "restore_backup"
      ],
      "dependents": [
        "task.batch.size",
        "starting.timestamp",
        "bucket.listing.max.objects.threshold",
        "topic.regex.list",
        "partitioner.class",
        "partition.field.name",
        "path.format"
      ]
    },
    {
      "name": "topic.regex.list",
      "type": "LISTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3 Parameters (Generalized Connector Only)",
      "order_in_group": 471,
      "display_name": "topic.regex.list",
      "documentation": "A comma-separated list of pairs of type<kafkatopic>:<regex>that is used to map file paths to Kafka topics.\nAn example might betopic1:.*\\.jsonto source all files ending in.jsonto a kafka topic namedtopic1.\nYou can specify multiple of these<kafkatopic>:<regex>mappings to send different sets of files to different topics. Any files that aren\u00e2\u0080\u0099t mapped by a regex will be ignored and not sourced.\nFiles that match multiple mappings will be sent to the first topic in the list that maps the file.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: A list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 471
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: a list of pairs in the form<kafkatopic1>:<regex1>,<kafkatopic2>:<regex2>,...importance: high"
    },
    {
      "name": "task.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters (Generalized Connector Only)",
      "order_in_group": 472,
      "display_name": "task.batch.size",
      "documentation": "The number of files assigned to each task at a time.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,2000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 472
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,2000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2000"
      ]
    },
    {
      "name": "file.discovery.starting.timestamp",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters (Generalized Connector Only)",
      "order_in_group": 473,
      "display_name": "file.discovery.starting.timestamp",
      "documentation": "A Unix timestamp (in epoch milliseconds) that denotes where to start\nprocessing files. Any file encountered with a creation time earlier than this\nwill be ignored.ImportantThefile.discovery.starting.timestampconfiguration property should\nonly be used when there are no stored offsets for a connector\u00e2\u0080\u0093that is, this\nparameter is intended for new connectors to start from a specific timestamp\nrather than reading all the files in a bucket.Type: longDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 473
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "bucket.listing.max.objects.threshold",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters (Generalized Connector Only)",
      "order_in_group": 474,
      "display_name": "bucket.listing.max.objects.threshold",
      "documentation": "An integer that represents the maximum number of objects the connector will\nindex from the bucket at a time before failing. A value of-1indicates\nno limit.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 474
      },
      "default": "-1importance: medium"
    },
    {
      "name": "parse.error.topic.prefix",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3 Parameters (Generalized Connector Only)",
      "order_in_group": 475,
      "display_name": "parse.error.topic.prefix",
      "documentation": "The topic name prefix for a topic where records with error information would\nbe published whenever the connector encounters a malformed file or an\nexception while parsing the source file. This setting appends the topic prefix\nwith-${connectorName}. The final error topic name would be${parse.error.topic.prefix}-${connectorName}. The connector will populate\nthis topic whenbehavior.on.erroris set to eitherignoreorlog.\nAdditionally, connector uses this topic to write empty data in case of certain\nedge conditions to ensure connector is able to continue processing the files.Type: stringDefault:errorImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 475
      },
      "default": "errorimportance: medium"
    },
    {
      "name": "s3.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector Parameters",
      "order_in_group": 476,
      "display_name": "s3.poll.interval.ms",
      "documentation": "Frequency in milliseconds to poll for new or removed folders. This may result in updated task configurations starting to poll for data in added folders or stopping polling for data in removed folders.Type: longDefault: 60000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 476
      },
      "default": "60000importance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connector Parameters",
      "order_in_group": 477,
      "display_name": "format.class",
      "documentation": "Class responsible for converting S3 objects to source records.Type: classValid Values:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.string.StringFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 477
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Storage Parameters",
      "order_in_group": 478,
      "display_name": "topics.dir",
      "documentation": "Top level directory where data was stored to be re-ingested by Kafka.NoteWith the Generalized S3 Source connector, when thetopics.dirparameter\nis set to a blank space value ('') , the connector reads all the\ndata specified under the S3 bucket. If you don\u00e2\u0080\u0099t set a value fortopics.dir, the configuration property takes the default value oftopicsand expects all the data in the specified S3 bucket to be\nunder a folder calledtopics.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 478
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Storage Parameters",
      "order_in_group": 479,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter pattern.Type: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 479
      },
      "default": "/importance: medium"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Storage Parameters",
      "order_in_group": 480,
      "display_name": "behavior.on.error",
      "documentation": "Sets how the connector handles errors that occur when processing records and parsing source files.failimmediately stops the connector and throws the encountered exception.ignorewill log an event populated with filename and exception-message in event header, into the error-topic. This file is ignored and connector progresses to next file.logfollows same steps asignore, additionally logs the encountered exception.Note - error-topic is only populated whenignoreORlogare used. Error topic is named -${parse.error.topic.prefix}-${connectorName}Type: stringDefault: failValid Values:fail,ignore,logImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 480
      },
      "default": "failvalid values:fail,ignore,logimportance: medium"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Partitioner Parameters (Backup and Restore Connector Only)",
      "order_in_group": 481,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when reading data from the store.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 481
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: high"
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Partitioner Parameters (Backup and Restore Connector Only)",
      "order_in_group": 482,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 482
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Partitioner Parameters (Backup and Restore Connector Only)",
      "order_in_group": 483,
      "display_name": "path.format",
      "documentation": "This configuration that was used to set the format of the data directories when partitioning with a TimeBasedPartitioner. For example, if you setpath.formatto'year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, then a valid data directories would be:/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 483
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Partitioner Parameters (Backup and Restore Connector Only)",
      "order_in_group": 484,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for Byte Array Format. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 484
      },
      "default": ".binimportance: low"
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 485,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 485
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 486,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 486
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 487,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 487
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 488,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 488
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 489,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 489
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 490,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 490
      },
      "default": "kafka broker value"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 491,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster used for licensing. All servers in the cluster will be discovered from the initial connection. This list should be in the form <code>host1:port1,host2:port2,\u00e2\u0080\u00a6</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 491
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Confluent Platform license",
      "order_in_group": 492,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 492
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Confluent Platform license",
      "order_in_group": 493,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration, including licensing information. This is used only if the topic does not already exist, and the default of 3 is appropriate for production use. If you are using a development environment with less than 3 brokers, you must set this to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 493
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 494,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 494
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 495,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 495
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 496,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 496
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 497,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 497
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 498,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 498
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 499,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 499
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Confluent Platform license",
      "order_in_group": 500,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 500
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 501,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 501
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 502,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 502
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 503,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 503
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 504,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 504
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 505,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 505
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 506,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 506
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Confluent license properties",
      "order_in_group": 507,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 507
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "Search by configuration property name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "Search by configuration property name",
      "documentation": "Enter a string to search and filter by configuration property name.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "name",
      "documentation": "Globally unique name to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "connector.class",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 3,
      "display_name": "connector.class",
      "documentation": "Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \u00e2\u0080\u009cFileStreamSink\u00e2\u0080\u009d or \u00e2\u0080\u009cFileStreamSinkConnector\u00e2\u0080\u009d to make the configuration a bit shorter",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "tasks.max",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 4,
      "display_name": "tasks.max",
      "documentation": "Maximum number of tasks to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "tasks.max.enforce",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 5,
      "display_name": "tasks.max.enforce",
      "documentation": "(Deprecated) Whether to enforce that the tasks.max property is respected by the connector. By default, connectors that generate too many tasks will fail, and existing sets of tasks that exceed the tasks.max property will also be failed. If this property is set to false, then connectors will be allowed to generate more than the maximum number of tasks, and existing sets of tasks that exceed the tasks.max property will be allowed to run. This property is deprecated and will be removed in an upcoming major release.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "key.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 6,
      "display_name": "key.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "value.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 7,
      "display_name": "value.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "header.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 8,
      "display_name": "header.converter",
      "documentation": "HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      }
    },
    {
      "name": "config.action.reload",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 9,
      "display_name": "config.action.reload",
      "documentation": "The action that Connect should take on the connector when changes in external configuration providers result in a change in the connector\u00e2\u0080\u0099s configuration properties. A value of \u00e2\u0080\u0098none\u00e2\u0080\u0099 indicates that Connect will do nothing. A value of \u00e2\u0080\u0098restart\u00e2\u0080\u0099 indicates that Connect should restart/reload the connector with the updated configuration properties.The restart may actually be scheduled in the future if the external configuration provider indicates that a configuration value will expire in the future.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      }
    },
    {
      "name": "transforms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 10,
      "display_name": "transforms",
      "documentation": "Aliases for the transformations to be applied to records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      }
    },
    {
      "name": "predicates",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 11,
      "display_name": "predicates",
      "documentation": "Aliases for the predicates used by transformations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "errors.retry.timeout",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 12,
      "display_name": "errors.retry.timeout",
      "documentation": "The maximum duration in milliseconds that a failed operation will be reattempted. The default is 0, which means no retries will be attempted. Use -1 for infinite retries.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "errors.retry.delay.max.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 13,
      "display_name": "errors.retry.delay.max.ms",
      "documentation": "The maximum duration in milliseconds between consecutive retry attempts. Jitter will be added to the delay once this limit is reached to prevent thundering herd issues.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      }
    },
    {
      "name": "errors.tolerance",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 14,
      "display_name": "errors.tolerance",
      "documentation": "Behavior for tolerating errors during connector operation. \u00e2\u0080\u0098none\u00e2\u0080\u0099 is the default value and signals that any error will result in an immediate connector task failure; \u00e2\u0080\u0098all\u00e2\u0080\u0099 changes the behavior to skip over problematic records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "errors.log.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 15,
      "display_name": "errors.log.enable",
      "documentation": "If true, write each error and the details of the failed operation and problematic record to the Connect application log. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, so that only errors that are not tolerated are reported.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      }
    },
    {
      "name": "errors.log.include.messages",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 16,
      "display_name": "errors.log.include.messages",
      "documentation": "Whether to include in the log the Connect record that resulted in a failure. For sink records, the topic, partition, offset, and timestamp will be logged. For source records, the key and value (and their schemas), all headers, and the timestamp, Kafka topic, Kafka partition, source partition, and source offset will be logged. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, which will prevent record keys, values, and headers from being written to log files.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "exactly.once.support",
      "type": "STRING",
      "required": true,
      "importance": "HIGH",
      "group": "Common",
      "order_in_group": 18,
      "display_name": "exactly.once.support",
      "documentation": "Permitted values are requested, required. If set to \u00e2\u0080\u009crequired\u00e2\u0080\u009d, forces a preflight check for the connector to ensure that it can provide exactly-once semantics with the given configuration. Some connectors may be capable of providing exactly-once semantics but not signal to Connect that they support this; in that case, documentation for the connector should be consulted carefully before creating it, and the value for this property should be set to \u00e2\u0080\u009crequested\u00e2\u0080\u009d. Additionally, if the value is set to \u00e2\u0080\u009crequired\u00e2\u0080\u009d but the worker that performs preflight validation does not have exactly-once support enabled for source connectors, requests to create or validate the connector will fail.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      }
    },
    {
      "name": "transaction.boundary",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 19,
      "display_name": "transaction.boundary",
      "documentation": "Permitted values are: poll, interval, connector. If set to \u00e2\u0080\u0098poll\u00e2\u0080\u0099, a new producer transaction will be started and committed for every batch of records that each task from this connector provides to Connect. If set to \u00e2\u0080\u0098connector\u00e2\u0080\u0099, relies on connector-defined transaction boundaries; note that not all connectors are capable of defining their own transaction boundaries, and in that case, attempts to instantiate a connector with this value will fail. Finally, if set to \u00e2\u0080\u0098interval\u00e2\u0080\u0099, commits transactions only after a user-defined time interval has passed.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      }
    },
    {
      "name": "transaction.boundary.interval.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 20,
      "display_name": "transaction.boundary.interval.ms",
      "documentation": "If \u00e2\u0080\u0098transaction.boundary\u00e2\u0080\u0099 is set to \u00e2\u0080\u0098interval\u00e2\u0080\u0099, determines the interval for producer transaction commits by connector tasks. If unset, defaults to the value of the worker-level \u00e2\u0080\u0098offset.flush.interval.ms\u00e2\u0080\u0099 property. It has no effect if a different transaction.boundary is specified.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      }
    },
    {
      "name": "offsets.storage.topic",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 21,
      "display_name": "offsets.storage.topic",
      "documentation": "The name of a separate offsets topic to use for this connector. If empty or not specified, the worker\u00e2\u0080\u0099s global offsets topic name will be used. If specified, the offsets topic will be created if it does not already exist on the Kafka cluster targeted by this connector (which may be different from the one used for the worker\u00e2\u0080\u0099s global offsets topic if the bootstrap.servers property of the connector\u00e2\u0080\u0099s producer has been overridden from the worker\u00e2\u0080\u0099s). Only applicable in distributed mode; in standalone mode, setting this property will have no effect.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      }
    }
  ]
}