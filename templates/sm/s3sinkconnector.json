{
  "template_id": "S3SinkConnector",
  "connector_type": "SINK",
  "connector.class": "io.confluent.connect.s3.S3SinkConnector",
  "name": "{{.logicalClusterId}}",
  "imports": [],
  "group_order": [
    "Connector",
    "Schema",
    "S3",
    "Storage",
    "Keys and headers",
    "Partitioner",
    "CSFLE configuration"
  ],
  "config_defs": [
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 1,
      "display_name": "format.class",
      "documentation": "The format class to use when writing data to the store.Type: classValid Values: Any class that implements the following classes:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.parquet.ParquetFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 1
      }
    },
    {
      "name": "flush.size",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 2,
      "display_name": "flush.size",
      "documentation": "Number of records written to store before invoking file commits.Type: intImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "rotate.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 3,
      "display_name": "rotate.interval.ms",
      "documentation": "The time interval in milliseconds to invoke file commits. You can configure this parameter so that the time interval is determined by using a timestamp extractor (for example, Kafka Record Time, Record Field, or Wall Clock extractor). When the first record is processed, a timestamp is set as the base time. This is useful if you require exactly-once-semantics. This configuration ensures that file commits are invoked at every configured interval. The default value-1indicates that this feature is disabled.The S3 connector allows one writer at a time for this parameter. When the S3 connector encounters data that\nbelongs to a previously closed output partition, it closes the current partition and creates a new partition in S3.\nIf there is no late data arriving, the S3 connector closes the current partition when it reads a record whose extracted\ntimestamp is greater than the specified amount of time.Type: longDefault: -1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      },
      "default": "-1importance: high"
    },
    {
      "name": "rotate.schedule.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 4,
      "display_name": "rotate.schedule.interval.ms",
      "documentation": "The time interval in milliseconds to periodically invoke file commits. This configuration ensures that file commits are invoked at every configured interval. Time of commit will be adjusted to 00:00 of selected timezone. The commit will be performed at the scheduled time, regardless of the previous commit time or number of messages. This configuration is useful when you have to commit your data based on current server time, for example at the beginning of every hour. The default value-1means that this feature is disabled.The S3 Connector supports multiple writers. When the S3 connector encounters late arriving data, it keeps the current\npartition open and creates a new partition for the late data in S3. It rolls up files based on the time interval specified.\nFor example, ifrotate.schedule.interval.ms=180000, it will roll up files 20 times in one hour.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      },
      "default": "-1importance: medium"
    },
    {
      "name": "schema.cache.config",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 5,
      "display_name": "schema.cache.config",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 1000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      },
      "default": "1000importance: low"
    },
    {
      "name": "enhanced.avro.schema.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 6,
      "display_name": "enhanced.avro.schema.support",
      "documentation": "Enable enhanced Avro schema support in the Avro Converter. When set totrue, this property preserves Avro schema package information and Enums when going from Avro schema to Connect schema. This information is added back in when going from Connect schema to Avro schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      },
      "default": "falseimportance: low"
    },
    {
      "name": "connect.meta.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 7,
      "display_name": "connect.meta.data",
      "documentation": "Allow the Connect converter to add its metadata to the output schema.Type: booleanDefault: trueImportance: lowTheconnect.meta.dataproperty preserves the following Connect schema metadata when going from Connect schema to Avro schema. The following metadata is added back in when going from Avro schema to Connect schema.docversionparametersdefault valuenametype",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      },
      "default": "trueimportance: lowtheconnect.meta.dataproperty preserves the following connect schema metadata when going from connect schema to avro schema. the following metadata is added back in when going from avro schema to connect schema.docversionparametersdefault valuenametype"
    },
    {
      "name": "retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 8,
      "display_name": "retry.backoff.ms",
      "documentation": "The retry backoff in milliseconds. This config is used to notify Kafka Connect to retry delivering a message batch or performing recovery in case of transient exceptions.Type: longDefault: 5000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      },
      "default": "5000importance: low"
    },
    {
      "name": "filename.offset.zero.pad.width",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 9,
      "display_name": "filename.offset.zero.pad.width",
      "documentation": "Width to zero pad offsets in store\u00e2\u0080\u0099s filenames if offsets are too short in order to provide fixed width filenames that can be ordered by simple lexicographic sorting.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "avro.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 10,
      "display_name": "avro.codec",
      "documentation": "The Avro compression codec to be used for output  files. Available values: null, deflate, snappy and bzip2 (CodecSource is org.apache.avro.file.CodecFactory)Type: stringDefault: nullValid Values: [null, deflate, snappy, bzip2]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      },
      "default": "nullvalid values: [null, deflate, snappy, bzip2]importance: low",
      "valid_values": [
        "null",
        "deflate",
        "snappy",
        "bzip2"
      ]
    },
    {
      "name": "parquet.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 11,
      "display_name": "parquet.codec",
      "documentation": "The Parquet compression codec to be used for output files.Type: stringDefault: snappyValid Values: [none, gzip, snappy, lz4, brotli, zstd, lzo]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      },
      "default": "snappyvalid values: [none, gzip, snappy, lz4, brotli, zstd, lzo]importance: low",
      "valid_values": [
        "none",
        "gzip",
        "snappy",
        "lz4",
        "brotli",
        "zstd",
        "lzo"
      ]
    },
    {
      "name": "schema.compatibility",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 12,
      "display_name": "schema.compatibility",
      "documentation": "The schema compatibility rule to use when the connector is observing schema changes. The supported configurations are NONE, BACKWARD, FORWARD and FULL.Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      },
      "default": "noneimportance: high"
    },
    {
      "name": "allow.optional.map.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 13,
      "display_name": "allow.optional.map.keys",
      "documentation": "An Avro converter configuration parameter you can use in the connector\nconfiguration to allow an optional string map key when converting from\nConnect Schema to Avro Schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 14,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "s3.object.tagging",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 15,
      "display_name": "s3.object.tagging",
      "documentation": "Tag S3 objects with start and end offsets, as well as record count.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 16,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      },
      "default": "us-west-2valid values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]importance: medium",
      "valid_values": [
        "us-iso-east-1",
        "us-isob-east-1",
        "us-gov-east-1",
        "us-gov-west-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "eu-central-1",
        "eu-north-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "cn-north-1",
        "cn-northwest-1"
      ]
    },
    {
      "name": "s3.part.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 17,
      "display_name": "s3.part.size",
      "documentation": "The Part Size in S3 Multi-part Uploads.Type: intDefault: 26214400Valid Values: [5242880,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      },
      "default": "26214400valid values: [5242880,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "5242880",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "s3.elastic.buffer.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 18,
      "display_name": "s3.elastic.buffer.enable",
      "documentation": "Specifies whether or not to allocate elastic buffer for staging s3-part to save memory. Note that this may cause decreased performance or increased CPU usage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.elastic.buffer.init.capacity",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 19,
      "display_name": "s3.elastic.buffer.init.capacity",
      "documentation": "Elastic buffer initial capacity. Only applicable whens3.elastic.buffer.enableis settrue.Type: intDefault: 131072 (128 KB)Valid Values: [4096,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      },
      "default": "131072 (128 kb)valid values: [4096,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "4096",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 20,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 21,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS access key ID used to authenticate personal AWS credentials such as IAM credentials. Use only if you do not wish to authenticate by using a credentials provider class,``s3.credentials.provider.class``.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 22,
      "display_name": "aws.secret.access.key",
      "documentation": "The secret access key used to authenticate personal AWS credentials such as IAM credentials. Use this only if you do not want to use a credentials provider class for authentication. You select a credentials provider class using thes3.credentials.provider.classconfiguration property.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 22
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 23,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server Side Encryption Algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, AES256, aws:kms]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 23
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, aes256, aws:kms]importance: low",
      "valid_values": [
        "",
        "aes256",
        "aws:kms"
      ]
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 24,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server Side Encryption Customer-Provided Key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 24
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.sse.kms.key.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 25,
      "display_name": "s3.sse.kms.key.id",
      "documentation": "The name of the AWS Key Management Service (AWS-KMS) key to be used for server side encryption of the S3 objects. No encryption is used when no key is provided, but it is enabled whenaws:kmsis specified as encryption algorithm with a valid key name.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 25
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.acl.canned",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 26,
      "display_name": "s3.acl.canned",
      "documentation": "An S3 canned ACL header value to apply when writing objects.Type: stringDefault: nullValid Values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 26
      },
      "default": "nullvalid values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]importance: low",
      "valid_values": [
        "private",
        "public-read",
        "public-read-write",
        "authenticated-read",
        "log-delivery-write",
        "bucket-owner-read",
        "bucket-owner-full-control",
        "aws-exec-read"
      ]
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 27,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 27
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.compression.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 28,
      "display_name": "s3.compression.type",
      "documentation": "Compression type for files written to S3. Applied when using JsonFormat or ByteArrayFormat. Available values: none, gzip.Type: stringDefault: noneValid Values: [none, gzip]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 28
      },
      "default": "nonevalid values: [none, gzip]importance: low",
      "valid_values": [
        "none",
        "gzip"
      ]
    },
    {
      "name": "s3.compression.level",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 29,
      "display_name": "s3.compression.level",
      "documentation": "Compression level for files written to S3. Applied when using JsonFormat or ByteArrayFormat.Type: intDefault: -1Valid Values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 29
      },
      "default": "-1valid values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 30,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors including, but not limited to: the value of this parameter, type of exception occurred, and throttling settings of the underlying S3 client.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 30
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 31,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 31
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 32,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for ByteArrayFormat. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 32
      },
      "default": ".binimportance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 33,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for ByteArrayFormat. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator will look like multiple records in the output S3 object.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 33
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 34,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 34
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 35,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 35
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 36,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 36
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 37,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable or disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client will wait for a 100 (CONTINUE) response before sending the request body. Else, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 37
      },
      "default": "trueimportance: low"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 38,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a null value (for example, Kafka tombstone records).\nValid options areignore,failandwrite. Note that if you setbehavior.on.null.valuestowrite,store.kafka.keysmust be set totrue. Additionally, if you setbehavior.on.null.valuestoignore,\nanderrors.tolerancetonone, you must disable the reporting of null\nrecords to theDead Letter Queue (DLQ). To achieve this, seterrors.log.enabletofalseand do not configure a DLQ topic.Type: stringDefault: failValid Values: [ignore, fail, write]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 38
      },
      "default": "failvalid values: [ignore, fail, write]importance: low",
      "valid_values": [
        "ignore",
        "fail",
        "write"
      ]
    },
    {
      "name": "sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 39,
      "display_name": "sts.role.arn",
      "documentation": "Role ARN to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 39
      },
      "default": "nullimportance: high"
    },
    {
      "name": "sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 40,
      "display_name": "sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 40
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 41,
      "display_name": "sts.role.session.name",
      "documentation": "Role session name to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 41
      },
      "default": "nullimportance: high"
    },
    {
      "name": "tombstone.encoded.partition",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 42,
      "display_name": "tombstone.encoded.partition",
      "documentation": "The Amazon S3 output folder to write the tombstone records to. The\nconfigured partitioner would map tombstone records to this output folder.Type: stringDefault:\"tombstone\"Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 42
      },
      "default": "\"tombstone\"importance: low"
    },
    {
      "name": "storage.class",
      "type": "CLASSIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 43,
      "display_name": "storage.class",
      "documentation": "The underlying storage layer.Type: classImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 43
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 44,
      "display_name": "topics.dir",
      "documentation": "Top level directory to store the data ingested from Kafka.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 44
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 45,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 45
      },
      "default": "nullimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 46,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter patternType: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 46
      },
      "default": "/importance: medium"
    },
    {
      "name": "file.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 47,
      "display_name": "file.delim",
      "documentation": "File delimiter patternType: stringDefault: +Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 47
      },
      "default": "+importance: medium"
    },
    {
      "name": "store.kafka.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 48,
      "display_name": "store.kafka.keys",
      "documentation": "Enable or disable writing record keys to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 48
      },
      "default": "falseimportance: low"
    },
    {
      "name": "keys.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 49,
      "display_name": "keys.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,Json,ByteArrayandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 49
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "store.kafka.headers",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 50,
      "display_name": "store.kafka.headers",
      "documentation": "Enable or disable writing record headers to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 50
      },
      "default": "falseimportance: low"
    },
    {
      "name": "headers.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 51,
      "display_name": "headers.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,JsonandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 51
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "s3.path.style.access.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 52,
      "display_name": "s3.path.style.access.enabled",
      "documentation": "Specifies whether or not to enable path-style access to the bucket used by the\nconnector. Setting this property tofalseenables the S3 connector to work in\nenvironments where path-style access is disabled.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 52
      },
      "default": "trueimportance: low"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 53,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when writing data to the store. You can useDefaultPartitioner, which preserves the Kafka partitions;FieldPartitioner, which partitions the data to different directories according to the value of the partitioning field specified inpartition.field.name;TimeBasedPartitioner, which partitions data according to ingestion time.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: highDependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 53
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: highdependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "dependents": [
        "partition.field.name",
        "partition.duration.ms",
        "path.format",
        "locale",
        "timezone"
      ]
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 54,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 54
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "partition.duration.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 55,
      "display_name": "partition.duration.ms",
      "documentation": "The duration of a partition milliseconds used byTimeBasedPartitioner. The default value -1 means that we are not usingTimeBasedPartitioner.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 55
      },
      "default": "-1importance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 56,
      "display_name": "path.format",
      "documentation": "This configuration is used to set the format of the data directories when partitioning withTimeBasedPartitioner. The format set in this configuration converts the Unix timestamp to proper directories strings. For example, if you setpath.format='year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, the data directories will have the format/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 56
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "locale",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 57,
      "display_name": "locale",
      "documentation": "The locale to use when partitioning withTimeBasedPartitioner. Used to format dates and times. For example, useen-USfor US English,en-GBfor UK English, orfr-FRfor French (in France). These may vary by Java version. See theavailable locales.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 57
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 58,
      "display_name": "timezone",
      "documentation": "The timezone to use when partitioning withTimeBasedPartitioner. Used to format and compute dates and times. All timezone IDs must be specified in the long format, such asAmerica/Los_Angeles,America/New_York, andEurope/Paris, orUTC. Alternatively a locale independent, fixed offset, datetime zone can be specified in form[+-]hh:mm. Support for these timezones may vary by Java version. See theavailable timezones within each locale, such asthose within the US English locale.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 58
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.extractor",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 59,
      "display_name": "timestamp.extractor",
      "documentation": "The extractor that gets the timestamp for records when partitioning withTimeBasedPartitioner. It can be set toWallclock,RecordorRecordFieldin order to use one of the built-in timestamp extractors or be given the fully-qualified class name of a user-defined class that extends theTimestampExtractorinterface.Type: stringDefault: WallclockImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 59
      },
      "default": "wallclockimportance: medium"
    },
    {
      "name": "timestamp.field",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 60,
      "display_name": "timestamp.field",
      "documentation": "The record field to be used as timestamp by the timestamp extractor.Type: stringDefault: timestampImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 60
      },
      "default": "timestampimportance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 61,
      "display_name": "format.class",
      "documentation": "The format class to use when writing data to the store.Type: classValid Values: Any class that implements the following classes:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.parquet.ParquetFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 61
      }
    },
    {
      "name": "flush.size",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 62,
      "display_name": "flush.size",
      "documentation": "Number of records written to store before invoking file commits.Type: intImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 62
      }
    },
    {
      "name": "rotate.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 63,
      "display_name": "rotate.interval.ms",
      "documentation": "The time interval in milliseconds to invoke file commits. You can configure this parameter so that the time interval is determined by using a timestamp extractor (for example, Kafka Record Time, Record Field, or Wall Clock extractor). When the first record is processed, a timestamp is set as the base time. This is useful if you require exactly-once-semantics. This configuration ensures that file commits are invoked at every configured interval. The default value-1indicates that this feature is disabled.The S3 connector allows one writer at a time for this parameter. When the S3 connector encounters data that\nbelongs to a previously closed output partition, it closes the current partition and creates a new partition in S3.\nIf there is no late data arriving, the S3 connector closes the current partition when it reads a record whose extracted\ntimestamp is greater than the specified amount of time.Type: longDefault: -1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 63
      },
      "default": "-1importance: high"
    },
    {
      "name": "rotate.schedule.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 64,
      "display_name": "rotate.schedule.interval.ms",
      "documentation": "The time interval in milliseconds to periodically invoke file commits. This configuration ensures that file commits are invoked at every configured interval. Time of commit will be adjusted to 00:00 of selected timezone. The commit will be performed at the scheduled time, regardless of the previous commit time or number of messages. This configuration is useful when you have to commit your data based on current server time, for example at the beginning of every hour. The default value-1means that this feature is disabled.The S3 Connector supports multiple writers. When the S3 connector encounters late arriving data, it keeps the current\npartition open and creates a new partition for the late data in S3. It rolls up files based on the time interval specified.\nFor example, ifrotate.schedule.interval.ms=180000, it will roll up files 20 times in one hour.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 64
      },
      "default": "-1importance: medium"
    },
    {
      "name": "schema.cache.config",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 65,
      "display_name": "schema.cache.config",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 1000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 65
      },
      "default": "1000importance: low"
    },
    {
      "name": "enhanced.avro.schema.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 66,
      "display_name": "enhanced.avro.schema.support",
      "documentation": "Enable enhanced Avro schema support in the Avro Converter. When set totrue, this property preserves Avro schema package information and Enums when going from Avro schema to Connect schema. This information is added back in when going from Connect schema to Avro schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 66
      },
      "default": "falseimportance: low"
    },
    {
      "name": "connect.meta.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 67,
      "display_name": "connect.meta.data",
      "documentation": "Allow the Connect converter to add its metadata to the output schema.Type: booleanDefault: trueImportance: lowTheconnect.meta.dataproperty preserves the following Connect schema metadata when going from Connect schema to Avro schema. The following metadata is added back in when going from Avro schema to Connect schema.docversionparametersdefault valuenametype",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 67
      },
      "default": "trueimportance: lowtheconnect.meta.dataproperty preserves the following connect schema metadata when going from connect schema to avro schema. the following metadata is added back in when going from avro schema to connect schema.docversionparametersdefault valuenametype"
    },
    {
      "name": "retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 68,
      "display_name": "retry.backoff.ms",
      "documentation": "The retry backoff in milliseconds. This config is used to notify Kafka Connect to retry delivering a message batch or performing recovery in case of transient exceptions.Type: longDefault: 5000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 68
      },
      "default": "5000importance: low"
    },
    {
      "name": "filename.offset.zero.pad.width",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 69,
      "display_name": "filename.offset.zero.pad.width",
      "documentation": "Width to zero pad offsets in store\u00e2\u0080\u0099s filenames if offsets are too short in order to provide fixed width filenames that can be ordered by simple lexicographic sorting.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 69
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "avro.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 70,
      "display_name": "avro.codec",
      "documentation": "The Avro compression codec to be used for output  files. Available values: null, deflate, snappy and bzip2 (CodecSource is org.apache.avro.file.CodecFactory)Type: stringDefault: nullValid Values: [null, deflate, snappy, bzip2]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 70
      },
      "default": "nullvalid values: [null, deflate, snappy, bzip2]importance: low",
      "valid_values": [
        "null",
        "deflate",
        "snappy",
        "bzip2"
      ]
    },
    {
      "name": "parquet.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 71,
      "display_name": "parquet.codec",
      "documentation": "The Parquet compression codec to be used for output files.Type: stringDefault: snappyValid Values: [none, gzip, snappy, lz4, brotli, zstd, lzo]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 71
      },
      "default": "snappyvalid values: [none, gzip, snappy, lz4, brotli, zstd, lzo]importance: low",
      "valid_values": [
        "none",
        "gzip",
        "snappy",
        "lz4",
        "brotli",
        "zstd",
        "lzo"
      ]
    },
    {
      "name": "schema.compatibility",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 72,
      "display_name": "schema.compatibility",
      "documentation": "The schema compatibility rule to use when the connector is observing schema changes. The supported configurations are NONE, BACKWARD, FORWARD and FULL.Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 72
      },
      "default": "noneimportance: high"
    },
    {
      "name": "allow.optional.map.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 73,
      "display_name": "allow.optional.map.keys",
      "documentation": "An Avro converter configuration parameter you can use in the connector\nconfiguration to allow an optional string map key when converting from\nConnect Schema to Avro Schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 73
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 74,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 74
      }
    },
    {
      "name": "s3.object.tagging",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 75,
      "display_name": "s3.object.tagging",
      "documentation": "Tag S3 objects with start and end offsets, as well as record count.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 75
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 76,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 76
      },
      "default": "us-west-2valid values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]importance: medium",
      "valid_values": [
        "us-iso-east-1",
        "us-isob-east-1",
        "us-gov-east-1",
        "us-gov-west-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "eu-central-1",
        "eu-north-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "cn-north-1",
        "cn-northwest-1"
      ]
    },
    {
      "name": "s3.part.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 77,
      "display_name": "s3.part.size",
      "documentation": "The Part Size in S3 Multi-part Uploads.Type: intDefault: 26214400Valid Values: [5242880,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 77
      },
      "default": "26214400valid values: [5242880,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "5242880",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "s3.elastic.buffer.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 78,
      "display_name": "s3.elastic.buffer.enable",
      "documentation": "Specifies whether or not to allocate elastic buffer for staging s3-part to save memory. Note that this may cause decreased performance or increased CPU usage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 78
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.elastic.buffer.init.capacity",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 79,
      "display_name": "s3.elastic.buffer.init.capacity",
      "documentation": "Elastic buffer initial capacity. Only applicable whens3.elastic.buffer.enableis settrue.Type: intDefault: 131072 (128 KB)Valid Values: [4096,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 79
      },
      "default": "131072 (128 kb)valid values: [4096,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "4096",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 80,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 80
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 81,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS access key ID used to authenticate personal AWS credentials such as IAM credentials. Use only if you do not wish to authenticate by using a credentials provider class,``s3.credentials.provider.class``.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 81
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 82,
      "display_name": "aws.secret.access.key",
      "documentation": "The secret access key used to authenticate personal AWS credentials such as IAM credentials. Use this only if you do not want to use a credentials provider class for authentication. You select a credentials provider class using thes3.credentials.provider.classconfiguration property.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 82
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 83,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server Side Encryption Algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, AES256, aws:kms]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 83
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, aes256, aws:kms]importance: low",
      "valid_values": [
        "",
        "aes256",
        "aws:kms"
      ]
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 84,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server Side Encryption Customer-Provided Key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 84
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.sse.kms.key.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 85,
      "display_name": "s3.sse.kms.key.id",
      "documentation": "The name of the AWS Key Management Service (AWS-KMS) key to be used for server side encryption of the S3 objects. No encryption is used when no key is provided, but it is enabled whenaws:kmsis specified as encryption algorithm with a valid key name.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 85
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.acl.canned",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 86,
      "display_name": "s3.acl.canned",
      "documentation": "An S3 canned ACL header value to apply when writing objects.Type: stringDefault: nullValid Values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 86
      },
      "default": "nullvalid values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]importance: low",
      "valid_values": [
        "private",
        "public-read",
        "public-read-write",
        "authenticated-read",
        "log-delivery-write",
        "bucket-owner-read",
        "bucket-owner-full-control",
        "aws-exec-read"
      ]
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 87,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 87
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.compression.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 88,
      "display_name": "s3.compression.type",
      "documentation": "Compression type for files written to S3. Applied when using JsonFormat or ByteArrayFormat. Available values: none, gzip.Type: stringDefault: noneValid Values: [none, gzip]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 88
      },
      "default": "nonevalid values: [none, gzip]importance: low",
      "valid_values": [
        "none",
        "gzip"
      ]
    },
    {
      "name": "s3.compression.level",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 89,
      "display_name": "s3.compression.level",
      "documentation": "Compression level for files written to S3. Applied when using JsonFormat or ByteArrayFormat.Type: intDefault: -1Valid Values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 89
      },
      "default": "-1valid values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 90,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors including, but not limited to: the value of this parameter, type of exception occurred, and throttling settings of the underlying S3 client.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 90
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 91,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 91
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 92,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for ByteArrayFormat. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 92
      },
      "default": ".binimportance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 93,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for ByteArrayFormat. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator will look like multiple records in the output S3 object.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 93
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 94,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 94
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 95,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 95
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 96,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 96
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 97,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable or disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client will wait for a 100 (CONTINUE) response before sending the request body. Else, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 97
      },
      "default": "trueimportance: low"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 98,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a null value (for example, Kafka tombstone records).\nValid options areignore,failandwrite. Note that if you setbehavior.on.null.valuestowrite,store.kafka.keysmust be set totrue. Additionally, if you setbehavior.on.null.valuestoignore,\nanderrors.tolerancetonone, you must disable the reporting of null\nrecords to theDead Letter Queue (DLQ). To achieve this, seterrors.log.enabletofalseand do not configure a DLQ topic.Type: stringDefault: failValid Values: [ignore, fail, write]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 98
      },
      "default": "failvalid values: [ignore, fail, write]importance: low",
      "valid_values": [
        "ignore",
        "fail",
        "write"
      ]
    },
    {
      "name": "sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 99,
      "display_name": "sts.role.arn",
      "documentation": "Role ARN to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 99
      },
      "default": "nullimportance: high"
    },
    {
      "name": "sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 100,
      "display_name": "sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 100
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 101,
      "display_name": "sts.role.session.name",
      "documentation": "Role session name to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 101
      },
      "default": "nullimportance: high"
    },
    {
      "name": "tombstone.encoded.partition",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 102,
      "display_name": "tombstone.encoded.partition",
      "documentation": "The Amazon S3 output folder to write the tombstone records to. The\nconfigured partitioner would map tombstone records to this output folder.Type: stringDefault:\"tombstone\"Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 102
      },
      "default": "\"tombstone\"importance: low"
    },
    {
      "name": "storage.class",
      "type": "CLASSIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 103,
      "display_name": "storage.class",
      "documentation": "The underlying storage layer.Type: classImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 103
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 104,
      "display_name": "topics.dir",
      "documentation": "Top level directory to store the data ingested from Kafka.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 104
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 105,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 105
      },
      "default": "nullimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 106,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter patternType: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 106
      },
      "default": "/importance: medium"
    },
    {
      "name": "file.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 107,
      "display_name": "file.delim",
      "documentation": "File delimiter patternType: stringDefault: +Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 107
      },
      "default": "+importance: medium"
    },
    {
      "name": "store.kafka.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 108,
      "display_name": "store.kafka.keys",
      "documentation": "Enable or disable writing record keys to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 108
      },
      "default": "falseimportance: low"
    },
    {
      "name": "keys.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 109,
      "display_name": "keys.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,Json,ByteArrayandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 109
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "store.kafka.headers",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 110,
      "display_name": "store.kafka.headers",
      "documentation": "Enable or disable writing record headers to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 110
      },
      "default": "falseimportance: low"
    },
    {
      "name": "headers.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 111,
      "display_name": "headers.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,JsonandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 111
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "s3.path.style.access.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 112,
      "display_name": "s3.path.style.access.enabled",
      "documentation": "Specifies whether or not to enable path-style access to the bucket used by the\nconnector. Setting this property tofalseenables the S3 connector to work in\nenvironments where path-style access is disabled.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 112
      },
      "default": "trueimportance: low"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 113,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when writing data to the store. You can useDefaultPartitioner, which preserves the Kafka partitions;FieldPartitioner, which partitions the data to different directories according to the value of the partitioning field specified inpartition.field.name;TimeBasedPartitioner, which partitions data according to ingestion time.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: highDependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 113
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: highdependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "dependents": [
        "partition.field.name",
        "partition.duration.ms",
        "path.format",
        "locale",
        "timezone"
      ]
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 114,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 114
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "partition.duration.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 115,
      "display_name": "partition.duration.ms",
      "documentation": "The duration of a partition milliseconds used byTimeBasedPartitioner. The default value -1 means that we are not usingTimeBasedPartitioner.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 115
      },
      "default": "-1importance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 116,
      "display_name": "path.format",
      "documentation": "This configuration is used to set the format of the data directories when partitioning withTimeBasedPartitioner. The format set in this configuration converts the Unix timestamp to proper directories strings. For example, if you setpath.format='year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, the data directories will have the format/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 116
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "locale",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 117,
      "display_name": "locale",
      "documentation": "The locale to use when partitioning withTimeBasedPartitioner. Used to format dates and times. For example, useen-USfor US English,en-GBfor UK English, orfr-FRfor French (in France). These may vary by Java version. See theavailable locales.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 117
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 118,
      "display_name": "timezone",
      "documentation": "The timezone to use when partitioning withTimeBasedPartitioner. Used to format and compute dates and times. All timezone IDs must be specified in the long format, such asAmerica/Los_Angeles,America/New_York, andEurope/Paris, orUTC. Alternatively a locale independent, fixed offset, datetime zone can be specified in form[+-]hh:mm. Support for these timezones may vary by Java version. See theavailable timezones within each locale, such asthose within the US English locale.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 118
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.extractor",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 119,
      "display_name": "timestamp.extractor",
      "documentation": "The extractor that gets the timestamp for records when partitioning withTimeBasedPartitioner. It can be set toWallclock,RecordorRecordFieldin order to use one of the built-in timestamp extractors or be given the fully-qualified class name of a user-defined class that extends theTimestampExtractorinterface.Type: stringDefault: WallclockImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 119
      },
      "default": "wallclockimportance: medium"
    },
    {
      "name": "timestamp.field",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 120,
      "display_name": "timestamp.field",
      "documentation": "The record field to be used as timestamp by the timestamp extractor.Type: stringDefault: timestampImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 120
      },
      "default": "timestampimportance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 121,
      "display_name": "format.class",
      "documentation": "The format class to use when writing data to the store.Type: classValid Values: Any class that implements the following classes:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.parquet.ParquetFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 121
      }
    },
    {
      "name": "flush.size",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 122,
      "display_name": "flush.size",
      "documentation": "Number of records written to store before invoking file commits.Type: intImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 122
      }
    },
    {
      "name": "rotate.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 123,
      "display_name": "rotate.interval.ms",
      "documentation": "The time interval in milliseconds to invoke file commits. You can configure this parameter so that the time interval is determined by using a timestamp extractor (for example, Kafka Record Time, Record Field, or Wall Clock extractor). When the first record is processed, a timestamp is set as the base time. This is useful if you require exactly-once-semantics. This configuration ensures that file commits are invoked at every configured interval. The default value-1indicates that this feature is disabled.The S3 connector allows one writer at a time for this parameter. When the S3 connector encounters data that\nbelongs to a previously closed output partition, it closes the current partition and creates a new partition in S3.\nIf there is no late data arriving, the S3 connector closes the current partition when it reads a record whose extracted\ntimestamp is greater than the specified amount of time.Type: longDefault: -1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 123
      },
      "default": "-1importance: high"
    },
    {
      "name": "rotate.schedule.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 124,
      "display_name": "rotate.schedule.interval.ms",
      "documentation": "The time interval in milliseconds to periodically invoke file commits. This configuration ensures that file commits are invoked at every configured interval. Time of commit will be adjusted to 00:00 of selected timezone. The commit will be performed at the scheduled time, regardless of the previous commit time or number of messages. This configuration is useful when you have to commit your data based on current server time, for example at the beginning of every hour. The default value-1means that this feature is disabled.The S3 Connector supports multiple writers. When the S3 connector encounters late arriving data, it keeps the current\npartition open and creates a new partition for the late data in S3. It rolls up files based on the time interval specified.\nFor example, ifrotate.schedule.interval.ms=180000, it will roll up files 20 times in one hour.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 124
      },
      "default": "-1importance: medium"
    },
    {
      "name": "schema.cache.config",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 125,
      "display_name": "schema.cache.config",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 1000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 125
      },
      "default": "1000importance: low"
    },
    {
      "name": "enhanced.avro.schema.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 126,
      "display_name": "enhanced.avro.schema.support",
      "documentation": "Enable enhanced Avro schema support in the Avro Converter. When set totrue, this property preserves Avro schema package information and Enums when going from Avro schema to Connect schema. This information is added back in when going from Connect schema to Avro schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 126
      },
      "default": "falseimportance: low"
    },
    {
      "name": "connect.meta.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 127,
      "display_name": "connect.meta.data",
      "documentation": "Allow the Connect converter to add its metadata to the output schema.Type: booleanDefault: trueImportance: lowTheconnect.meta.dataproperty preserves the following Connect schema metadata when going from Connect schema to Avro schema. The following metadata is added back in when going from Avro schema to Connect schema.docversionparametersdefault valuenametype",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 127
      },
      "default": "trueimportance: lowtheconnect.meta.dataproperty preserves the following connect schema metadata when going from connect schema to avro schema. the following metadata is added back in when going from avro schema to connect schema.docversionparametersdefault valuenametype"
    },
    {
      "name": "retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 128,
      "display_name": "retry.backoff.ms",
      "documentation": "The retry backoff in milliseconds. This config is used to notify Kafka Connect to retry delivering a message batch or performing recovery in case of transient exceptions.Type: longDefault: 5000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 128
      },
      "default": "5000importance: low"
    },
    {
      "name": "filename.offset.zero.pad.width",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 129,
      "display_name": "filename.offset.zero.pad.width",
      "documentation": "Width to zero pad offsets in store\u00e2\u0080\u0099s filenames if offsets are too short in order to provide fixed width filenames that can be ordered by simple lexicographic sorting.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 129
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "avro.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 130,
      "display_name": "avro.codec",
      "documentation": "The Avro compression codec to be used for output  files. Available values: null, deflate, snappy and bzip2 (CodecSource is org.apache.avro.file.CodecFactory)Type: stringDefault: nullValid Values: [null, deflate, snappy, bzip2]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 130
      },
      "default": "nullvalid values: [null, deflate, snappy, bzip2]importance: low",
      "valid_values": [
        "null",
        "deflate",
        "snappy",
        "bzip2"
      ]
    },
    {
      "name": "parquet.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 131,
      "display_name": "parquet.codec",
      "documentation": "The Parquet compression codec to be used for output files.Type: stringDefault: snappyValid Values: [none, gzip, snappy, lz4, brotli, zstd, lzo]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 131
      },
      "default": "snappyvalid values: [none, gzip, snappy, lz4, brotli, zstd, lzo]importance: low",
      "valid_values": [
        "none",
        "gzip",
        "snappy",
        "lz4",
        "brotli",
        "zstd",
        "lzo"
      ]
    },
    {
      "name": "schema.compatibility",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 132,
      "display_name": "schema.compatibility",
      "documentation": "The schema compatibility rule to use when the connector is observing schema changes. The supported configurations are NONE, BACKWARD, FORWARD and FULL.Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 132
      },
      "default": "noneimportance: high"
    },
    {
      "name": "allow.optional.map.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 133,
      "display_name": "allow.optional.map.keys",
      "documentation": "An Avro converter configuration parameter you can use in the connector\nconfiguration to allow an optional string map key when converting from\nConnect Schema to Avro Schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 133
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 134,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 134
      }
    },
    {
      "name": "s3.object.tagging",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 135,
      "display_name": "s3.object.tagging",
      "documentation": "Tag S3 objects with start and end offsets, as well as record count.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 135
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 136,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 136
      },
      "default": "us-west-2valid values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]importance: medium",
      "valid_values": [
        "us-iso-east-1",
        "us-isob-east-1",
        "us-gov-east-1",
        "us-gov-west-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "eu-central-1",
        "eu-north-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "cn-north-1",
        "cn-northwest-1"
      ]
    },
    {
      "name": "s3.part.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 137,
      "display_name": "s3.part.size",
      "documentation": "The Part Size in S3 Multi-part Uploads.Type: intDefault: 26214400Valid Values: [5242880,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 137
      },
      "default": "26214400valid values: [5242880,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "5242880",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "s3.elastic.buffer.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 138,
      "display_name": "s3.elastic.buffer.enable",
      "documentation": "Specifies whether or not to allocate elastic buffer for staging s3-part to save memory. Note that this may cause decreased performance or increased CPU usage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 138
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.elastic.buffer.init.capacity",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 139,
      "display_name": "s3.elastic.buffer.init.capacity",
      "documentation": "Elastic buffer initial capacity. Only applicable whens3.elastic.buffer.enableis settrue.Type: intDefault: 131072 (128 KB)Valid Values: [4096,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 139
      },
      "default": "131072 (128 kb)valid values: [4096,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "4096",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 140,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 140
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 141,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS access key ID used to authenticate personal AWS credentials such as IAM credentials. Use only if you do not wish to authenticate by using a credentials provider class,``s3.credentials.provider.class``.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 141
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 142,
      "display_name": "aws.secret.access.key",
      "documentation": "The secret access key used to authenticate personal AWS credentials such as IAM credentials. Use this only if you do not want to use a credentials provider class for authentication. You select a credentials provider class using thes3.credentials.provider.classconfiguration property.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 142
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 143,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server Side Encryption Algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, AES256, aws:kms]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 143
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, aes256, aws:kms]importance: low",
      "valid_values": [
        "",
        "aes256",
        "aws:kms"
      ]
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 144,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server Side Encryption Customer-Provided Key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 144
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.sse.kms.key.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 145,
      "display_name": "s3.sse.kms.key.id",
      "documentation": "The name of the AWS Key Management Service (AWS-KMS) key to be used for server side encryption of the S3 objects. No encryption is used when no key is provided, but it is enabled whenaws:kmsis specified as encryption algorithm with a valid key name.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 145
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.acl.canned",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 146,
      "display_name": "s3.acl.canned",
      "documentation": "An S3 canned ACL header value to apply when writing objects.Type: stringDefault: nullValid Values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 146
      },
      "default": "nullvalid values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]importance: low",
      "valid_values": [
        "private",
        "public-read",
        "public-read-write",
        "authenticated-read",
        "log-delivery-write",
        "bucket-owner-read",
        "bucket-owner-full-control",
        "aws-exec-read"
      ]
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 147,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 147
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.compression.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 148,
      "display_name": "s3.compression.type",
      "documentation": "Compression type for files written to S3. Applied when using JsonFormat or ByteArrayFormat. Available values: none, gzip.Type: stringDefault: noneValid Values: [none, gzip]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 148
      },
      "default": "nonevalid values: [none, gzip]importance: low",
      "valid_values": [
        "none",
        "gzip"
      ]
    },
    {
      "name": "s3.compression.level",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 149,
      "display_name": "s3.compression.level",
      "documentation": "Compression level for files written to S3. Applied when using JsonFormat or ByteArrayFormat.Type: intDefault: -1Valid Values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 149
      },
      "default": "-1valid values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 150,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors including, but not limited to: the value of this parameter, type of exception occurred, and throttling settings of the underlying S3 client.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 150
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 151,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 151
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 152,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for ByteArrayFormat. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 152
      },
      "default": ".binimportance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 153,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for ByteArrayFormat. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator will look like multiple records in the output S3 object.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 153
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 154,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 154
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 155,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 155
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 156,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 156
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 157,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable or disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client will wait for a 100 (CONTINUE) response before sending the request body. Else, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 157
      },
      "default": "trueimportance: low"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 158,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a null value (for example, Kafka tombstone records).\nValid options areignore,failandwrite. Note that if you setbehavior.on.null.valuestowrite,store.kafka.keysmust be set totrue. Additionally, if you setbehavior.on.null.valuestoignore,\nanderrors.tolerancetonone, you must disable the reporting of null\nrecords to theDead Letter Queue (DLQ). To achieve this, seterrors.log.enabletofalseand do not configure a DLQ topic.Type: stringDefault: failValid Values: [ignore, fail, write]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 158
      },
      "default": "failvalid values: [ignore, fail, write]importance: low",
      "valid_values": [
        "ignore",
        "fail",
        "write"
      ]
    },
    {
      "name": "sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 159,
      "display_name": "sts.role.arn",
      "documentation": "Role ARN to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 159
      },
      "default": "nullimportance: high"
    },
    {
      "name": "sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 160,
      "display_name": "sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 160
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 161,
      "display_name": "sts.role.session.name",
      "documentation": "Role session name to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 161
      },
      "default": "nullimportance: high"
    },
    {
      "name": "tombstone.encoded.partition",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 162,
      "display_name": "tombstone.encoded.partition",
      "documentation": "The Amazon S3 output folder to write the tombstone records to. The\nconfigured partitioner would map tombstone records to this output folder.Type: stringDefault:\"tombstone\"Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 162
      },
      "default": "\"tombstone\"importance: low"
    },
    {
      "name": "storage.class",
      "type": "CLASSIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 163,
      "display_name": "storage.class",
      "documentation": "The underlying storage layer.Type: classImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 163
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 164,
      "display_name": "topics.dir",
      "documentation": "Top level directory to store the data ingested from Kafka.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 164
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 165,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 165
      },
      "default": "nullimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 166,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter patternType: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 166
      },
      "default": "/importance: medium"
    },
    {
      "name": "file.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 167,
      "display_name": "file.delim",
      "documentation": "File delimiter patternType: stringDefault: +Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 167
      },
      "default": "+importance: medium"
    },
    {
      "name": "store.kafka.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 168,
      "display_name": "store.kafka.keys",
      "documentation": "Enable or disable writing record keys to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 168
      },
      "default": "falseimportance: low"
    },
    {
      "name": "keys.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 169,
      "display_name": "keys.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,Json,ByteArrayandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 169
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "store.kafka.headers",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 170,
      "display_name": "store.kafka.headers",
      "documentation": "Enable or disable writing record headers to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 170
      },
      "default": "falseimportance: low"
    },
    {
      "name": "headers.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 171,
      "display_name": "headers.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,JsonandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 171
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "s3.path.style.access.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 172,
      "display_name": "s3.path.style.access.enabled",
      "documentation": "Specifies whether or not to enable path-style access to the bucket used by the\nconnector. Setting this property tofalseenables the S3 connector to work in\nenvironments where path-style access is disabled.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 172
      },
      "default": "trueimportance: low"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 173,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when writing data to the store. You can useDefaultPartitioner, which preserves the Kafka partitions;FieldPartitioner, which partitions the data to different directories according to the value of the partitioning field specified inpartition.field.name;TimeBasedPartitioner, which partitions data according to ingestion time.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: highDependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 173
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: highdependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "dependents": [
        "partition.field.name",
        "partition.duration.ms",
        "path.format",
        "locale",
        "timezone"
      ]
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 174,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 174
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "partition.duration.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 175,
      "display_name": "partition.duration.ms",
      "documentation": "The duration of a partition milliseconds used byTimeBasedPartitioner. The default value -1 means that we are not usingTimeBasedPartitioner.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 175
      },
      "default": "-1importance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 176,
      "display_name": "path.format",
      "documentation": "This configuration is used to set the format of the data directories when partitioning withTimeBasedPartitioner. The format set in this configuration converts the Unix timestamp to proper directories strings. For example, if you setpath.format='year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, the data directories will have the format/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 176
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "locale",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 177,
      "display_name": "locale",
      "documentation": "The locale to use when partitioning withTimeBasedPartitioner. Used to format dates and times. For example, useen-USfor US English,en-GBfor UK English, orfr-FRfor French (in France). These may vary by Java version. See theavailable locales.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 177
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 178,
      "display_name": "timezone",
      "documentation": "The timezone to use when partitioning withTimeBasedPartitioner. Used to format and compute dates and times. All timezone IDs must be specified in the long format, such asAmerica/Los_Angeles,America/New_York, andEurope/Paris, orUTC. Alternatively a locale independent, fixed offset, datetime zone can be specified in form[+-]hh:mm. Support for these timezones may vary by Java version. See theavailable timezones within each locale, such asthose within the US English locale.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 178
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.extractor",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 179,
      "display_name": "timestamp.extractor",
      "documentation": "The extractor that gets the timestamp for records when partitioning withTimeBasedPartitioner. It can be set toWallclock,RecordorRecordFieldin order to use one of the built-in timestamp extractors or be given the fully-qualified class name of a user-defined class that extends theTimestampExtractorinterface.Type: stringDefault: WallclockImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 179
      },
      "default": "wallclockimportance: medium"
    },
    {
      "name": "timestamp.field",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 180,
      "display_name": "timestamp.field",
      "documentation": "The record field to be used as timestamp by the timestamp extractor.Type: stringDefault: timestampImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 180
      },
      "default": "timestampimportance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 181,
      "display_name": "format.class",
      "documentation": "The format class to use when writing data to the store.Type: classValid Values: Any class that implements the following classes:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.parquet.ParquetFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 181
      }
    },
    {
      "name": "flush.size",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 182,
      "display_name": "flush.size",
      "documentation": "Number of records written to store before invoking file commits.Type: intImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 182
      }
    },
    {
      "name": "rotate.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 183,
      "display_name": "rotate.interval.ms",
      "documentation": "The time interval in milliseconds to invoke file commits. You can configure this parameter so that the time interval is determined by using a timestamp extractor (for example, Kafka Record Time, Record Field, or Wall Clock extractor). When the first record is processed, a timestamp is set as the base time. This is useful if you require exactly-once-semantics. This configuration ensures that file commits are invoked at every configured interval. The default value-1indicates that this feature is disabled.The S3 connector allows one writer at a time for this parameter. When the S3 connector encounters data that\nbelongs to a previously closed output partition, it closes the current partition and creates a new partition in S3.\nIf there is no late data arriving, the S3 connector closes the current partition when it reads a record whose extracted\ntimestamp is greater than the specified amount of time.Type: longDefault: -1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 183
      },
      "default": "-1importance: high"
    },
    {
      "name": "rotate.schedule.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 184,
      "display_name": "rotate.schedule.interval.ms",
      "documentation": "The time interval in milliseconds to periodically invoke file commits. This configuration ensures that file commits are invoked at every configured interval. Time of commit will be adjusted to 00:00 of selected timezone. The commit will be performed at the scheduled time, regardless of the previous commit time or number of messages. This configuration is useful when you have to commit your data based on current server time, for example at the beginning of every hour. The default value-1means that this feature is disabled.The S3 Connector supports multiple writers. When the S3 connector encounters late arriving data, it keeps the current\npartition open and creates a new partition for the late data in S3. It rolls up files based on the time interval specified.\nFor example, ifrotate.schedule.interval.ms=180000, it will roll up files 20 times in one hour.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 184
      },
      "default": "-1importance: medium"
    },
    {
      "name": "schema.cache.config",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 185,
      "display_name": "schema.cache.config",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 1000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 185
      },
      "default": "1000importance: low"
    },
    {
      "name": "enhanced.avro.schema.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 186,
      "display_name": "enhanced.avro.schema.support",
      "documentation": "Enable enhanced Avro schema support in the Avro Converter. When set totrue, this property preserves Avro schema package information and Enums when going from Avro schema to Connect schema. This information is added back in when going from Connect schema to Avro schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 186
      },
      "default": "falseimportance: low"
    },
    {
      "name": "connect.meta.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 187,
      "display_name": "connect.meta.data",
      "documentation": "Allow the Connect converter to add its metadata to the output schema.Type: booleanDefault: trueImportance: lowTheconnect.meta.dataproperty preserves the following Connect schema metadata when going from Connect schema to Avro schema. The following metadata is added back in when going from Avro schema to Connect schema.docversionparametersdefault valuenametype",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 187
      },
      "default": "trueimportance: lowtheconnect.meta.dataproperty preserves the following connect schema metadata when going from connect schema to avro schema. the following metadata is added back in when going from avro schema to connect schema.docversionparametersdefault valuenametype"
    },
    {
      "name": "retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 188,
      "display_name": "retry.backoff.ms",
      "documentation": "The retry backoff in milliseconds. This config is used to notify Kafka Connect to retry delivering a message batch or performing recovery in case of transient exceptions.Type: longDefault: 5000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 188
      },
      "default": "5000importance: low"
    },
    {
      "name": "filename.offset.zero.pad.width",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 189,
      "display_name": "filename.offset.zero.pad.width",
      "documentation": "Width to zero pad offsets in store\u00e2\u0080\u0099s filenames if offsets are too short in order to provide fixed width filenames that can be ordered by simple lexicographic sorting.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 189
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "avro.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 190,
      "display_name": "avro.codec",
      "documentation": "The Avro compression codec to be used for output  files. Available values: null, deflate, snappy and bzip2 (CodecSource is org.apache.avro.file.CodecFactory)Type: stringDefault: nullValid Values: [null, deflate, snappy, bzip2]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 190
      },
      "default": "nullvalid values: [null, deflate, snappy, bzip2]importance: low",
      "valid_values": [
        "null",
        "deflate",
        "snappy",
        "bzip2"
      ]
    },
    {
      "name": "parquet.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 191,
      "display_name": "parquet.codec",
      "documentation": "The Parquet compression codec to be used for output files.Type: stringDefault: snappyValid Values: [none, gzip, snappy, lz4, brotli, zstd, lzo]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 191
      },
      "default": "snappyvalid values: [none, gzip, snappy, lz4, brotli, zstd, lzo]importance: low",
      "valid_values": [
        "none",
        "gzip",
        "snappy",
        "lz4",
        "brotli",
        "zstd",
        "lzo"
      ]
    },
    {
      "name": "schema.compatibility",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 192,
      "display_name": "schema.compatibility",
      "documentation": "The schema compatibility rule to use when the connector is observing schema changes. The supported configurations are NONE, BACKWARD, FORWARD and FULL.Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 192
      },
      "default": "noneimportance: high"
    },
    {
      "name": "allow.optional.map.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 193,
      "display_name": "allow.optional.map.keys",
      "documentation": "An Avro converter configuration parameter you can use in the connector\nconfiguration to allow an optional string map key when converting from\nConnect Schema to Avro Schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 193
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 194,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 194
      }
    },
    {
      "name": "s3.object.tagging",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 195,
      "display_name": "s3.object.tagging",
      "documentation": "Tag S3 objects with start and end offsets, as well as record count.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 195
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 196,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 196
      },
      "default": "us-west-2valid values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]importance: medium",
      "valid_values": [
        "us-iso-east-1",
        "us-isob-east-1",
        "us-gov-east-1",
        "us-gov-west-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "eu-central-1",
        "eu-north-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "cn-north-1",
        "cn-northwest-1"
      ]
    },
    {
      "name": "s3.part.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 197,
      "display_name": "s3.part.size",
      "documentation": "The Part Size in S3 Multi-part Uploads.Type: intDefault: 26214400Valid Values: [5242880,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 197
      },
      "default": "26214400valid values: [5242880,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "5242880",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "s3.elastic.buffer.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 198,
      "display_name": "s3.elastic.buffer.enable",
      "documentation": "Specifies whether or not to allocate elastic buffer for staging s3-part to save memory. Note that this may cause decreased performance or increased CPU usage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 198
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.elastic.buffer.init.capacity",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 199,
      "display_name": "s3.elastic.buffer.init.capacity",
      "documentation": "Elastic buffer initial capacity. Only applicable whens3.elastic.buffer.enableis settrue.Type: intDefault: 131072 (128 KB)Valid Values: [4096,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 199
      },
      "default": "131072 (128 kb)valid values: [4096,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "4096",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 200,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 200
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 201,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS access key ID used to authenticate personal AWS credentials such as IAM credentials. Use only if you do not wish to authenticate by using a credentials provider class,``s3.credentials.provider.class``.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 201
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 202,
      "display_name": "aws.secret.access.key",
      "documentation": "The secret access key used to authenticate personal AWS credentials such as IAM credentials. Use this only if you do not want to use a credentials provider class for authentication. You select a credentials provider class using thes3.credentials.provider.classconfiguration property.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 202
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 203,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server Side Encryption Algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, AES256, aws:kms]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 203
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, aes256, aws:kms]importance: low",
      "valid_values": [
        "",
        "aes256",
        "aws:kms"
      ]
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 204,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server Side Encryption Customer-Provided Key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 204
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.sse.kms.key.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 205,
      "display_name": "s3.sse.kms.key.id",
      "documentation": "The name of the AWS Key Management Service (AWS-KMS) key to be used for server side encryption of the S3 objects. No encryption is used when no key is provided, but it is enabled whenaws:kmsis specified as encryption algorithm with a valid key name.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 205
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.acl.canned",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 206,
      "display_name": "s3.acl.canned",
      "documentation": "An S3 canned ACL header value to apply when writing objects.Type: stringDefault: nullValid Values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 206
      },
      "default": "nullvalid values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]importance: low",
      "valid_values": [
        "private",
        "public-read",
        "public-read-write",
        "authenticated-read",
        "log-delivery-write",
        "bucket-owner-read",
        "bucket-owner-full-control",
        "aws-exec-read"
      ]
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 207,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 207
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.compression.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 208,
      "display_name": "s3.compression.type",
      "documentation": "Compression type for files written to S3. Applied when using JsonFormat or ByteArrayFormat. Available values: none, gzip.Type: stringDefault: noneValid Values: [none, gzip]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 208
      },
      "default": "nonevalid values: [none, gzip]importance: low",
      "valid_values": [
        "none",
        "gzip"
      ]
    },
    {
      "name": "s3.compression.level",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 209,
      "display_name": "s3.compression.level",
      "documentation": "Compression level for files written to S3. Applied when using JsonFormat or ByteArrayFormat.Type: intDefault: -1Valid Values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 209
      },
      "default": "-1valid values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 210,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors including, but not limited to: the value of this parameter, type of exception occurred, and throttling settings of the underlying S3 client.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 210
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 211,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 211
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 212,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for ByteArrayFormat. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 212
      },
      "default": ".binimportance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 213,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for ByteArrayFormat. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator will look like multiple records in the output S3 object.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 213
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 214,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 214
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 215,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 215
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 216,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 216
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 217,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable or disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client will wait for a 100 (CONTINUE) response before sending the request body. Else, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 217
      },
      "default": "trueimportance: low"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 218,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a null value (for example, Kafka tombstone records).\nValid options areignore,failandwrite. Note that if you setbehavior.on.null.valuestowrite,store.kafka.keysmust be set totrue. Additionally, if you setbehavior.on.null.valuestoignore,\nanderrors.tolerancetonone, you must disable the reporting of null\nrecords to theDead Letter Queue (DLQ). To achieve this, seterrors.log.enabletofalseand do not configure a DLQ topic.Type: stringDefault: failValid Values: [ignore, fail, write]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 218
      },
      "default": "failvalid values: [ignore, fail, write]importance: low",
      "valid_values": [
        "ignore",
        "fail",
        "write"
      ]
    },
    {
      "name": "sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 219,
      "display_name": "sts.role.arn",
      "documentation": "Role ARN to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 219
      },
      "default": "nullimportance: high"
    },
    {
      "name": "sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 220,
      "display_name": "sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 220
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 221,
      "display_name": "sts.role.session.name",
      "documentation": "Role session name to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 221
      },
      "default": "nullimportance: high"
    },
    {
      "name": "tombstone.encoded.partition",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 222,
      "display_name": "tombstone.encoded.partition",
      "documentation": "The Amazon S3 output folder to write the tombstone records to. The\nconfigured partitioner would map tombstone records to this output folder.Type: stringDefault:\"tombstone\"Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 222
      },
      "default": "\"tombstone\"importance: low"
    },
    {
      "name": "storage.class",
      "type": "CLASSIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 223,
      "display_name": "storage.class",
      "documentation": "The underlying storage layer.Type: classImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 223
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 224,
      "display_name": "topics.dir",
      "documentation": "Top level directory to store the data ingested from Kafka.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 224
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 225,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 225
      },
      "default": "nullimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 226,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter patternType: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 226
      },
      "default": "/importance: medium"
    },
    {
      "name": "file.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 227,
      "display_name": "file.delim",
      "documentation": "File delimiter patternType: stringDefault: +Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 227
      },
      "default": "+importance: medium"
    },
    {
      "name": "store.kafka.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 228,
      "display_name": "store.kafka.keys",
      "documentation": "Enable or disable writing record keys to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 228
      },
      "default": "falseimportance: low"
    },
    {
      "name": "keys.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 229,
      "display_name": "keys.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,Json,ByteArrayandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 229
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "store.kafka.headers",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 230,
      "display_name": "store.kafka.headers",
      "documentation": "Enable or disable writing record headers to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 230
      },
      "default": "falseimportance: low"
    },
    {
      "name": "headers.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 231,
      "display_name": "headers.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,JsonandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 231
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "s3.path.style.access.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 232,
      "display_name": "s3.path.style.access.enabled",
      "documentation": "Specifies whether or not to enable path-style access to the bucket used by the\nconnector. Setting this property tofalseenables the S3 connector to work in\nenvironments where path-style access is disabled.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 232
      },
      "default": "trueimportance: low"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 233,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when writing data to the store. You can useDefaultPartitioner, which preserves the Kafka partitions;FieldPartitioner, which partitions the data to different directories according to the value of the partitioning field specified inpartition.field.name;TimeBasedPartitioner, which partitions data according to ingestion time.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: highDependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 233
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: highdependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "dependents": [
        "partition.field.name",
        "partition.duration.ms",
        "path.format",
        "locale",
        "timezone"
      ]
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 234,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 234
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "partition.duration.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 235,
      "display_name": "partition.duration.ms",
      "documentation": "The duration of a partition milliseconds used byTimeBasedPartitioner. The default value -1 means that we are not usingTimeBasedPartitioner.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 235
      },
      "default": "-1importance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 236,
      "display_name": "path.format",
      "documentation": "This configuration is used to set the format of the data directories when partitioning withTimeBasedPartitioner. The format set in this configuration converts the Unix timestamp to proper directories strings. For example, if you setpath.format='year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, the data directories will have the format/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 236
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "locale",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 237,
      "display_name": "locale",
      "documentation": "The locale to use when partitioning withTimeBasedPartitioner. Used to format dates and times. For example, useen-USfor US English,en-GBfor UK English, orfr-FRfor French (in France). These may vary by Java version. See theavailable locales.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 237
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 238,
      "display_name": "timezone",
      "documentation": "The timezone to use when partitioning withTimeBasedPartitioner. Used to format and compute dates and times. All timezone IDs must be specified in the long format, such asAmerica/Los_Angeles,America/New_York, andEurope/Paris, orUTC. Alternatively a locale independent, fixed offset, datetime zone can be specified in form[+-]hh:mm. Support for these timezones may vary by Java version. See theavailable timezones within each locale, such asthose within the US English locale.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 238
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.extractor",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 239,
      "display_name": "timestamp.extractor",
      "documentation": "The extractor that gets the timestamp for records when partitioning withTimeBasedPartitioner. It can be set toWallclock,RecordorRecordFieldin order to use one of the built-in timestamp extractors or be given the fully-qualified class name of a user-defined class that extends theTimestampExtractorinterface.Type: stringDefault: WallclockImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 239
      },
      "default": "wallclockimportance: medium"
    },
    {
      "name": "timestamp.field",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 240,
      "display_name": "timestamp.field",
      "documentation": "The record field to be used as timestamp by the timestamp extractor.Type: stringDefault: timestampImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 240
      },
      "default": "timestampimportance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 241,
      "display_name": "format.class",
      "documentation": "The format class to use when writing data to the store.Type: classValid Values: Any class that implements the following classes:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.parquet.ParquetFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 241
      }
    },
    {
      "name": "flush.size",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 242,
      "display_name": "flush.size",
      "documentation": "Number of records written to store before invoking file commits.Type: intImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 242
      }
    },
    {
      "name": "rotate.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 243,
      "display_name": "rotate.interval.ms",
      "documentation": "The time interval in milliseconds to invoke file commits. You can configure this parameter so that the time interval is determined by using a timestamp extractor (for example, Kafka Record Time, Record Field, or Wall Clock extractor). When the first record is processed, a timestamp is set as the base time. This is useful if you require exactly-once-semantics. This configuration ensures that file commits are invoked at every configured interval. The default value-1indicates that this feature is disabled.The S3 connector allows one writer at a time for this parameter. When the S3 connector encounters data that\nbelongs to a previously closed output partition, it closes the current partition and creates a new partition in S3.\nIf there is no late data arriving, the S3 connector closes the current partition when it reads a record whose extracted\ntimestamp is greater than the specified amount of time.Type: longDefault: -1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 243
      },
      "default": "-1importance: high"
    },
    {
      "name": "rotate.schedule.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 244,
      "display_name": "rotate.schedule.interval.ms",
      "documentation": "The time interval in milliseconds to periodically invoke file commits. This configuration ensures that file commits are invoked at every configured interval. Time of commit will be adjusted to 00:00 of selected timezone. The commit will be performed at the scheduled time, regardless of the previous commit time or number of messages. This configuration is useful when you have to commit your data based on current server time, for example at the beginning of every hour. The default value-1means that this feature is disabled.The S3 Connector supports multiple writers. When the S3 connector encounters late arriving data, it keeps the current\npartition open and creates a new partition for the late data in S3. It rolls up files based on the time interval specified.\nFor example, ifrotate.schedule.interval.ms=180000, it will roll up files 20 times in one hour.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 244
      },
      "default": "-1importance: medium"
    },
    {
      "name": "schema.cache.config",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 245,
      "display_name": "schema.cache.config",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 1000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 245
      },
      "default": "1000importance: low"
    },
    {
      "name": "enhanced.avro.schema.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 246,
      "display_name": "enhanced.avro.schema.support",
      "documentation": "Enable enhanced Avro schema support in the Avro Converter. When set totrue, this property preserves Avro schema package information and Enums when going from Avro schema to Connect schema. This information is added back in when going from Connect schema to Avro schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 246
      },
      "default": "falseimportance: low"
    },
    {
      "name": "connect.meta.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 247,
      "display_name": "connect.meta.data",
      "documentation": "Allow the Connect converter to add its metadata to the output schema.Type: booleanDefault: trueImportance: lowTheconnect.meta.dataproperty preserves the following Connect schema metadata when going from Connect schema to Avro schema. The following metadata is added back in when going from Avro schema to Connect schema.docversionparametersdefault valuenametype",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 247
      },
      "default": "trueimportance: lowtheconnect.meta.dataproperty preserves the following connect schema metadata when going from connect schema to avro schema. the following metadata is added back in when going from avro schema to connect schema.docversionparametersdefault valuenametype"
    },
    {
      "name": "retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 248,
      "display_name": "retry.backoff.ms",
      "documentation": "The retry backoff in milliseconds. This config is used to notify Kafka Connect to retry delivering a message batch or performing recovery in case of transient exceptions.Type: longDefault: 5000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 248
      },
      "default": "5000importance: low"
    },
    {
      "name": "filename.offset.zero.pad.width",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 249,
      "display_name": "filename.offset.zero.pad.width",
      "documentation": "Width to zero pad offsets in store\u00e2\u0080\u0099s filenames if offsets are too short in order to provide fixed width filenames that can be ordered by simple lexicographic sorting.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 249
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "avro.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 250,
      "display_name": "avro.codec",
      "documentation": "The Avro compression codec to be used for output  files. Available values: null, deflate, snappy and bzip2 (CodecSource is org.apache.avro.file.CodecFactory)Type: stringDefault: nullValid Values: [null, deflate, snappy, bzip2]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 250
      },
      "default": "nullvalid values: [null, deflate, snappy, bzip2]importance: low",
      "valid_values": [
        "null",
        "deflate",
        "snappy",
        "bzip2"
      ]
    },
    {
      "name": "parquet.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 251,
      "display_name": "parquet.codec",
      "documentation": "The Parquet compression codec to be used for output files.Type: stringDefault: snappyValid Values: [none, gzip, snappy, lz4, brotli, zstd, lzo]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 251
      },
      "default": "snappyvalid values: [none, gzip, snappy, lz4, brotli, zstd, lzo]importance: low",
      "valid_values": [
        "none",
        "gzip",
        "snappy",
        "lz4",
        "brotli",
        "zstd",
        "lzo"
      ]
    },
    {
      "name": "schema.compatibility",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 252,
      "display_name": "schema.compatibility",
      "documentation": "The schema compatibility rule to use when the connector is observing schema changes. The supported configurations are NONE, BACKWARD, FORWARD and FULL.Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 252
      },
      "default": "noneimportance: high"
    },
    {
      "name": "allow.optional.map.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 253,
      "display_name": "allow.optional.map.keys",
      "documentation": "An Avro converter configuration parameter you can use in the connector\nconfiguration to allow an optional string map key when converting from\nConnect Schema to Avro Schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 253
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 254,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 254
      }
    },
    {
      "name": "s3.object.tagging",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 255,
      "display_name": "s3.object.tagging",
      "documentation": "Tag S3 objects with start and end offsets, as well as record count.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 255
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 256,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 256
      },
      "default": "us-west-2valid values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]importance: medium",
      "valid_values": [
        "us-iso-east-1",
        "us-isob-east-1",
        "us-gov-east-1",
        "us-gov-west-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "eu-central-1",
        "eu-north-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "cn-north-1",
        "cn-northwest-1"
      ]
    },
    {
      "name": "s3.part.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 257,
      "display_name": "s3.part.size",
      "documentation": "The Part Size in S3 Multi-part Uploads.Type: intDefault: 26214400Valid Values: [5242880,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 257
      },
      "default": "26214400valid values: [5242880,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "5242880",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "s3.elastic.buffer.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 258,
      "display_name": "s3.elastic.buffer.enable",
      "documentation": "Specifies whether or not to allocate elastic buffer for staging s3-part to save memory. Note that this may cause decreased performance or increased CPU usage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 258
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.elastic.buffer.init.capacity",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 259,
      "display_name": "s3.elastic.buffer.init.capacity",
      "documentation": "Elastic buffer initial capacity. Only applicable whens3.elastic.buffer.enableis settrue.Type: intDefault: 131072 (128 KB)Valid Values: [4096,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 259
      },
      "default": "131072 (128 kb)valid values: [4096,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "4096",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 260,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 260
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 261,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS access key ID used to authenticate personal AWS credentials such as IAM credentials. Use only if you do not wish to authenticate by using a credentials provider class,``s3.credentials.provider.class``.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 261
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 262,
      "display_name": "aws.secret.access.key",
      "documentation": "The secret access key used to authenticate personal AWS credentials such as IAM credentials. Use this only if you do not want to use a credentials provider class for authentication. You select a credentials provider class using thes3.credentials.provider.classconfiguration property.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 262
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 263,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server Side Encryption Algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, AES256, aws:kms]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 263
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, aes256, aws:kms]importance: low",
      "valid_values": [
        "",
        "aes256",
        "aws:kms"
      ]
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 264,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server Side Encryption Customer-Provided Key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 264
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.sse.kms.key.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 265,
      "display_name": "s3.sse.kms.key.id",
      "documentation": "The name of the AWS Key Management Service (AWS-KMS) key to be used for server side encryption of the S3 objects. No encryption is used when no key is provided, but it is enabled whenaws:kmsis specified as encryption algorithm with a valid key name.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 265
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.acl.canned",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 266,
      "display_name": "s3.acl.canned",
      "documentation": "An S3 canned ACL header value to apply when writing objects.Type: stringDefault: nullValid Values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 266
      },
      "default": "nullvalid values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]importance: low",
      "valid_values": [
        "private",
        "public-read",
        "public-read-write",
        "authenticated-read",
        "log-delivery-write",
        "bucket-owner-read",
        "bucket-owner-full-control",
        "aws-exec-read"
      ]
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 267,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 267
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.compression.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 268,
      "display_name": "s3.compression.type",
      "documentation": "Compression type for files written to S3. Applied when using JsonFormat or ByteArrayFormat. Available values: none, gzip.Type: stringDefault: noneValid Values: [none, gzip]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 268
      },
      "default": "nonevalid values: [none, gzip]importance: low",
      "valid_values": [
        "none",
        "gzip"
      ]
    },
    {
      "name": "s3.compression.level",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 269,
      "display_name": "s3.compression.level",
      "documentation": "Compression level for files written to S3. Applied when using JsonFormat or ByteArrayFormat.Type: intDefault: -1Valid Values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 269
      },
      "default": "-1valid values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 270,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors including, but not limited to: the value of this parameter, type of exception occurred, and throttling settings of the underlying S3 client.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 270
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 271,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 271
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 272,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for ByteArrayFormat. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 272
      },
      "default": ".binimportance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 273,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for ByteArrayFormat. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator will look like multiple records in the output S3 object.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 273
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 274,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 274
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 275,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 275
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 276,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 276
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 277,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable or disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client will wait for a 100 (CONTINUE) response before sending the request body. Else, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 277
      },
      "default": "trueimportance: low"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 278,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a null value (for example, Kafka tombstone records).\nValid options areignore,failandwrite. Note that if you setbehavior.on.null.valuestowrite,store.kafka.keysmust be set totrue. Additionally, if you setbehavior.on.null.valuestoignore,\nanderrors.tolerancetonone, you must disable the reporting of null\nrecords to theDead Letter Queue (DLQ). To achieve this, seterrors.log.enabletofalseand do not configure a DLQ topic.Type: stringDefault: failValid Values: [ignore, fail, write]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 278
      },
      "default": "failvalid values: [ignore, fail, write]importance: low",
      "valid_values": [
        "ignore",
        "fail",
        "write"
      ]
    },
    {
      "name": "sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 279,
      "display_name": "sts.role.arn",
      "documentation": "Role ARN to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 279
      },
      "default": "nullimportance: high"
    },
    {
      "name": "sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 280,
      "display_name": "sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 280
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 281,
      "display_name": "sts.role.session.name",
      "documentation": "Role session name to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 281
      },
      "default": "nullimportance: high"
    },
    {
      "name": "tombstone.encoded.partition",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 282,
      "display_name": "tombstone.encoded.partition",
      "documentation": "The Amazon S3 output folder to write the tombstone records to. The\nconfigured partitioner would map tombstone records to this output folder.Type: stringDefault:\"tombstone\"Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 282
      },
      "default": "\"tombstone\"importance: low"
    },
    {
      "name": "storage.class",
      "type": "CLASSIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 283,
      "display_name": "storage.class",
      "documentation": "The underlying storage layer.Type: classImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 283
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 284,
      "display_name": "topics.dir",
      "documentation": "Top level directory to store the data ingested from Kafka.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 284
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 285,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 285
      },
      "default": "nullimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 286,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter patternType: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 286
      },
      "default": "/importance: medium"
    },
    {
      "name": "file.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 287,
      "display_name": "file.delim",
      "documentation": "File delimiter patternType: stringDefault: +Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 287
      },
      "default": "+importance: medium"
    },
    {
      "name": "store.kafka.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 288,
      "display_name": "store.kafka.keys",
      "documentation": "Enable or disable writing record keys to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 288
      },
      "default": "falseimportance: low"
    },
    {
      "name": "keys.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 289,
      "display_name": "keys.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,Json,ByteArrayandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 289
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "store.kafka.headers",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 290,
      "display_name": "store.kafka.headers",
      "documentation": "Enable or disable writing record headers to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 290
      },
      "default": "falseimportance: low"
    },
    {
      "name": "headers.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 291,
      "display_name": "headers.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,JsonandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 291
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "s3.path.style.access.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 292,
      "display_name": "s3.path.style.access.enabled",
      "documentation": "Specifies whether or not to enable path-style access to the bucket used by the\nconnector. Setting this property tofalseenables the S3 connector to work in\nenvironments where path-style access is disabled.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 292
      },
      "default": "trueimportance: low"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 293,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when writing data to the store. You can useDefaultPartitioner, which preserves the Kafka partitions;FieldPartitioner, which partitions the data to different directories according to the value of the partitioning field specified inpartition.field.name;TimeBasedPartitioner, which partitions data according to ingestion time.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: highDependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 293
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: highdependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "dependents": [
        "partition.field.name",
        "partition.duration.ms",
        "path.format",
        "locale",
        "timezone"
      ]
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 294,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 294
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "partition.duration.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 295,
      "display_name": "partition.duration.ms",
      "documentation": "The duration of a partition milliseconds used byTimeBasedPartitioner. The default value -1 means that we are not usingTimeBasedPartitioner.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 295
      },
      "default": "-1importance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 296,
      "display_name": "path.format",
      "documentation": "This configuration is used to set the format of the data directories when partitioning withTimeBasedPartitioner. The format set in this configuration converts the Unix timestamp to proper directories strings. For example, if you setpath.format='year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, the data directories will have the format/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 296
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "locale",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 297,
      "display_name": "locale",
      "documentation": "The locale to use when partitioning withTimeBasedPartitioner. Used to format dates and times. For example, useen-USfor US English,en-GBfor UK English, orfr-FRfor French (in France). These may vary by Java version. See theavailable locales.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 297
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 298,
      "display_name": "timezone",
      "documentation": "The timezone to use when partitioning withTimeBasedPartitioner. Used to format and compute dates and times. All timezone IDs must be specified in the long format, such asAmerica/Los_Angeles,America/New_York, andEurope/Paris, orUTC. Alternatively a locale independent, fixed offset, datetime zone can be specified in form[+-]hh:mm. Support for these timezones may vary by Java version. See theavailable timezones within each locale, such asthose within the US English locale.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 298
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.extractor",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 299,
      "display_name": "timestamp.extractor",
      "documentation": "The extractor that gets the timestamp for records when partitioning withTimeBasedPartitioner. It can be set toWallclock,RecordorRecordFieldin order to use one of the built-in timestamp extractors or be given the fully-qualified class name of a user-defined class that extends theTimestampExtractorinterface.Type: stringDefault: WallclockImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 299
      },
      "default": "wallclockimportance: medium"
    },
    {
      "name": "timestamp.field",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 300,
      "display_name": "timestamp.field",
      "documentation": "The record field to be used as timestamp by the timestamp extractor.Type: stringDefault: timestampImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 300
      },
      "default": "timestampimportance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 301,
      "display_name": "format.class",
      "documentation": "The format class to use when writing data to the store.Type: classValid Values: Any class that implements the following classes:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.parquet.ParquetFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 301
      }
    },
    {
      "name": "flush.size",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 302,
      "display_name": "flush.size",
      "documentation": "Number of records written to store before invoking file commits.Type: intImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 302
      }
    },
    {
      "name": "rotate.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 303,
      "display_name": "rotate.interval.ms",
      "documentation": "The time interval in milliseconds to invoke file commits. You can configure this parameter so that the time interval is determined by using a timestamp extractor (for example, Kafka Record Time, Record Field, or Wall Clock extractor). When the first record is processed, a timestamp is set as the base time. This is useful if you require exactly-once-semantics. This configuration ensures that file commits are invoked at every configured interval. The default value-1indicates that this feature is disabled.The S3 connector allows one writer at a time for this parameter. When the S3 connector encounters data that\nbelongs to a previously closed output partition, it closes the current partition and creates a new partition in S3.\nIf there is no late data arriving, the S3 connector closes the current partition when it reads a record whose extracted\ntimestamp is greater than the specified amount of time.Type: longDefault: -1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 303
      },
      "default": "-1importance: high"
    },
    {
      "name": "rotate.schedule.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 304,
      "display_name": "rotate.schedule.interval.ms",
      "documentation": "The time interval in milliseconds to periodically invoke file commits. This configuration ensures that file commits are invoked at every configured interval. Time of commit will be adjusted to 00:00 of selected timezone. The commit will be performed at the scheduled time, regardless of the previous commit time or number of messages. This configuration is useful when you have to commit your data based on current server time, for example at the beginning of every hour. The default value-1means that this feature is disabled.The S3 Connector supports multiple writers. When the S3 connector encounters late arriving data, it keeps the current\npartition open and creates a new partition for the late data in S3. It rolls up files based on the time interval specified.\nFor example, ifrotate.schedule.interval.ms=180000, it will roll up files 20 times in one hour.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 304
      },
      "default": "-1importance: medium"
    },
    {
      "name": "schema.cache.config",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 305,
      "display_name": "schema.cache.config",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 1000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 305
      },
      "default": "1000importance: low"
    },
    {
      "name": "enhanced.avro.schema.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 306,
      "display_name": "enhanced.avro.schema.support",
      "documentation": "Enable enhanced Avro schema support in the Avro Converter. When set totrue, this property preserves Avro schema package information and Enums when going from Avro schema to Connect schema. This information is added back in when going from Connect schema to Avro schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 306
      },
      "default": "falseimportance: low"
    },
    {
      "name": "connect.meta.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 307,
      "display_name": "connect.meta.data",
      "documentation": "Allow the Connect converter to add its metadata to the output schema.Type: booleanDefault: trueImportance: lowTheconnect.meta.dataproperty preserves the following Connect schema metadata when going from Connect schema to Avro schema. The following metadata is added back in when going from Avro schema to Connect schema.docversionparametersdefault valuenametype",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 307
      },
      "default": "trueimportance: lowtheconnect.meta.dataproperty preserves the following connect schema metadata when going from connect schema to avro schema. the following metadata is added back in when going from avro schema to connect schema.docversionparametersdefault valuenametype"
    },
    {
      "name": "retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 308,
      "display_name": "retry.backoff.ms",
      "documentation": "The retry backoff in milliseconds. This config is used to notify Kafka Connect to retry delivering a message batch or performing recovery in case of transient exceptions.Type: longDefault: 5000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 308
      },
      "default": "5000importance: low"
    },
    {
      "name": "filename.offset.zero.pad.width",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 309,
      "display_name": "filename.offset.zero.pad.width",
      "documentation": "Width to zero pad offsets in store\u00e2\u0080\u0099s filenames if offsets are too short in order to provide fixed width filenames that can be ordered by simple lexicographic sorting.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 309
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "avro.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 310,
      "display_name": "avro.codec",
      "documentation": "The Avro compression codec to be used for output  files. Available values: null, deflate, snappy and bzip2 (CodecSource is org.apache.avro.file.CodecFactory)Type: stringDefault: nullValid Values: [null, deflate, snappy, bzip2]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 310
      },
      "default": "nullvalid values: [null, deflate, snappy, bzip2]importance: low",
      "valid_values": [
        "null",
        "deflate",
        "snappy",
        "bzip2"
      ]
    },
    {
      "name": "parquet.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 311,
      "display_name": "parquet.codec",
      "documentation": "The Parquet compression codec to be used for output files.Type: stringDefault: snappyValid Values: [none, gzip, snappy, lz4, brotli, zstd, lzo]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 311
      },
      "default": "snappyvalid values: [none, gzip, snappy, lz4, brotli, zstd, lzo]importance: low",
      "valid_values": [
        "none",
        "gzip",
        "snappy",
        "lz4",
        "brotli",
        "zstd",
        "lzo"
      ]
    },
    {
      "name": "schema.compatibility",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 312,
      "display_name": "schema.compatibility",
      "documentation": "The schema compatibility rule to use when the connector is observing schema changes. The supported configurations are NONE, BACKWARD, FORWARD and FULL.Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 312
      },
      "default": "noneimportance: high"
    },
    {
      "name": "allow.optional.map.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 313,
      "display_name": "allow.optional.map.keys",
      "documentation": "An Avro converter configuration parameter you can use in the connector\nconfiguration to allow an optional string map key when converting from\nConnect Schema to Avro Schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 313
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 314,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 314
      }
    },
    {
      "name": "s3.object.tagging",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 315,
      "display_name": "s3.object.tagging",
      "documentation": "Tag S3 objects with start and end offsets, as well as record count.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 315
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 316,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 316
      },
      "default": "us-west-2valid values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]importance: medium",
      "valid_values": [
        "us-iso-east-1",
        "us-isob-east-1",
        "us-gov-east-1",
        "us-gov-west-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "eu-central-1",
        "eu-north-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "cn-north-1",
        "cn-northwest-1"
      ]
    },
    {
      "name": "s3.part.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 317,
      "display_name": "s3.part.size",
      "documentation": "The Part Size in S3 Multi-part Uploads.Type: intDefault: 26214400Valid Values: [5242880,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 317
      },
      "default": "26214400valid values: [5242880,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "5242880",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "s3.elastic.buffer.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 318,
      "display_name": "s3.elastic.buffer.enable",
      "documentation": "Specifies whether or not to allocate elastic buffer for staging s3-part to save memory. Note that this may cause decreased performance or increased CPU usage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 318
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.elastic.buffer.init.capacity",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 319,
      "display_name": "s3.elastic.buffer.init.capacity",
      "documentation": "Elastic buffer initial capacity. Only applicable whens3.elastic.buffer.enableis settrue.Type: intDefault: 131072 (128 KB)Valid Values: [4096,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 319
      },
      "default": "131072 (128 kb)valid values: [4096,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "4096",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 320,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 320
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 321,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS access key ID used to authenticate personal AWS credentials such as IAM credentials. Use only if you do not wish to authenticate by using a credentials provider class,``s3.credentials.provider.class``.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 321
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 322,
      "display_name": "aws.secret.access.key",
      "documentation": "The secret access key used to authenticate personal AWS credentials such as IAM credentials. Use this only if you do not want to use a credentials provider class for authentication. You select a credentials provider class using thes3.credentials.provider.classconfiguration property.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 322
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 323,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server Side Encryption Algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, AES256, aws:kms]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 323
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, aes256, aws:kms]importance: low",
      "valid_values": [
        "",
        "aes256",
        "aws:kms"
      ]
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 324,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server Side Encryption Customer-Provided Key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 324
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.sse.kms.key.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 325,
      "display_name": "s3.sse.kms.key.id",
      "documentation": "The name of the AWS Key Management Service (AWS-KMS) key to be used for server side encryption of the S3 objects. No encryption is used when no key is provided, but it is enabled whenaws:kmsis specified as encryption algorithm with a valid key name.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 325
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.acl.canned",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 326,
      "display_name": "s3.acl.canned",
      "documentation": "An S3 canned ACL header value to apply when writing objects.Type: stringDefault: nullValid Values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 326
      },
      "default": "nullvalid values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]importance: low",
      "valid_values": [
        "private",
        "public-read",
        "public-read-write",
        "authenticated-read",
        "log-delivery-write",
        "bucket-owner-read",
        "bucket-owner-full-control",
        "aws-exec-read"
      ]
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 327,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 327
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.compression.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 328,
      "display_name": "s3.compression.type",
      "documentation": "Compression type for files written to S3. Applied when using JsonFormat or ByteArrayFormat. Available values: none, gzip.Type: stringDefault: noneValid Values: [none, gzip]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 328
      },
      "default": "nonevalid values: [none, gzip]importance: low",
      "valid_values": [
        "none",
        "gzip"
      ]
    },
    {
      "name": "s3.compression.level",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 329,
      "display_name": "s3.compression.level",
      "documentation": "Compression level for files written to S3. Applied when using JsonFormat or ByteArrayFormat.Type: intDefault: -1Valid Values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 329
      },
      "default": "-1valid values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 330,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors including, but not limited to: the value of this parameter, type of exception occurred, and throttling settings of the underlying S3 client.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 330
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 331,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 331
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 332,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for ByteArrayFormat. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 332
      },
      "default": ".binimportance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 333,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for ByteArrayFormat. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator will look like multiple records in the output S3 object.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 333
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 334,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 334
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 335,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 335
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 336,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 336
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 337,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable or disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client will wait for a 100 (CONTINUE) response before sending the request body. Else, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 337
      },
      "default": "trueimportance: low"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 338,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a null value (for example, Kafka tombstone records).\nValid options areignore,failandwrite. Note that if you setbehavior.on.null.valuestowrite,store.kafka.keysmust be set totrue. Additionally, if you setbehavior.on.null.valuestoignore,\nanderrors.tolerancetonone, you must disable the reporting of null\nrecords to theDead Letter Queue (DLQ). To achieve this, seterrors.log.enabletofalseand do not configure a DLQ topic.Type: stringDefault: failValid Values: [ignore, fail, write]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 338
      },
      "default": "failvalid values: [ignore, fail, write]importance: low",
      "valid_values": [
        "ignore",
        "fail",
        "write"
      ]
    },
    {
      "name": "sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 339,
      "display_name": "sts.role.arn",
      "documentation": "Role ARN to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 339
      },
      "default": "nullimportance: high"
    },
    {
      "name": "sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 340,
      "display_name": "sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 340
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 341,
      "display_name": "sts.role.session.name",
      "documentation": "Role session name to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 341
      },
      "default": "nullimportance: high"
    },
    {
      "name": "tombstone.encoded.partition",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 342,
      "display_name": "tombstone.encoded.partition",
      "documentation": "The Amazon S3 output folder to write the tombstone records to. The\nconfigured partitioner would map tombstone records to this output folder.Type: stringDefault:\"tombstone\"Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 342
      },
      "default": "\"tombstone\"importance: low"
    },
    {
      "name": "storage.class",
      "type": "CLASSIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 343,
      "display_name": "storage.class",
      "documentation": "The underlying storage layer.Type: classImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 343
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 344,
      "display_name": "topics.dir",
      "documentation": "Top level directory to store the data ingested from Kafka.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 344
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 345,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 345
      },
      "default": "nullimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 346,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter patternType: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 346
      },
      "default": "/importance: medium"
    },
    {
      "name": "file.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 347,
      "display_name": "file.delim",
      "documentation": "File delimiter patternType: stringDefault: +Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 347
      },
      "default": "+importance: medium"
    },
    {
      "name": "store.kafka.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 348,
      "display_name": "store.kafka.keys",
      "documentation": "Enable or disable writing record keys to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 348
      },
      "default": "falseimportance: low"
    },
    {
      "name": "keys.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 349,
      "display_name": "keys.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,Json,ByteArrayandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 349
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "store.kafka.headers",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 350,
      "display_name": "store.kafka.headers",
      "documentation": "Enable or disable writing record headers to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 350
      },
      "default": "falseimportance: low"
    },
    {
      "name": "headers.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 351,
      "display_name": "headers.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,JsonandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 351
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "s3.path.style.access.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 352,
      "display_name": "s3.path.style.access.enabled",
      "documentation": "Specifies whether or not to enable path-style access to the bucket used by the\nconnector. Setting this property tofalseenables the S3 connector to work in\nenvironments where path-style access is disabled.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 352
      },
      "default": "trueimportance: low"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 353,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when writing data to the store. You can useDefaultPartitioner, which preserves the Kafka partitions;FieldPartitioner, which partitions the data to different directories according to the value of the partitioning field specified inpartition.field.name;TimeBasedPartitioner, which partitions data according to ingestion time.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: highDependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 353
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: highdependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "dependents": [
        "partition.field.name",
        "partition.duration.ms",
        "path.format",
        "locale",
        "timezone"
      ]
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 354,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 354
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "partition.duration.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 355,
      "display_name": "partition.duration.ms",
      "documentation": "The duration of a partition milliseconds used byTimeBasedPartitioner. The default value -1 means that we are not usingTimeBasedPartitioner.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 355
      },
      "default": "-1importance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 356,
      "display_name": "path.format",
      "documentation": "This configuration is used to set the format of the data directories when partitioning withTimeBasedPartitioner. The format set in this configuration converts the Unix timestamp to proper directories strings. For example, if you setpath.format='year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, the data directories will have the format/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 356
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "locale",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 357,
      "display_name": "locale",
      "documentation": "The locale to use when partitioning withTimeBasedPartitioner. Used to format dates and times. For example, useen-USfor US English,en-GBfor UK English, orfr-FRfor French (in France). These may vary by Java version. See theavailable locales.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 357
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 358,
      "display_name": "timezone",
      "documentation": "The timezone to use when partitioning withTimeBasedPartitioner. Used to format and compute dates and times. All timezone IDs must be specified in the long format, such asAmerica/Los_Angeles,America/New_York, andEurope/Paris, orUTC. Alternatively a locale independent, fixed offset, datetime zone can be specified in form[+-]hh:mm. Support for these timezones may vary by Java version. See theavailable timezones within each locale, such asthose within the US English locale.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 358
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.extractor",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 359,
      "display_name": "timestamp.extractor",
      "documentation": "The extractor that gets the timestamp for records when partitioning withTimeBasedPartitioner. It can be set toWallclock,RecordorRecordFieldin order to use one of the built-in timestamp extractors or be given the fully-qualified class name of a user-defined class that extends theTimestampExtractorinterface.Type: stringDefault: WallclockImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 359
      },
      "default": "wallclockimportance: medium"
    },
    {
      "name": "timestamp.field",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 360,
      "display_name": "timestamp.field",
      "documentation": "The record field to be used as timestamp by the timestamp extractor.Type: stringDefault: timestampImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 360
      },
      "default": "timestampimportance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 361,
      "display_name": "format.class",
      "documentation": "The format class to use when writing data to the store.Type: classValid Values: Any class that implements the following classes:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.parquet.ParquetFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 361
      }
    },
    {
      "name": "flush.size",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 362,
      "display_name": "flush.size",
      "documentation": "Number of records written to store before invoking file commits.Type: intImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 362
      }
    },
    {
      "name": "rotate.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 363,
      "display_name": "rotate.interval.ms",
      "documentation": "The time interval in milliseconds to invoke file commits. You can configure this parameter so that the time interval is determined by using a timestamp extractor (for example, Kafka Record Time, Record Field, or Wall Clock extractor). When the first record is processed, a timestamp is set as the base time. This is useful if you require exactly-once-semantics. This configuration ensures that file commits are invoked at every configured interval. The default value-1indicates that this feature is disabled.The S3 connector allows one writer at a time for this parameter. When the S3 connector encounters data that\nbelongs to a previously closed output partition, it closes the current partition and creates a new partition in S3.\nIf there is no late data arriving, the S3 connector closes the current partition when it reads a record whose extracted\ntimestamp is greater than the specified amount of time.Type: longDefault: -1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 363
      },
      "default": "-1importance: high"
    },
    {
      "name": "rotate.schedule.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 364,
      "display_name": "rotate.schedule.interval.ms",
      "documentation": "The time interval in milliseconds to periodically invoke file commits. This configuration ensures that file commits are invoked at every configured interval. Time of commit will be adjusted to 00:00 of selected timezone. The commit will be performed at the scheduled time, regardless of the previous commit time or number of messages. This configuration is useful when you have to commit your data based on current server time, for example at the beginning of every hour. The default value-1means that this feature is disabled.The S3 Connector supports multiple writers. When the S3 connector encounters late arriving data, it keeps the current\npartition open and creates a new partition for the late data in S3. It rolls up files based on the time interval specified.\nFor example, ifrotate.schedule.interval.ms=180000, it will roll up files 20 times in one hour.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 364
      },
      "default": "-1importance: medium"
    },
    {
      "name": "schema.cache.config",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 365,
      "display_name": "schema.cache.config",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 1000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 365
      },
      "default": "1000importance: low"
    },
    {
      "name": "enhanced.avro.schema.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 366,
      "display_name": "enhanced.avro.schema.support",
      "documentation": "Enable enhanced Avro schema support in the Avro Converter. When set totrue, this property preserves Avro schema package information and Enums when going from Avro schema to Connect schema. This information is added back in when going from Connect schema to Avro schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 366
      },
      "default": "falseimportance: low"
    },
    {
      "name": "connect.meta.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 367,
      "display_name": "connect.meta.data",
      "documentation": "Allow the Connect converter to add its metadata to the output schema.Type: booleanDefault: trueImportance: lowTheconnect.meta.dataproperty preserves the following Connect schema metadata when going from Connect schema to Avro schema. The following metadata is added back in when going from Avro schema to Connect schema.docversionparametersdefault valuenametype",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 367
      },
      "default": "trueimportance: lowtheconnect.meta.dataproperty preserves the following connect schema metadata when going from connect schema to avro schema. the following metadata is added back in when going from avro schema to connect schema.docversionparametersdefault valuenametype"
    },
    {
      "name": "retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 368,
      "display_name": "retry.backoff.ms",
      "documentation": "The retry backoff in milliseconds. This config is used to notify Kafka Connect to retry delivering a message batch or performing recovery in case of transient exceptions.Type: longDefault: 5000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 368
      },
      "default": "5000importance: low"
    },
    {
      "name": "filename.offset.zero.pad.width",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 369,
      "display_name": "filename.offset.zero.pad.width",
      "documentation": "Width to zero pad offsets in store\u00e2\u0080\u0099s filenames if offsets are too short in order to provide fixed width filenames that can be ordered by simple lexicographic sorting.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 369
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "avro.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 370,
      "display_name": "avro.codec",
      "documentation": "The Avro compression codec to be used for output  files. Available values: null, deflate, snappy and bzip2 (CodecSource is org.apache.avro.file.CodecFactory)Type: stringDefault: nullValid Values: [null, deflate, snappy, bzip2]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 370
      },
      "default": "nullvalid values: [null, deflate, snappy, bzip2]importance: low",
      "valid_values": [
        "null",
        "deflate",
        "snappy",
        "bzip2"
      ]
    },
    {
      "name": "parquet.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 371,
      "display_name": "parquet.codec",
      "documentation": "The Parquet compression codec to be used for output files.Type: stringDefault: snappyValid Values: [none, gzip, snappy, lz4, brotli, zstd, lzo]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 371
      },
      "default": "snappyvalid values: [none, gzip, snappy, lz4, brotli, zstd, lzo]importance: low",
      "valid_values": [
        "none",
        "gzip",
        "snappy",
        "lz4",
        "brotli",
        "zstd",
        "lzo"
      ]
    },
    {
      "name": "schema.compatibility",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 372,
      "display_name": "schema.compatibility",
      "documentation": "The schema compatibility rule to use when the connector is observing schema changes. The supported configurations are NONE, BACKWARD, FORWARD and FULL.Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 372
      },
      "default": "noneimportance: high"
    },
    {
      "name": "allow.optional.map.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 373,
      "display_name": "allow.optional.map.keys",
      "documentation": "An Avro converter configuration parameter you can use in the connector\nconfiguration to allow an optional string map key when converting from\nConnect Schema to Avro Schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 373
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 374,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 374
      }
    },
    {
      "name": "s3.object.tagging",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 375,
      "display_name": "s3.object.tagging",
      "documentation": "Tag S3 objects with start and end offsets, as well as record count.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 375
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 376,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 376
      },
      "default": "us-west-2valid values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]importance: medium",
      "valid_values": [
        "us-iso-east-1",
        "us-isob-east-1",
        "us-gov-east-1",
        "us-gov-west-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "eu-central-1",
        "eu-north-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "cn-north-1",
        "cn-northwest-1"
      ]
    },
    {
      "name": "s3.part.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 377,
      "display_name": "s3.part.size",
      "documentation": "The Part Size in S3 Multi-part Uploads.Type: intDefault: 26214400Valid Values: [5242880,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 377
      },
      "default": "26214400valid values: [5242880,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "5242880",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "s3.elastic.buffer.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 378,
      "display_name": "s3.elastic.buffer.enable",
      "documentation": "Specifies whether or not to allocate elastic buffer for staging s3-part to save memory. Note that this may cause decreased performance or increased CPU usage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 378
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.elastic.buffer.init.capacity",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 379,
      "display_name": "s3.elastic.buffer.init.capacity",
      "documentation": "Elastic buffer initial capacity. Only applicable whens3.elastic.buffer.enableis settrue.Type: intDefault: 131072 (128 KB)Valid Values: [4096,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 379
      },
      "default": "131072 (128 kb)valid values: [4096,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "4096",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 380,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 380
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 381,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS access key ID used to authenticate personal AWS credentials such as IAM credentials. Use only if you do not wish to authenticate by using a credentials provider class,``s3.credentials.provider.class``.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 381
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 382,
      "display_name": "aws.secret.access.key",
      "documentation": "The secret access key used to authenticate personal AWS credentials such as IAM credentials. Use this only if you do not want to use a credentials provider class for authentication. You select a credentials provider class using thes3.credentials.provider.classconfiguration property.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 382
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 383,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server Side Encryption Algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, AES256, aws:kms]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 383
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, aes256, aws:kms]importance: low",
      "valid_values": [
        "",
        "aes256",
        "aws:kms"
      ]
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 384,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server Side Encryption Customer-Provided Key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 384
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.sse.kms.key.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 385,
      "display_name": "s3.sse.kms.key.id",
      "documentation": "The name of the AWS Key Management Service (AWS-KMS) key to be used for server side encryption of the S3 objects. No encryption is used when no key is provided, but it is enabled whenaws:kmsis specified as encryption algorithm with a valid key name.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 385
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.acl.canned",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 386,
      "display_name": "s3.acl.canned",
      "documentation": "An S3 canned ACL header value to apply when writing objects.Type: stringDefault: nullValid Values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 386
      },
      "default": "nullvalid values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]importance: low",
      "valid_values": [
        "private",
        "public-read",
        "public-read-write",
        "authenticated-read",
        "log-delivery-write",
        "bucket-owner-read",
        "bucket-owner-full-control",
        "aws-exec-read"
      ]
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 387,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 387
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.compression.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 388,
      "display_name": "s3.compression.type",
      "documentation": "Compression type for files written to S3. Applied when using JsonFormat or ByteArrayFormat. Available values: none, gzip.Type: stringDefault: noneValid Values: [none, gzip]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 388
      },
      "default": "nonevalid values: [none, gzip]importance: low",
      "valid_values": [
        "none",
        "gzip"
      ]
    },
    {
      "name": "s3.compression.level",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 389,
      "display_name": "s3.compression.level",
      "documentation": "Compression level for files written to S3. Applied when using JsonFormat or ByteArrayFormat.Type: intDefault: -1Valid Values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 389
      },
      "default": "-1valid values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 390,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors including, but not limited to: the value of this parameter, type of exception occurred, and throttling settings of the underlying S3 client.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 390
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 391,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 391
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 392,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for ByteArrayFormat. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 392
      },
      "default": ".binimportance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 393,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for ByteArrayFormat. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator will look like multiple records in the output S3 object.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 393
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 394,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 394
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 395,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 395
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 396,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 396
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 397,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable or disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client will wait for a 100 (CONTINUE) response before sending the request body. Else, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 397
      },
      "default": "trueimportance: low"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 398,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a null value (for example, Kafka tombstone records).\nValid options areignore,failandwrite. Note that if you setbehavior.on.null.valuestowrite,store.kafka.keysmust be set totrue. Additionally, if you setbehavior.on.null.valuestoignore,\nanderrors.tolerancetonone, you must disable the reporting of null\nrecords to theDead Letter Queue (DLQ). To achieve this, seterrors.log.enabletofalseand do not configure a DLQ topic.Type: stringDefault: failValid Values: [ignore, fail, write]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 398
      },
      "default": "failvalid values: [ignore, fail, write]importance: low",
      "valid_values": [
        "ignore",
        "fail",
        "write"
      ]
    },
    {
      "name": "sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 399,
      "display_name": "sts.role.arn",
      "documentation": "Role ARN to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 399
      },
      "default": "nullimportance: high"
    },
    {
      "name": "sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 400,
      "display_name": "sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 400
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 401,
      "display_name": "sts.role.session.name",
      "documentation": "Role session name to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 401
      },
      "default": "nullimportance: high"
    },
    {
      "name": "tombstone.encoded.partition",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 402,
      "display_name": "tombstone.encoded.partition",
      "documentation": "The Amazon S3 output folder to write the tombstone records to. The\nconfigured partitioner would map tombstone records to this output folder.Type: stringDefault:\"tombstone\"Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 402
      },
      "default": "\"tombstone\"importance: low"
    },
    {
      "name": "storage.class",
      "type": "CLASSIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 403,
      "display_name": "storage.class",
      "documentation": "The underlying storage layer.Type: classImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 403
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 404,
      "display_name": "topics.dir",
      "documentation": "Top level directory to store the data ingested from Kafka.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 404
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 405,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 405
      },
      "default": "nullimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 406,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter patternType: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 406
      },
      "default": "/importance: medium"
    },
    {
      "name": "file.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 407,
      "display_name": "file.delim",
      "documentation": "File delimiter patternType: stringDefault: +Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 407
      },
      "default": "+importance: medium"
    },
    {
      "name": "store.kafka.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 408,
      "display_name": "store.kafka.keys",
      "documentation": "Enable or disable writing record keys to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 408
      },
      "default": "falseimportance: low"
    },
    {
      "name": "keys.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 409,
      "display_name": "keys.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,Json,ByteArrayandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 409
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "store.kafka.headers",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 410,
      "display_name": "store.kafka.headers",
      "documentation": "Enable or disable writing record headers to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 410
      },
      "default": "falseimportance: low"
    },
    {
      "name": "headers.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 411,
      "display_name": "headers.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,JsonandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 411
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "s3.path.style.access.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 412,
      "display_name": "s3.path.style.access.enabled",
      "documentation": "Specifies whether or not to enable path-style access to the bucket used by the\nconnector. Setting this property tofalseenables the S3 connector to work in\nenvironments where path-style access is disabled.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 412
      },
      "default": "trueimportance: low"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 413,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when writing data to the store. You can useDefaultPartitioner, which preserves the Kafka partitions;FieldPartitioner, which partitions the data to different directories according to the value of the partitioning field specified inpartition.field.name;TimeBasedPartitioner, which partitions data according to ingestion time.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: highDependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 413
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: highdependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "dependents": [
        "partition.field.name",
        "partition.duration.ms",
        "path.format",
        "locale",
        "timezone"
      ]
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 414,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 414
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "partition.duration.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 415,
      "display_name": "partition.duration.ms",
      "documentation": "The duration of a partition milliseconds used byTimeBasedPartitioner. The default value -1 means that we are not usingTimeBasedPartitioner.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 415
      },
      "default": "-1importance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 416,
      "display_name": "path.format",
      "documentation": "This configuration is used to set the format of the data directories when partitioning withTimeBasedPartitioner. The format set in this configuration converts the Unix timestamp to proper directories strings. For example, if you setpath.format='year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, the data directories will have the format/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 416
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "locale",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 417,
      "display_name": "locale",
      "documentation": "The locale to use when partitioning withTimeBasedPartitioner. Used to format dates and times. For example, useen-USfor US English,en-GBfor UK English, orfr-FRfor French (in France). These may vary by Java version. See theavailable locales.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 417
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 418,
      "display_name": "timezone",
      "documentation": "The timezone to use when partitioning withTimeBasedPartitioner. Used to format and compute dates and times. All timezone IDs must be specified in the long format, such asAmerica/Los_Angeles,America/New_York, andEurope/Paris, orUTC. Alternatively a locale independent, fixed offset, datetime zone can be specified in form[+-]hh:mm. Support for these timezones may vary by Java version. See theavailable timezones within each locale, such asthose within the US English locale.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 418
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.extractor",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 419,
      "display_name": "timestamp.extractor",
      "documentation": "The extractor that gets the timestamp for records when partitioning withTimeBasedPartitioner. It can be set toWallclock,RecordorRecordFieldin order to use one of the built-in timestamp extractors or be given the fully-qualified class name of a user-defined class that extends theTimestampExtractorinterface.Type: stringDefault: WallclockImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 419
      },
      "default": "wallclockimportance: medium"
    },
    {
      "name": "timestamp.field",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 420,
      "display_name": "timestamp.field",
      "documentation": "The record field to be used as timestamp by the timestamp extractor.Type: stringDefault: timestampImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 420
      },
      "default": "timestampimportance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 421,
      "display_name": "format.class",
      "documentation": "The format class to use when writing data to the store.Type: classValid Values: Any class that implements the following classes:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.parquet.ParquetFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 421
      }
    },
    {
      "name": "flush.size",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 422,
      "display_name": "flush.size",
      "documentation": "Number of records written to store before invoking file commits.Type: intImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 422
      }
    },
    {
      "name": "rotate.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 423,
      "display_name": "rotate.interval.ms",
      "documentation": "The time interval in milliseconds to invoke file commits. You can configure this parameter so that the time interval is determined by using a timestamp extractor (for example, Kafka Record Time, Record Field, or Wall Clock extractor). When the first record is processed, a timestamp is set as the base time. This is useful if you require exactly-once-semantics. This configuration ensures that file commits are invoked at every configured interval. The default value-1indicates that this feature is disabled.The S3 connector allows one writer at a time for this parameter. When the S3 connector encounters data that\nbelongs to a previously closed output partition, it closes the current partition and creates a new partition in S3.\nIf there is no late data arriving, the S3 connector closes the current partition when it reads a record whose extracted\ntimestamp is greater than the specified amount of time.Type: longDefault: -1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 423
      },
      "default": "-1importance: high"
    },
    {
      "name": "rotate.schedule.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 424,
      "display_name": "rotate.schedule.interval.ms",
      "documentation": "The time interval in milliseconds to periodically invoke file commits. This configuration ensures that file commits are invoked at every configured interval. Time of commit will be adjusted to 00:00 of selected timezone. The commit will be performed at the scheduled time, regardless of the previous commit time or number of messages. This configuration is useful when you have to commit your data based on current server time, for example at the beginning of every hour. The default value-1means that this feature is disabled.The S3 Connector supports multiple writers. When the S3 connector encounters late arriving data, it keeps the current\npartition open and creates a new partition for the late data in S3. It rolls up files based on the time interval specified.\nFor example, ifrotate.schedule.interval.ms=180000, it will roll up files 20 times in one hour.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 424
      },
      "default": "-1importance: medium"
    },
    {
      "name": "schema.cache.config",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 425,
      "display_name": "schema.cache.config",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 1000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 425
      },
      "default": "1000importance: low"
    },
    {
      "name": "enhanced.avro.schema.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 426,
      "display_name": "enhanced.avro.schema.support",
      "documentation": "Enable enhanced Avro schema support in the Avro Converter. When set totrue, this property preserves Avro schema package information and Enums when going from Avro schema to Connect schema. This information is added back in when going from Connect schema to Avro schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 426
      },
      "default": "falseimportance: low"
    },
    {
      "name": "connect.meta.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 427,
      "display_name": "connect.meta.data",
      "documentation": "Allow the Connect converter to add its metadata to the output schema.Type: booleanDefault: trueImportance: lowTheconnect.meta.dataproperty preserves the following Connect schema metadata when going from Connect schema to Avro schema. The following metadata is added back in when going from Avro schema to Connect schema.docversionparametersdefault valuenametype",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 427
      },
      "default": "trueimportance: lowtheconnect.meta.dataproperty preserves the following connect schema metadata when going from connect schema to avro schema. the following metadata is added back in when going from avro schema to connect schema.docversionparametersdefault valuenametype"
    },
    {
      "name": "retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 428,
      "display_name": "retry.backoff.ms",
      "documentation": "The retry backoff in milliseconds. This config is used to notify Kafka Connect to retry delivering a message batch or performing recovery in case of transient exceptions.Type: longDefault: 5000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 428
      },
      "default": "5000importance: low"
    },
    {
      "name": "filename.offset.zero.pad.width",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 429,
      "display_name": "filename.offset.zero.pad.width",
      "documentation": "Width to zero pad offsets in store\u00e2\u0080\u0099s filenames if offsets are too short in order to provide fixed width filenames that can be ordered by simple lexicographic sorting.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 429
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "avro.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 430,
      "display_name": "avro.codec",
      "documentation": "The Avro compression codec to be used for output  files. Available values: null, deflate, snappy and bzip2 (CodecSource is org.apache.avro.file.CodecFactory)Type: stringDefault: nullValid Values: [null, deflate, snappy, bzip2]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 430
      },
      "default": "nullvalid values: [null, deflate, snappy, bzip2]importance: low",
      "valid_values": [
        "null",
        "deflate",
        "snappy",
        "bzip2"
      ]
    },
    {
      "name": "parquet.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 431,
      "display_name": "parquet.codec",
      "documentation": "The Parquet compression codec to be used for output files.Type: stringDefault: snappyValid Values: [none, gzip, snappy, lz4, brotli, zstd, lzo]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 431
      },
      "default": "snappyvalid values: [none, gzip, snappy, lz4, brotli, zstd, lzo]importance: low",
      "valid_values": [
        "none",
        "gzip",
        "snappy",
        "lz4",
        "brotli",
        "zstd",
        "lzo"
      ]
    },
    {
      "name": "schema.compatibility",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 432,
      "display_name": "schema.compatibility",
      "documentation": "The schema compatibility rule to use when the connector is observing schema changes. The supported configurations are NONE, BACKWARD, FORWARD and FULL.Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 432
      },
      "default": "noneimportance: high"
    },
    {
      "name": "allow.optional.map.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 433,
      "display_name": "allow.optional.map.keys",
      "documentation": "An Avro converter configuration parameter you can use in the connector\nconfiguration to allow an optional string map key when converting from\nConnect Schema to Avro Schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 433
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 434,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 434
      }
    },
    {
      "name": "s3.object.tagging",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 435,
      "display_name": "s3.object.tagging",
      "documentation": "Tag S3 objects with start and end offsets, as well as record count.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 435
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 436,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 436
      },
      "default": "us-west-2valid values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]importance: medium",
      "valid_values": [
        "us-iso-east-1",
        "us-isob-east-1",
        "us-gov-east-1",
        "us-gov-west-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "eu-central-1",
        "eu-north-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "cn-north-1",
        "cn-northwest-1"
      ]
    },
    {
      "name": "s3.part.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 437,
      "display_name": "s3.part.size",
      "documentation": "The Part Size in S3 Multi-part Uploads.Type: intDefault: 26214400Valid Values: [5242880,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 437
      },
      "default": "26214400valid values: [5242880,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "5242880",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "s3.elastic.buffer.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 438,
      "display_name": "s3.elastic.buffer.enable",
      "documentation": "Specifies whether or not to allocate elastic buffer for staging s3-part to save memory. Note that this may cause decreased performance or increased CPU usage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 438
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.elastic.buffer.init.capacity",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 439,
      "display_name": "s3.elastic.buffer.init.capacity",
      "documentation": "Elastic buffer initial capacity. Only applicable whens3.elastic.buffer.enableis settrue.Type: intDefault: 131072 (128 KB)Valid Values: [4096,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 439
      },
      "default": "131072 (128 kb)valid values: [4096,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "4096",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 440,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 440
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 441,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS access key ID used to authenticate personal AWS credentials such as IAM credentials. Use only if you do not wish to authenticate by using a credentials provider class,``s3.credentials.provider.class``.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 441
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 442,
      "display_name": "aws.secret.access.key",
      "documentation": "The secret access key used to authenticate personal AWS credentials such as IAM credentials. Use this only if you do not want to use a credentials provider class for authentication. You select a credentials provider class using thes3.credentials.provider.classconfiguration property.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 442
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 443,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server Side Encryption Algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, AES256, aws:kms]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 443
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, aes256, aws:kms]importance: low",
      "valid_values": [
        "",
        "aes256",
        "aws:kms"
      ]
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 444,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server Side Encryption Customer-Provided Key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 444
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.sse.kms.key.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 445,
      "display_name": "s3.sse.kms.key.id",
      "documentation": "The name of the AWS Key Management Service (AWS-KMS) key to be used for server side encryption of the S3 objects. No encryption is used when no key is provided, but it is enabled whenaws:kmsis specified as encryption algorithm with a valid key name.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 445
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.acl.canned",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 446,
      "display_name": "s3.acl.canned",
      "documentation": "An S3 canned ACL header value to apply when writing objects.Type: stringDefault: nullValid Values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 446
      },
      "default": "nullvalid values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]importance: low",
      "valid_values": [
        "private",
        "public-read",
        "public-read-write",
        "authenticated-read",
        "log-delivery-write",
        "bucket-owner-read",
        "bucket-owner-full-control",
        "aws-exec-read"
      ]
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 447,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 447
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.compression.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 448,
      "display_name": "s3.compression.type",
      "documentation": "Compression type for files written to S3. Applied when using JsonFormat or ByteArrayFormat. Available values: none, gzip.Type: stringDefault: noneValid Values: [none, gzip]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 448
      },
      "default": "nonevalid values: [none, gzip]importance: low",
      "valid_values": [
        "none",
        "gzip"
      ]
    },
    {
      "name": "s3.compression.level",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 449,
      "display_name": "s3.compression.level",
      "documentation": "Compression level for files written to S3. Applied when using JsonFormat or ByteArrayFormat.Type: intDefault: -1Valid Values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 449
      },
      "default": "-1valid values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 450,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors including, but not limited to: the value of this parameter, type of exception occurred, and throttling settings of the underlying S3 client.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 450
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 451,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 451
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 452,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for ByteArrayFormat. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 452
      },
      "default": ".binimportance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 453,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for ByteArrayFormat. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator will look like multiple records in the output S3 object.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 453
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 454,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 454
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 455,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 455
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 456,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 456
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 457,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable or disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client will wait for a 100 (CONTINUE) response before sending the request body. Else, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 457
      },
      "default": "trueimportance: low"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 458,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a null value (for example, Kafka tombstone records).\nValid options areignore,failandwrite. Note that if you setbehavior.on.null.valuestowrite,store.kafka.keysmust be set totrue. Additionally, if you setbehavior.on.null.valuestoignore,\nanderrors.tolerancetonone, you must disable the reporting of null\nrecords to theDead Letter Queue (DLQ). To achieve this, seterrors.log.enabletofalseand do not configure a DLQ topic.Type: stringDefault: failValid Values: [ignore, fail, write]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 458
      },
      "default": "failvalid values: [ignore, fail, write]importance: low",
      "valid_values": [
        "ignore",
        "fail",
        "write"
      ]
    },
    {
      "name": "sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 459,
      "display_name": "sts.role.arn",
      "documentation": "Role ARN to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 459
      },
      "default": "nullimportance: high"
    },
    {
      "name": "sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 460,
      "display_name": "sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 460
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 461,
      "display_name": "sts.role.session.name",
      "documentation": "Role session name to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 461
      },
      "default": "nullimportance: high"
    },
    {
      "name": "tombstone.encoded.partition",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 462,
      "display_name": "tombstone.encoded.partition",
      "documentation": "The Amazon S3 output folder to write the tombstone records to. The\nconfigured partitioner would map tombstone records to this output folder.Type: stringDefault:\"tombstone\"Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 462
      },
      "default": "\"tombstone\"importance: low"
    },
    {
      "name": "storage.class",
      "type": "CLASSIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 463,
      "display_name": "storage.class",
      "documentation": "The underlying storage layer.Type: classImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 463
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 464,
      "display_name": "topics.dir",
      "documentation": "Top level directory to store the data ingested from Kafka.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 464
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 465,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 465
      },
      "default": "nullimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 466,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter patternType: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 466
      },
      "default": "/importance: medium"
    },
    {
      "name": "file.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 467,
      "display_name": "file.delim",
      "documentation": "File delimiter patternType: stringDefault: +Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 467
      },
      "default": "+importance: medium"
    },
    {
      "name": "store.kafka.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 468,
      "display_name": "store.kafka.keys",
      "documentation": "Enable or disable writing record keys to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 468
      },
      "default": "falseimportance: low"
    },
    {
      "name": "keys.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 469,
      "display_name": "keys.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,Json,ByteArrayandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 469
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "store.kafka.headers",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 470,
      "display_name": "store.kafka.headers",
      "documentation": "Enable or disable writing record headers to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 470
      },
      "default": "falseimportance: low"
    },
    {
      "name": "headers.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 471,
      "display_name": "headers.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,JsonandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 471
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "s3.path.style.access.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 472,
      "display_name": "s3.path.style.access.enabled",
      "documentation": "Specifies whether or not to enable path-style access to the bucket used by the\nconnector. Setting this property tofalseenables the S3 connector to work in\nenvironments where path-style access is disabled.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 472
      },
      "default": "trueimportance: low"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 473,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when writing data to the store. You can useDefaultPartitioner, which preserves the Kafka partitions;FieldPartitioner, which partitions the data to different directories according to the value of the partitioning field specified inpartition.field.name;TimeBasedPartitioner, which partitions data according to ingestion time.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: highDependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 473
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: highdependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "dependents": [
        "partition.field.name",
        "partition.duration.ms",
        "path.format",
        "locale",
        "timezone"
      ]
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 474,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 474
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "partition.duration.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 475,
      "display_name": "partition.duration.ms",
      "documentation": "The duration of a partition milliseconds used byTimeBasedPartitioner. The default value -1 means that we are not usingTimeBasedPartitioner.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 475
      },
      "default": "-1importance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 476,
      "display_name": "path.format",
      "documentation": "This configuration is used to set the format of the data directories when partitioning withTimeBasedPartitioner. The format set in this configuration converts the Unix timestamp to proper directories strings. For example, if you setpath.format='year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, the data directories will have the format/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 476
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "locale",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 477,
      "display_name": "locale",
      "documentation": "The locale to use when partitioning withTimeBasedPartitioner. Used to format dates and times. For example, useen-USfor US English,en-GBfor UK English, orfr-FRfor French (in France). These may vary by Java version. See theavailable locales.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 477
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 478,
      "display_name": "timezone",
      "documentation": "The timezone to use when partitioning withTimeBasedPartitioner. Used to format and compute dates and times. All timezone IDs must be specified in the long format, such asAmerica/Los_Angeles,America/New_York, andEurope/Paris, orUTC. Alternatively a locale independent, fixed offset, datetime zone can be specified in form[+-]hh:mm. Support for these timezones may vary by Java version. See theavailable timezones within each locale, such asthose within the US English locale.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 478
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.extractor",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 479,
      "display_name": "timestamp.extractor",
      "documentation": "The extractor that gets the timestamp for records when partitioning withTimeBasedPartitioner. It can be set toWallclock,RecordorRecordFieldin order to use one of the built-in timestamp extractors or be given the fully-qualified class name of a user-defined class that extends theTimestampExtractorinterface.Type: stringDefault: WallclockImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 479
      },
      "default": "wallclockimportance: medium"
    },
    {
      "name": "timestamp.field",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 480,
      "display_name": "timestamp.field",
      "documentation": "The record field to be used as timestamp by the timestamp extractor.Type: stringDefault: timestampImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 480
      },
      "default": "timestampimportance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 481,
      "display_name": "format.class",
      "documentation": "The format class to use when writing data to the store.Type: classValid Values: Any class that implements the following classes:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.parquet.ParquetFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 481
      }
    },
    {
      "name": "flush.size",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 482,
      "display_name": "flush.size",
      "documentation": "Number of records written to store before invoking file commits.Type: intImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 482
      }
    },
    {
      "name": "rotate.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 483,
      "display_name": "rotate.interval.ms",
      "documentation": "The time interval in milliseconds to invoke file commits. You can configure this parameter so that the time interval is determined by using a timestamp extractor (for example, Kafka Record Time, Record Field, or Wall Clock extractor). When the first record is processed, a timestamp is set as the base time. This is useful if you require exactly-once-semantics. This configuration ensures that file commits are invoked at every configured interval. The default value-1indicates that this feature is disabled.The S3 connector allows one writer at a time for this parameter. When the S3 connector encounters data that\nbelongs to a previously closed output partition, it closes the current partition and creates a new partition in S3.\nIf there is no late data arriving, the S3 connector closes the current partition when it reads a record whose extracted\ntimestamp is greater than the specified amount of time.Type: longDefault: -1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 483
      },
      "default": "-1importance: high"
    },
    {
      "name": "rotate.schedule.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 484,
      "display_name": "rotate.schedule.interval.ms",
      "documentation": "The time interval in milliseconds to periodically invoke file commits. This configuration ensures that file commits are invoked at every configured interval. Time of commit will be adjusted to 00:00 of selected timezone. The commit will be performed at the scheduled time, regardless of the previous commit time or number of messages. This configuration is useful when you have to commit your data based on current server time, for example at the beginning of every hour. The default value-1means that this feature is disabled.The S3 Connector supports multiple writers. When the S3 connector encounters late arriving data, it keeps the current\npartition open and creates a new partition for the late data in S3. It rolls up files based on the time interval specified.\nFor example, ifrotate.schedule.interval.ms=180000, it will roll up files 20 times in one hour.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 484
      },
      "default": "-1importance: medium"
    },
    {
      "name": "schema.cache.config",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 485,
      "display_name": "schema.cache.config",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 1000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 485
      },
      "default": "1000importance: low"
    },
    {
      "name": "enhanced.avro.schema.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 486,
      "display_name": "enhanced.avro.schema.support",
      "documentation": "Enable enhanced Avro schema support in the Avro Converter. When set totrue, this property preserves Avro schema package information and Enums when going from Avro schema to Connect schema. This information is added back in when going from Connect schema to Avro schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 486
      },
      "default": "falseimportance: low"
    },
    {
      "name": "connect.meta.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 487,
      "display_name": "connect.meta.data",
      "documentation": "Allow the Connect converter to add its metadata to the output schema.Type: booleanDefault: trueImportance: lowTheconnect.meta.dataproperty preserves the following Connect schema metadata when going from Connect schema to Avro schema. The following metadata is added back in when going from Avro schema to Connect schema.docversionparametersdefault valuenametype",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 487
      },
      "default": "trueimportance: lowtheconnect.meta.dataproperty preserves the following connect schema metadata when going from connect schema to avro schema. the following metadata is added back in when going from avro schema to connect schema.docversionparametersdefault valuenametype"
    },
    {
      "name": "retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 488,
      "display_name": "retry.backoff.ms",
      "documentation": "The retry backoff in milliseconds. This config is used to notify Kafka Connect to retry delivering a message batch or performing recovery in case of transient exceptions.Type: longDefault: 5000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 488
      },
      "default": "5000importance: low"
    },
    {
      "name": "filename.offset.zero.pad.width",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 489,
      "display_name": "filename.offset.zero.pad.width",
      "documentation": "Width to zero pad offsets in store\u00e2\u0080\u0099s filenames if offsets are too short in order to provide fixed width filenames that can be ordered by simple lexicographic sorting.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 489
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "avro.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 490,
      "display_name": "avro.codec",
      "documentation": "The Avro compression codec to be used for output  files. Available values: null, deflate, snappy and bzip2 (CodecSource is org.apache.avro.file.CodecFactory)Type: stringDefault: nullValid Values: [null, deflate, snappy, bzip2]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 490
      },
      "default": "nullvalid values: [null, deflate, snappy, bzip2]importance: low",
      "valid_values": [
        "null",
        "deflate",
        "snappy",
        "bzip2"
      ]
    },
    {
      "name": "parquet.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 491,
      "display_name": "parquet.codec",
      "documentation": "The Parquet compression codec to be used for output files.Type: stringDefault: snappyValid Values: [none, gzip, snappy, lz4, brotli, zstd, lzo]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 491
      },
      "default": "snappyvalid values: [none, gzip, snappy, lz4, brotli, zstd, lzo]importance: low",
      "valid_values": [
        "none",
        "gzip",
        "snappy",
        "lz4",
        "brotli",
        "zstd",
        "lzo"
      ]
    },
    {
      "name": "schema.compatibility",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 492,
      "display_name": "schema.compatibility",
      "documentation": "The schema compatibility rule to use when the connector is observing schema changes. The supported configurations are NONE, BACKWARD, FORWARD and FULL.Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 492
      },
      "default": "noneimportance: high"
    },
    {
      "name": "allow.optional.map.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 493,
      "display_name": "allow.optional.map.keys",
      "documentation": "An Avro converter configuration parameter you can use in the connector\nconfiguration to allow an optional string map key when converting from\nConnect Schema to Avro Schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 493
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 494,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 494
      }
    },
    {
      "name": "s3.object.tagging",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 495,
      "display_name": "s3.object.tagging",
      "documentation": "Tag S3 objects with start and end offsets, as well as record count.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 495
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 496,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 496
      },
      "default": "us-west-2valid values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]importance: medium",
      "valid_values": [
        "us-iso-east-1",
        "us-isob-east-1",
        "us-gov-east-1",
        "us-gov-west-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "eu-central-1",
        "eu-north-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "cn-north-1",
        "cn-northwest-1"
      ]
    },
    {
      "name": "s3.part.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 497,
      "display_name": "s3.part.size",
      "documentation": "The Part Size in S3 Multi-part Uploads.Type: intDefault: 26214400Valid Values: [5242880,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 497
      },
      "default": "26214400valid values: [5242880,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "5242880",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "s3.elastic.buffer.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 498,
      "display_name": "s3.elastic.buffer.enable",
      "documentation": "Specifies whether or not to allocate elastic buffer for staging s3-part to save memory. Note that this may cause decreased performance or increased CPU usage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 498
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.elastic.buffer.init.capacity",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 499,
      "display_name": "s3.elastic.buffer.init.capacity",
      "documentation": "Elastic buffer initial capacity. Only applicable whens3.elastic.buffer.enableis settrue.Type: intDefault: 131072 (128 KB)Valid Values: [4096,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 499
      },
      "default": "131072 (128 kb)valid values: [4096,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "4096",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 500,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 500
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 501,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS access key ID used to authenticate personal AWS credentials such as IAM credentials. Use only if you do not wish to authenticate by using a credentials provider class,``s3.credentials.provider.class``.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 501
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 502,
      "display_name": "aws.secret.access.key",
      "documentation": "The secret access key used to authenticate personal AWS credentials such as IAM credentials. Use this only if you do not want to use a credentials provider class for authentication. You select a credentials provider class using thes3.credentials.provider.classconfiguration property.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 502
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 503,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server Side Encryption Algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, AES256, aws:kms]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 503
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, aes256, aws:kms]importance: low",
      "valid_values": [
        "",
        "aes256",
        "aws:kms"
      ]
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 504,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server Side Encryption Customer-Provided Key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 504
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.sse.kms.key.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 505,
      "display_name": "s3.sse.kms.key.id",
      "documentation": "The name of the AWS Key Management Service (AWS-KMS) key to be used for server side encryption of the S3 objects. No encryption is used when no key is provided, but it is enabled whenaws:kmsis specified as encryption algorithm with a valid key name.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 505
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.acl.canned",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 506,
      "display_name": "s3.acl.canned",
      "documentation": "An S3 canned ACL header value to apply when writing objects.Type: stringDefault: nullValid Values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 506
      },
      "default": "nullvalid values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]importance: low",
      "valid_values": [
        "private",
        "public-read",
        "public-read-write",
        "authenticated-read",
        "log-delivery-write",
        "bucket-owner-read",
        "bucket-owner-full-control",
        "aws-exec-read"
      ]
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 507,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 507
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.compression.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 508,
      "display_name": "s3.compression.type",
      "documentation": "Compression type for files written to S3. Applied when using JsonFormat or ByteArrayFormat. Available values: none, gzip.Type: stringDefault: noneValid Values: [none, gzip]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 508
      },
      "default": "nonevalid values: [none, gzip]importance: low",
      "valid_values": [
        "none",
        "gzip"
      ]
    },
    {
      "name": "s3.compression.level",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 509,
      "display_name": "s3.compression.level",
      "documentation": "Compression level for files written to S3. Applied when using JsonFormat or ByteArrayFormat.Type: intDefault: -1Valid Values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 509
      },
      "default": "-1valid values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 510,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors including, but not limited to: the value of this parameter, type of exception occurred, and throttling settings of the underlying S3 client.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 510
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 511,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 511
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 512,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for ByteArrayFormat. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 512
      },
      "default": ".binimportance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 513,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for ByteArrayFormat. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator will look like multiple records in the output S3 object.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 513
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 514,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 514
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 515,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 515
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 516,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 516
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 517,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable or disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client will wait for a 100 (CONTINUE) response before sending the request body. Else, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 517
      },
      "default": "trueimportance: low"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 518,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a null value (for example, Kafka tombstone records).\nValid options areignore,failandwrite. Note that if you setbehavior.on.null.valuestowrite,store.kafka.keysmust be set totrue. Additionally, if you setbehavior.on.null.valuestoignore,\nanderrors.tolerancetonone, you must disable the reporting of null\nrecords to theDead Letter Queue (DLQ). To achieve this, seterrors.log.enabletofalseand do not configure a DLQ topic.Type: stringDefault: failValid Values: [ignore, fail, write]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 518
      },
      "default": "failvalid values: [ignore, fail, write]importance: low",
      "valid_values": [
        "ignore",
        "fail",
        "write"
      ]
    },
    {
      "name": "sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 519,
      "display_name": "sts.role.arn",
      "documentation": "Role ARN to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 519
      },
      "default": "nullimportance: high"
    },
    {
      "name": "sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 520,
      "display_name": "sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 520
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 521,
      "display_name": "sts.role.session.name",
      "documentation": "Role session name to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 521
      },
      "default": "nullimportance: high"
    },
    {
      "name": "tombstone.encoded.partition",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 522,
      "display_name": "tombstone.encoded.partition",
      "documentation": "The Amazon S3 output folder to write the tombstone records to. The\nconfigured partitioner would map tombstone records to this output folder.Type: stringDefault:\"tombstone\"Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 522
      },
      "default": "\"tombstone\"importance: low"
    },
    {
      "name": "storage.class",
      "type": "CLASSIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 523,
      "display_name": "storage.class",
      "documentation": "The underlying storage layer.Type: classImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 523
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 524,
      "display_name": "topics.dir",
      "documentation": "Top level directory to store the data ingested from Kafka.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 524
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 525,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 525
      },
      "default": "nullimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 526,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter patternType: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 526
      },
      "default": "/importance: medium"
    },
    {
      "name": "file.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 527,
      "display_name": "file.delim",
      "documentation": "File delimiter patternType: stringDefault: +Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 527
      },
      "default": "+importance: medium"
    },
    {
      "name": "store.kafka.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 528,
      "display_name": "store.kafka.keys",
      "documentation": "Enable or disable writing record keys to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 528
      },
      "default": "falseimportance: low"
    },
    {
      "name": "keys.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 529,
      "display_name": "keys.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,Json,ByteArrayandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 529
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "store.kafka.headers",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 530,
      "display_name": "store.kafka.headers",
      "documentation": "Enable or disable writing record headers to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 530
      },
      "default": "falseimportance: low"
    },
    {
      "name": "headers.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 531,
      "display_name": "headers.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,JsonandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 531
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "s3.path.style.access.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 532,
      "display_name": "s3.path.style.access.enabled",
      "documentation": "Specifies whether or not to enable path-style access to the bucket used by the\nconnector. Setting this property tofalseenables the S3 connector to work in\nenvironments where path-style access is disabled.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 532
      },
      "default": "trueimportance: low"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 533,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when writing data to the store. You can useDefaultPartitioner, which preserves the Kafka partitions;FieldPartitioner, which partitions the data to different directories according to the value of the partitioning field specified inpartition.field.name;TimeBasedPartitioner, which partitions data according to ingestion time.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: highDependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 533
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: highdependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "dependents": [
        "partition.field.name",
        "partition.duration.ms",
        "path.format",
        "locale",
        "timezone"
      ]
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 534,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 534
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "partition.duration.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 535,
      "display_name": "partition.duration.ms",
      "documentation": "The duration of a partition milliseconds used byTimeBasedPartitioner. The default value -1 means that we are not usingTimeBasedPartitioner.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 535
      },
      "default": "-1importance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 536,
      "display_name": "path.format",
      "documentation": "This configuration is used to set the format of the data directories when partitioning withTimeBasedPartitioner. The format set in this configuration converts the Unix timestamp to proper directories strings. For example, if you setpath.format='year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, the data directories will have the format/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 536
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "locale",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 537,
      "display_name": "locale",
      "documentation": "The locale to use when partitioning withTimeBasedPartitioner. Used to format dates and times. For example, useen-USfor US English,en-GBfor UK English, orfr-FRfor French (in France). These may vary by Java version. See theavailable locales.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 537
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 538,
      "display_name": "timezone",
      "documentation": "The timezone to use when partitioning withTimeBasedPartitioner. Used to format and compute dates and times. All timezone IDs must be specified in the long format, such asAmerica/Los_Angeles,America/New_York, andEurope/Paris, orUTC. Alternatively a locale independent, fixed offset, datetime zone can be specified in form[+-]hh:mm. Support for these timezones may vary by Java version. See theavailable timezones within each locale, such asthose within the US English locale.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 538
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.extractor",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 539,
      "display_name": "timestamp.extractor",
      "documentation": "The extractor that gets the timestamp for records when partitioning withTimeBasedPartitioner. It can be set toWallclock,RecordorRecordFieldin order to use one of the built-in timestamp extractors or be given the fully-qualified class name of a user-defined class that extends theTimestampExtractorinterface.Type: stringDefault: WallclockImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 539
      },
      "default": "wallclockimportance: medium"
    },
    {
      "name": "timestamp.field",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 540,
      "display_name": "timestamp.field",
      "documentation": "The record field to be used as timestamp by the timestamp extractor.Type: stringDefault: timestampImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 540
      },
      "default": "timestampimportance: medium"
    },
    {
      "name": "format.class",
      "type": "CLASSVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 541,
      "display_name": "format.class",
      "documentation": "The format class to use when writing data to the store.Type: classValid Values: Any class that implements the following classes:io.confluent.connect.s3.format.avro.AvroFormatio.confluent.connect.s3.format.bytearray.ByteArrayFormatio.confluent.connect.s3.format.json.JsonFormatio.confluent.connect.s3.format.parquet.ParquetFormatImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 541
      }
    },
    {
      "name": "flush.size",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 542,
      "display_name": "flush.size",
      "documentation": "Number of records written to store before invoking file commits.Type: intImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 542
      }
    },
    {
      "name": "rotate.interval.ms",
      "type": "LONGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 543,
      "display_name": "rotate.interval.ms",
      "documentation": "The time interval in milliseconds to invoke file commits. You can configure this parameter so that the time interval is determined by using a timestamp extractor (for example, Kafka Record Time, Record Field, or Wall Clock extractor). When the first record is processed, a timestamp is set as the base time. This is useful if you require exactly-once-semantics. This configuration ensures that file commits are invoked at every configured interval. The default value-1indicates that this feature is disabled.The S3 connector allows one writer at a time for this parameter. When the S3 connector encounters data that\nbelongs to a previously closed output partition, it closes the current partition and creates a new partition in S3.\nIf there is no late data arriving, the S3 connector closes the current partition when it reads a record whose extracted\ntimestamp is greater than the specified amount of time.Type: longDefault: -1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 543
      },
      "default": "-1importance: high"
    },
    {
      "name": "rotate.schedule.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 544,
      "display_name": "rotate.schedule.interval.ms",
      "documentation": "The time interval in milliseconds to periodically invoke file commits. This configuration ensures that file commits are invoked at every configured interval. Time of commit will be adjusted to 00:00 of selected timezone. The commit will be performed at the scheduled time, regardless of the previous commit time or number of messages. This configuration is useful when you have to commit your data based on current server time, for example at the beginning of every hour. The default value-1means that this feature is disabled.The S3 Connector supports multiple writers. When the S3 connector encounters late arriving data, it keeps the current\npartition open and creates a new partition for the late data in S3. It rolls up files based on the time interval specified.\nFor example, ifrotate.schedule.interval.ms=180000, it will roll up files 20 times in one hour.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 544
      },
      "default": "-1importance: medium"
    },
    {
      "name": "schema.cache.config",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 545,
      "display_name": "schema.cache.config",
      "documentation": "The size of the schema cache used in the Avro converter.Type: intDefault: 1000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 545
      },
      "default": "1000importance: low"
    },
    {
      "name": "enhanced.avro.schema.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 546,
      "display_name": "enhanced.avro.schema.support",
      "documentation": "Enable enhanced Avro schema support in the Avro Converter. When set totrue, this property preserves Avro schema package information and Enums when going from Avro schema to Connect schema. This information is added back in when going from Connect schema to Avro schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 546
      },
      "default": "falseimportance: low"
    },
    {
      "name": "connect.meta.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 547,
      "display_name": "connect.meta.data",
      "documentation": "Allow the Connect converter to add its metadata to the output schema.Type: booleanDefault: trueImportance: lowTheconnect.meta.dataproperty preserves the following Connect schema metadata when going from Connect schema to Avro schema. The following metadata is added back in when going from Avro schema to Connect schema.docversionparametersdefault valuenametype",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 547
      },
      "default": "trueimportance: lowtheconnect.meta.dataproperty preserves the following connect schema metadata when going from connect schema to avro schema. the following metadata is added back in when going from avro schema to connect schema.docversionparametersdefault valuenametype"
    },
    {
      "name": "retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 548,
      "display_name": "retry.backoff.ms",
      "documentation": "The retry backoff in milliseconds. This config is used to notify Kafka Connect to retry delivering a message batch or performing recovery in case of transient exceptions.Type: longDefault: 5000Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 548
      },
      "default": "5000importance: low"
    },
    {
      "name": "filename.offset.zero.pad.width",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 549,
      "display_name": "filename.offset.zero.pad.width",
      "documentation": "Width to zero pad offsets in store\u00e2\u0080\u0099s filenames if offsets are too short in order to provide fixed width filenames that can be ordered by simple lexicographic sorting.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 549
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "avro.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 550,
      "display_name": "avro.codec",
      "documentation": "The Avro compression codec to be used for output  files. Available values: null, deflate, snappy and bzip2 (CodecSource is org.apache.avro.file.CodecFactory)Type: stringDefault: nullValid Values: [null, deflate, snappy, bzip2]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 550
      },
      "default": "nullvalid values: [null, deflate, snappy, bzip2]importance: low",
      "valid_values": [
        "null",
        "deflate",
        "snappy",
        "bzip2"
      ]
    },
    {
      "name": "parquet.codec",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 551,
      "display_name": "parquet.codec",
      "documentation": "The Parquet compression codec to be used for output files.Type: stringDefault: snappyValid Values: [none, gzip, snappy, lz4, brotli, zstd, lzo]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 551
      },
      "default": "snappyvalid values: [none, gzip, snappy, lz4, brotli, zstd, lzo]importance: low",
      "valid_values": [
        "none",
        "gzip",
        "snappy",
        "lz4",
        "brotli",
        "zstd",
        "lzo"
      ]
    },
    {
      "name": "schema.compatibility",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Schema",
      "order_in_group": 552,
      "display_name": "schema.compatibility",
      "documentation": "The schema compatibility rule to use when the connector is observing schema changes. The supported configurations are NONE, BACKWARD, FORWARD and FULL.Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 552
      },
      "default": "noneimportance: high"
    },
    {
      "name": "allow.optional.map.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Schema",
      "order_in_group": 553,
      "display_name": "allow.optional.map.keys",
      "documentation": "An Avro converter configuration parameter you can use in the connector\nconfiguration to allow an optional string map key when converting from\nConnect Schema to Avro Schema.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 553
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.bucket.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "S3",
      "order_in_group": 554,
      "display_name": "s3.bucket.name",
      "documentation": "The S3 Bucket.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 554
      }
    },
    {
      "name": "s3.object.tagging",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 555,
      "display_name": "s3.object.tagging",
      "documentation": "Tag S3 objects with start and end offsets, as well as record count.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 555
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3",
      "order_in_group": 556,
      "display_name": "s3.region",
      "documentation": "The AWS region to be used the connector.Type: stringDefault: us-west-2Valid Values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 556
      },
      "default": "us-west-2valid values: [us-iso-east-1, us-isob-east-1, us-gov-east-1, us-gov-west-1, ap-east-1, ap-northeast-1, ap-northeast-2, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-north-1, eu-west-1, eu-west-2, eu-west-3, me-south-1, sa-east-1, us-east-1, us-east-2, us-west-1, us-west-2, cn-north-1, cn-northwest-1]importance: medium",
      "valid_values": [
        "us-iso-east-1",
        "us-isob-east-1",
        "us-gov-east-1",
        "us-gov-west-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "eu-central-1",
        "eu-north-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "cn-north-1",
        "cn-northwest-1"
      ]
    },
    {
      "name": "s3.part.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3",
      "order_in_group": 557,
      "display_name": "s3.part.size",
      "documentation": "The Part Size in S3 Multi-part Uploads.Type: intDefault: 26214400Valid Values: [5242880,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 557
      },
      "default": "26214400valid values: [5242880,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "5242880",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "s3.elastic.buffer.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 558,
      "display_name": "s3.elastic.buffer.enable",
      "documentation": "Specifies whether or not to allocate elastic buffer for staging s3-part to save memory. Note that this may cause decreased performance or increased CPU usage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 558
      },
      "default": "falseimportance: low"
    },
    {
      "name": "s3.elastic.buffer.init.capacity",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 559,
      "display_name": "s3.elastic.buffer.init.capacity",
      "documentation": "Elastic buffer initial capacity. Only applicable whens3.elastic.buffer.enableis settrue.Type: intDefault: 131072 (128 KB)Valid Values: [4096,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 559
      },
      "default": "131072 (128 kb)valid values: [4096,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "4096",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 560,
      "display_name": "s3.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 560
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.access.key.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3",
      "order_in_group": 561,
      "display_name": "aws.access.key.id",
      "documentation": "The AWS access key ID used to authenticate personal AWS credentials such as IAM credentials. Use only if you do not wish to authenticate by using a credentials provider class,``s3.credentials.provider.class``.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 561
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "aws.secret.access.key",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3",
      "order_in_group": 562,
      "display_name": "aws.secret.access.key",
      "documentation": "The secret access key used to authenticate personal AWS credentials such as IAM credentials. Use this only if you do not want to use a credentials provider class for authentication. You select a credentials provider class using thes3.credentials.provider.classconfiguration property.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 562
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "s3.ssea.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 563,
      "display_name": "s3.ssea.name",
      "documentation": "The S3 Server Side Encryption Algorithm.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: [, AES256, aws:kms]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 563
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: [, aes256, aws:kms]importance: low",
      "valid_values": [
        "",
        "aes256",
        "aws:kms"
      ]
    },
    {
      "name": "s3.sse.customer.key",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 564,
      "display_name": "s3.sse.customer.key",
      "documentation": "The S3 Server Side Encryption Customer-Provided Key (SSE-C).Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 564
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.sse.kms.key.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 565,
      "display_name": "s3.sse.kms.key.id",
      "documentation": "The name of the AWS Key Management Service (AWS-KMS) key to be used for server side encryption of the S3 objects. No encryption is used when no key is provided, but it is enabled whenaws:kmsis specified as encryption algorithm with a valid key name.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 565
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.acl.canned",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 566,
      "display_name": "s3.acl.canned",
      "documentation": "An S3 canned ACL header value to apply when writing objects.Type: stringDefault: nullValid Values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 566
      },
      "default": "nullvalid values: [private, public-read, public-read-write, authenticated-read, log-delivery-write, bucket-owner-read, bucket-owner-full-control, aws-exec-read]importance: low",
      "valid_values": [
        "private",
        "public-read",
        "public-read-write",
        "authenticated-read",
        "log-delivery-write",
        "bucket-owner-read",
        "bucket-owner-full-control",
        "aws-exec-read"
      ]
    },
    {
      "name": "s3.wan.mode",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3",
      "order_in_group": 567,
      "display_name": "s3.wan.mode",
      "documentation": "Use S3 accelerated endpoint.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 567
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "s3.compression.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 568,
      "display_name": "s3.compression.type",
      "documentation": "Compression type for files written to S3. Applied when using JsonFormat or ByteArrayFormat. Available values: none, gzip.Type: stringDefault: noneValid Values: [none, gzip]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 568
      },
      "default": "nonevalid values: [none, gzip]importance: low",
      "valid_values": [
        "none",
        "gzip"
      ]
    },
    {
      "name": "s3.compression.level",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 569,
      "display_name": "s3.compression.level",
      "documentation": "Compression level for files written to S3. Applied when using JsonFormat or ByteArrayFormat.Type: intDefault: -1Valid Values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 569
      },
      "default": "-1valid values: -1 for system default, or [-1,\u00e2\u0080\u00a6,9] for levels between no compression and best compressionimportance: low"
    },
    {
      "name": "s3.part.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3",
      "order_in_group": 570,
      "display_name": "s3.part.retries",
      "documentation": "Maximum number of retry attempts for failed requests. Zero means no retries. The actual number of attempts is determined by the S3 client based on multiple factors including, but not limited to: the value of this parameter, type of exception occurred, and throttling settings of the underlying S3 client.Type: intDefault: 3Valid Values: [0,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 570
      },
      "default": "3valid values: [0,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "s3.retry.backoff.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 571,
      "display_name": "s3.retry.backoff.ms",
      "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios.Type: longDefault: 200Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 571
      },
      "default": "200valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "format.bytearray.extension",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 572,
      "display_name": "format.bytearray.extension",
      "documentation": "Output file extension for ByteArrayFormat. Defaults to.bin.Type: stringDefault: .binImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 572
      },
      "default": ".binimportance: low"
    },
    {
      "name": "format.bytearray.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 573,
      "display_name": "format.bytearray.separator",
      "documentation": "String inserted between records for ByteArrayFormat. Defaults toSystem.lineSeparator()and may contain escape sequences like\\n. An input record that contains the line separator will look like multiple records in the output S3 object.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 573
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 574,
      "display_name": "s3.proxy.url",
      "documentation": "S3 Proxy settings encoded in URL syntax. This property is meant to be used only if you need to access S3 through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 574
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "s3.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 575,
      "display_name": "s3.proxy.user",
      "documentation": "S3 Proxy User. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.userinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 575
      },
      "default": "nullimportance: low"
    },
    {
      "name": "s3.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 576,
      "display_name": "s3.proxy.password",
      "documentation": "S3 Proxy Password. This property is meant to be used only if you need to access S3 through a proxy. Usings3.proxy.passwordinstead of embedding the username and password ins3.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 576
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "s3.http.send.expect.continue",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 577,
      "display_name": "s3.http.send.expect.continue",
      "documentation": "Enable or disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client will wait for a 100 (CONTINUE) response before sending the request body. Else, the client uploads the entire request body without checking if the server is willing to accept the request.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 577
      },
      "default": "trueimportance: low"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 578,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a null value (for example, Kafka tombstone records).\nValid options areignore,failandwrite. Note that if you setbehavior.on.null.valuestowrite,store.kafka.keysmust be set totrue. Additionally, if you setbehavior.on.null.valuestoignore,\nanderrors.tolerancetonone, you must disable the reporting of null\nrecords to theDead Letter Queue (DLQ). To achieve this, seterrors.log.enabletofalseand do not configure a DLQ topic.Type: stringDefault: failValid Values: [ignore, fail, write]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 578
      },
      "default": "failvalid values: [ignore, fail, write]importance: low",
      "valid_values": [
        "ignore",
        "fail",
        "write"
      ]
    },
    {
      "name": "sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3",
      "order_in_group": 579,
      "display_name": "sts.role.arn",
      "documentation": "Role ARN to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 579
      },
      "default": "nullimportance: high"
    },
    {
      "name": "sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "S3",
      "order_in_group": 580,
      "display_name": "sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 580
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "S3",
      "order_in_group": 581,
      "display_name": "sts.role.session.name",
      "documentation": "Role session name to use when starting a session.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 581
      },
      "default": "nullimportance: high"
    },
    {
      "name": "tombstone.encoded.partition",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "S3",
      "order_in_group": 582,
      "display_name": "tombstone.encoded.partition",
      "documentation": "The Amazon S3 output folder to write the tombstone records to. The\nconfigured partitioner would map tombstone records to this output folder.Type: stringDefault:\"tombstone\"Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 582
      },
      "default": "\"tombstone\"importance: low"
    },
    {
      "name": "storage.class",
      "type": "CLASSIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Storage",
      "order_in_group": 583,
      "display_name": "storage.class",
      "documentation": "The underlying storage layer.Type: classImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 583
      }
    },
    {
      "name": "topics.dir",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Storage",
      "order_in_group": 584,
      "display_name": "topics.dir",
      "documentation": "Top level directory to store the data ingested from Kafka.Type: stringDefault: topicsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 584
      },
      "default": "topicsimportance: high"
    },
    {
      "name": "store.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Storage",
      "order_in_group": 585,
      "display_name": "store.url",
      "documentation": "Store\u00e2\u0080\u0099s connection URL, if applicable. For example:http://bucket.s3-aws-region.amazonaws.com.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 585
      },
      "default": "nullimportance: high"
    },
    {
      "name": "directory.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Storage",
      "order_in_group": 586,
      "display_name": "directory.delim",
      "documentation": "Directory delimiter patternType: stringDefault: /Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 586
      },
      "default": "/importance: medium"
    },
    {
      "name": "file.delim",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Storage",
      "order_in_group": 587,
      "display_name": "file.delim",
      "documentation": "File delimiter patternType: stringDefault: +Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 587
      },
      "default": "+importance: medium"
    },
    {
      "name": "store.kafka.keys",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Keys and headers",
      "order_in_group": 588,
      "display_name": "store.kafka.keys",
      "documentation": "Enable or disable writing record keys to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 588
      },
      "default": "falseimportance: low"
    },
    {
      "name": "keys.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Keys and headers",
      "order_in_group": 589,
      "display_name": "keys.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,Json,ByteArrayandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 589
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "store.kafka.headers",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Keys and headers",
      "order_in_group": 590,
      "display_name": "store.kafka.headers",
      "documentation": "Enable or disable writing record headers to storage.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 590
      },
      "default": "falseimportance: low"
    },
    {
      "name": "headers.format.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Keys and headers",
      "order_in_group": 591,
      "display_name": "headers.format.class",
      "documentation": "The format class to use when writing keys to the store. Possible formats areAvro,JsonandParquet.Type: classDefault: io.confluent.connect.s3.format.avro.AvroFormatImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 591
      },
      "default": "io.confluent.connect.s3.format.avro.avroformatimportance: low"
    },
    {
      "name": "s3.path.style.access.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Keys and headers",
      "order_in_group": 592,
      "display_name": "s3.path.style.access.enabled",
      "documentation": "Specifies whether or not to enable path-style access to the bucket used by the\nconnector. Setting this property tofalseenables the S3 connector to work in\nenvironments where path-style access is disabled.Type: booleanDefault: trueImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 592
      },
      "default": "trueimportance: low"
    },
    {
      "name": "partitioner.class",
      "type": "CLASSDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Partitioner",
      "order_in_group": 593,
      "display_name": "partitioner.class",
      "documentation": "The partitioner to use when writing data to the store. You can useDefaultPartitioner, which preserves the Kafka partitions;FieldPartitioner, which partitions the data to different directories according to the value of the partitioning field specified inpartition.field.name;TimeBasedPartitioner, which partitions data according to ingestion time.Type: classDefault: io.confluent.connect.storage.partitioner.DefaultPartitionerImportance: highDependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 593
      },
      "default": "io.confluent.connect.storage.partitioner.defaultpartitionerimportance: highdependents:partition.field.name,partition.duration.ms,path.format,locale,timezone",
      "dependents": [
        "partition.field.name",
        "partition.duration.ms",
        "path.format",
        "locale",
        "timezone"
      ]
    },
    {
      "name": "partition.field.name",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Partitioner",
      "order_in_group": 594,
      "display_name": "partition.field.name",
      "documentation": "The name of the partitioning field when FieldPartitioner is used.Type: listDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 594
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "partition.duration.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Partitioner",
      "order_in_group": 595,
      "display_name": "partition.duration.ms",
      "documentation": "The duration of a partition milliseconds used byTimeBasedPartitioner. The default value -1 means that we are not usingTimeBasedPartitioner.Type: longDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 595
      },
      "default": "-1importance: medium"
    },
    {
      "name": "path.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Partitioner",
      "order_in_group": 596,
      "display_name": "path.format",
      "documentation": "This configuration is used to set the format of the data directories when partitioning withTimeBasedPartitioner. The format set in this configuration converts the Unix timestamp to proper directories strings. For example, if you setpath.format='year'=YYYY/'month'=MM/'day'=dd/'hour'=HH, the data directories will have the format/year=2015/month=12/day=07/hour=15/.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 596
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "locale",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Partitioner",
      "order_in_group": 597,
      "display_name": "locale",
      "documentation": "The locale to use when partitioning withTimeBasedPartitioner. Used to format dates and times. For example, useen-USfor US English,en-GBfor UK English, orfr-FRfor French (in France). These may vary by Java version. See theavailable locales.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 597
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timezone",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Partitioner",
      "order_in_group": 598,
      "display_name": "timezone",
      "documentation": "The timezone to use when partitioning withTimeBasedPartitioner. Used to format and compute dates and times. All timezone IDs must be specified in the long format, such asAmerica/Los_Angeles,America/New_York, andEurope/Paris, orUTC. Alternatively a locale independent, fixed offset, datetime zone can be specified in form[+-]hh:mm. Support for these timezones may vary by Java version. See theavailable timezones within each locale, such asthose within the US English locale.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 598
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "timestamp.extractor",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Partitioner",
      "order_in_group": 599,
      "display_name": "timestamp.extractor",
      "documentation": "The extractor that gets the timestamp for records when partitioning withTimeBasedPartitioner. It can be set toWallclock,RecordorRecordFieldin order to use one of the built-in timestamp extractors or be given the fully-qualified class name of a user-defined class that extends theTimestampExtractorinterface.Type: stringDefault: WallclockImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 599
      },
      "default": "wallclockimportance: medium"
    },
    {
      "name": "timestamp.field",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Partitioner",
      "order_in_group": 600,
      "display_name": "timestamp.field",
      "documentation": "The record field to be used as timestamp by the timestamp extractor.Type: stringDefault: timestampImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 600
      },
      "default": "timestampimportance: medium"
    },
    {
      "name": "Search by configuration property name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "Search by configuration property name",
      "documentation": "Enter a string to search and filter by configuration property name.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "name",
      "documentation": "Globally unique name to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "connector.class",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 3,
      "display_name": "connector.class",
      "documentation": "Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \u00e2\u0080\u009cFileStreamSink\u00e2\u0080\u009d or \u00e2\u0080\u009cFileStreamSinkConnector\u00e2\u0080\u009d to make the configuration a bit shorter",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "tasks.max",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 4,
      "display_name": "tasks.max",
      "documentation": "Maximum number of tasks to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "topics",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 5,
      "display_name": "topics",
      "documentation": "List of topics to consume, separated by commas",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "topics.regex",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 6,
      "display_name": "topics.regex",
      "documentation": "Regular expression giving topics to consume. Under the hood, the regex is compiled to ajava.util.regex.Pattern. Only one of topics or topics.regex should be specified.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "tasks.max.enforce",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 7,
      "display_name": "tasks.max.enforce",
      "documentation": "(Deprecated) Whether to enforce that the tasks.max property is respected by the connector. By default, connectors that generate too many tasks will fail, and existing sets of tasks that exceed the tasks.max property will also be failed. If this property is set to false, then connectors will be allowed to generate more than the maximum number of tasks, and existing sets of tasks that exceed the tasks.max property will be allowed to run. This property is deprecated and will be removed in an upcoming major release.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "key.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 8,
      "display_name": "key.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      }
    },
    {
      "name": "value.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 9,
      "display_name": "value.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      }
    },
    {
      "name": "header.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 10,
      "display_name": "header.converter",
      "documentation": "HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      }
    },
    {
      "name": "config.action.reload",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 11,
      "display_name": "config.action.reload",
      "documentation": "The action that Connect should take on the connector when changes in external configuration providers result in a change in the connector\u00e2\u0080\u0099s configuration properties. A value of \u00e2\u0080\u0098none\u00e2\u0080\u0099 indicates that Connect will do nothing. A value of \u00e2\u0080\u0098restart\u00e2\u0080\u0099 indicates that Connect should restart/reload the connector with the updated configuration properties.The restart may actually be scheduled in the future if the external configuration provider indicates that a configuration value will expire in the future.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "transforms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 12,
      "display_name": "transforms",
      "documentation": "Aliases for the transformations to be applied to records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "predicates",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 13,
      "display_name": "predicates",
      "documentation": "Aliases for the predicates used by transformations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      }
    },
    {
      "name": "errors.retry.timeout",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 14,
      "display_name": "errors.retry.timeout",
      "documentation": "The maximum duration in milliseconds that a failed operation will be reattempted. The default is 0, which means no retries will be attempted. Use -1 for infinite retries.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "errors.retry.delay.max.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 15,
      "display_name": "errors.retry.delay.max.ms",
      "documentation": "The maximum duration in milliseconds between consecutive retry attempts. Jitter will be added to the delay once this limit is reached to prevent thundering herd issues.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      }
    },
    {
      "name": "errors.tolerance",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 16,
      "display_name": "errors.tolerance",
      "documentation": "Behavior for tolerating errors during connector operation. \u00e2\u0080\u0098none\u00e2\u0080\u0099 is the default value and signals that any error will result in an immediate connector task failure; \u00e2\u0080\u0098all\u00e2\u0080\u0099 changes the behavior to skip over problematic records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "errors.log.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 17,
      "display_name": "errors.log.enable",
      "documentation": "If true, write each error and the details of the failed operation and problematic record to the Connect application log. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, so that only errors that are not tolerated are reported.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      }
    },
    {
      "name": "errors.log.include.messages",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 18,
      "display_name": "errors.log.include.messages",
      "documentation": "Whether to include in the log the Connect record that resulted in a failure. For sink records, the topic, partition, offset, and timestamp will be logged. For source records, the key and value (and their schemas), all headers, and the timestamp, Kafka topic, Kafka partition, source partition, and source offset will be logged. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, which will prevent record keys, values, and headers from being written to log files.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      }
    },
    {
      "name": "errors.deadletterqueue.topic.name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 19,
      "display_name": "errors.deadletterqueue.topic.name",
      "documentation": "The name of the topic to be used as the dead letter queue (DLQ) for messages that result in an error when processed by this sink connector, or its transformations or converters. The topic name is blank by default, which means that no messages are to be recorded in the DLQ.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      }
    },
    {
      "name": "errors.deadletterqueue.topic.replication.factor",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 20,
      "display_name": "errors.deadletterqueue.topic.replication.factor",
      "documentation": "Replication factor used to create the dead letter queue topic when it doesn\u00e2\u0080\u0099t already exist.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      }
    },
    {
      "name": "errors.deadletterqueue.context.headers.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 21,
      "display_name": "errors.deadletterqueue.context.headers.enable",
      "documentation": "If true, add headers containing error context to the messages written to the dead letter queue. To avoid clashing with headers from the original record, all error context header keys, all error context header keys will start with__connect.errors.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      }
    }
  ]
}