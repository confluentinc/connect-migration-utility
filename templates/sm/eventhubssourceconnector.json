{
  "template_id": "EventHubsSourceConnector",
  "connector_type": "SOURCE",
  "connector.class": "io.confluent.connect.azure.eventhubs.EventHubsSourceConnector",
  "name": "{{.logicalClusterId}}",
  "imports": [],
  "group_order": [
    "Connector",
    "Auto topic creation",
    "Azure Event Hubs",
    "Confluent Platform license",
    "Confluent license properties",
    "License topic configuration",
    "License topic ACLs",
    "Override Default Configuration Properties"
  ],
  "config_defs": [
    {
      "name": "azure.eventhubs.sas.keyname",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 1,
      "display_name": "azure.eventhubs.sas.keyname",
      "documentation": "Shared access policy name to the corresponding shared access policy rule for the namespace or entity.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 1
      }
    },
    {
      "name": "azure.eventhubs.sas.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 2,
      "display_name": "azure.eventhubs.sas.key",
      "documentation": "Shared Access key to the corresponding shared access policy rule of the namespace or entity.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "azure.eventhubs.namespace",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 3,
      "display_name": "azure.eventhubs.namespace",
      "documentation": "Namespace name of the event hub to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "azure.eventhubs.hub.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 4,
      "display_name": "azure.eventhubs.hub.name",
      "documentation": "The event hub to read from.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "azure.eventhubs.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 5,
      "display_name": "azure.eventhubs.max.retries",
      "documentation": "Maximum number of retry attempts for failed operations. Zero indicates no retries.Type: intDefault: 5Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      },
      "default": "5valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "azure.eventhubs.initial.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 6,
      "display_name": "azure.eventhubs.initial.backoff.ms",
      "documentation": "The amount of time to wait (backoff) before the first retry.Type: intDefault: 3000 msValid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      },
      "default": "3000 msvalid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "kafka.topic",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 7,
      "display_name": "kafka.topic",
      "documentation": "The Kafka topic to write the data to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "max.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 8,
      "display_name": "max.events",
      "documentation": "Maximum number of events to read per event hub partition per poll.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 9,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 10,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 11,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 12,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 13,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 14,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      },
      "default": "kafka broker value"
    },
    {
      "name": "azure.eventhubs.partition.starting.position",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 15,
      "display_name": "azure.eventhubs.partition.starting.position",
      "documentation": "Default position in the event hub to reset to if no offsets are stored.NoteThe Azure Event Hub Source connector usesx-opt-kafka-keykey-value pair\nas the partition key when the Azure SDKEventData.PartitionKeyproperty\nis null and when thex-opt-kafka-keyis present.Type: stringDefault: START_OF_STREAMValid Values: either END_OF_STREAM or START_OF_STREAMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      },
      "default": "start_of_streamvalid values: either end_of_stream or start_of_streamimportance: medium"
    },
    {
      "name": "azure.eventhubs.partition.id.regex",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 16,
      "display_name": "azure.eventhubs.partition.id.regex",
      "documentation": "Regex that matches the names of partitions in the event hub from which the connector polls data.Type: stringDefault: .*Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      },
      "default": ".*importance: medium"
    },
    {
      "name": "azure.eventhubs.consumer.group",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 17,
      "display_name": "azure.eventhubs.consumer.group",
      "documentation": "Event Hubs consumer group to use to consume events.Type: stringDefault: $DefaultImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      },
      "default": "$defaultimportance: low"
    },
    {
      "name": "azure.eventhubs.transport.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 18,
      "display_name": "azure.eventhubs.transport.type",
      "documentation": "Transport type for communicating to Event Hubs service. Event Hubs supports 2 types: AMQP, AMQP over TCP, which uses port 5671; AMQP_WEB_SOCKETS, AMQP over Web Sockets, which uses port 443.Type: stringDefault: AMQPValid Values: either AMQP or AMQP_WEB_SOCKETSImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      },
      "default": "amqpvalid values: either amqp or amqp_web_socketsimportance: low"
    },
    {
      "name": "azure.eventhubs.offset.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 19,
      "display_name": "azure.eventhubs.offset.type",
      "documentation": "Offset type to use to keep track of events. Azure Event Hubs provides the offsets: OFFSET, Event Hubs offset of the event; SEQ_NUM, sequence number of the event.Type: stringDefault: OFFSETValid Values: either OFFSET or SEQ_NUMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      },
      "default": "offsetvalid values: either offset or seq_numimportance: medium"
    },
    {
      "name": "azure.eventhubs.domain",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 20,
      "display_name": "azure.eventhubs.domain",
      "documentation": "Specifies the domain of the Event Hub to establish a connection.Type: stringDefault:servicebus.windows.netValid Values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      },
      "default": "servicebus.windows.netvalid values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 21,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 22,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 22
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 23,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 23
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 24,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 24
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 25,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 25
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 26,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 26
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 27,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 27
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "azure.eventhubs.sas.keyname",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 28,
      "display_name": "azure.eventhubs.sas.keyname",
      "documentation": "Shared access policy name to the corresponding shared access policy rule for the namespace or entity.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 28
      }
    },
    {
      "name": "azure.eventhubs.sas.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 29,
      "display_name": "azure.eventhubs.sas.key",
      "documentation": "Shared Access key to the corresponding shared access policy rule of the namespace or entity.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 29
      }
    },
    {
      "name": "azure.eventhubs.namespace",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 30,
      "display_name": "azure.eventhubs.namespace",
      "documentation": "Namespace name of the event hub to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 30
      }
    },
    {
      "name": "azure.eventhubs.hub.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 31,
      "display_name": "azure.eventhubs.hub.name",
      "documentation": "The event hub to read from.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 31
      }
    },
    {
      "name": "azure.eventhubs.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 32,
      "display_name": "azure.eventhubs.max.retries",
      "documentation": "Maximum number of retry attempts for failed operations. Zero indicates no retries.Type: intDefault: 5Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 32
      },
      "default": "5valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "azure.eventhubs.initial.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 33,
      "display_name": "azure.eventhubs.initial.backoff.ms",
      "documentation": "The amount of time to wait (backoff) before the first retry.Type: intDefault: 3000 msValid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 33
      },
      "default": "3000 msvalid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "kafka.topic",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 34,
      "display_name": "kafka.topic",
      "documentation": "The Kafka topic to write the data to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 34
      }
    },
    {
      "name": "max.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 35,
      "display_name": "max.events",
      "documentation": "Maximum number of events to read per event hub partition per poll.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 35
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 36,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 36
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 37,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 37
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 38,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 38
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 39,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 39
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 40,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 40
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 41,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 41
      },
      "default": "kafka broker value"
    },
    {
      "name": "azure.eventhubs.partition.starting.position",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 42,
      "display_name": "azure.eventhubs.partition.starting.position",
      "documentation": "Default position in the event hub to reset to if no offsets are stored.NoteThe Azure Event Hub Source connector usesx-opt-kafka-keykey-value pair\nas the partition key when the Azure SDKEventData.PartitionKeyproperty\nis null and when thex-opt-kafka-keyis present.Type: stringDefault: START_OF_STREAMValid Values: either END_OF_STREAM or START_OF_STREAMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 42
      },
      "default": "start_of_streamvalid values: either end_of_stream or start_of_streamimportance: medium"
    },
    {
      "name": "azure.eventhubs.partition.id.regex",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 43,
      "display_name": "azure.eventhubs.partition.id.regex",
      "documentation": "Regex that matches the names of partitions in the event hub from which the connector polls data.Type: stringDefault: .*Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 43
      },
      "default": ".*importance: medium"
    },
    {
      "name": "azure.eventhubs.consumer.group",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 44,
      "display_name": "azure.eventhubs.consumer.group",
      "documentation": "Event Hubs consumer group to use to consume events.Type: stringDefault: $DefaultImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 44
      },
      "default": "$defaultimportance: low"
    },
    {
      "name": "azure.eventhubs.transport.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 45,
      "display_name": "azure.eventhubs.transport.type",
      "documentation": "Transport type for communicating to Event Hubs service. Event Hubs supports 2 types: AMQP, AMQP over TCP, which uses port 5671; AMQP_WEB_SOCKETS, AMQP over Web Sockets, which uses port 443.Type: stringDefault: AMQPValid Values: either AMQP or AMQP_WEB_SOCKETSImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 45
      },
      "default": "amqpvalid values: either amqp or amqp_web_socketsimportance: low"
    },
    {
      "name": "azure.eventhubs.offset.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 46,
      "display_name": "azure.eventhubs.offset.type",
      "documentation": "Offset type to use to keep track of events. Azure Event Hubs provides the offsets: OFFSET, Event Hubs offset of the event; SEQ_NUM, sequence number of the event.Type: stringDefault: OFFSETValid Values: either OFFSET or SEQ_NUMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 46
      },
      "default": "offsetvalid values: either offset or seq_numimportance: medium"
    },
    {
      "name": "azure.eventhubs.domain",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 47,
      "display_name": "azure.eventhubs.domain",
      "documentation": "Specifies the domain of the Event Hub to establish a connection.Type: stringDefault:servicebus.windows.netValid Values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 47
      },
      "default": "servicebus.windows.netvalid values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 48,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 48
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 49,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 49
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 50,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 50
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 51,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 51
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 52,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 52
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 53,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 53
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 54,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 54
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "azure.eventhubs.sas.keyname",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 55,
      "display_name": "azure.eventhubs.sas.keyname",
      "documentation": "Shared access policy name to the corresponding shared access policy rule for the namespace or entity.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 55
      }
    },
    {
      "name": "azure.eventhubs.sas.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 56,
      "display_name": "azure.eventhubs.sas.key",
      "documentation": "Shared Access key to the corresponding shared access policy rule of the namespace or entity.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 56
      }
    },
    {
      "name": "azure.eventhubs.namespace",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 57,
      "display_name": "azure.eventhubs.namespace",
      "documentation": "Namespace name of the event hub to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 57
      }
    },
    {
      "name": "azure.eventhubs.hub.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 58,
      "display_name": "azure.eventhubs.hub.name",
      "documentation": "The event hub to read from.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 58
      }
    },
    {
      "name": "azure.eventhubs.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 59,
      "display_name": "azure.eventhubs.max.retries",
      "documentation": "Maximum number of retry attempts for failed operations. Zero indicates no retries.Type: intDefault: 5Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 59
      },
      "default": "5valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "azure.eventhubs.initial.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 60,
      "display_name": "azure.eventhubs.initial.backoff.ms",
      "documentation": "The amount of time to wait (backoff) before the first retry.Type: intDefault: 3000 msValid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 60
      },
      "default": "3000 msvalid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "kafka.topic",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 61,
      "display_name": "kafka.topic",
      "documentation": "The Kafka topic to write the data to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 61
      }
    },
    {
      "name": "max.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 62,
      "display_name": "max.events",
      "documentation": "Maximum number of events to read per event hub partition per poll.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 62
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 63,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 63
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 64,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 64
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 65,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 65
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 66,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 66
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 67,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 67
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 68,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 68
      },
      "default": "kafka broker value"
    },
    {
      "name": "azure.eventhubs.partition.starting.position",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 69,
      "display_name": "azure.eventhubs.partition.starting.position",
      "documentation": "Default position in the event hub to reset to if no offsets are stored.NoteThe Azure Event Hub Source connector usesx-opt-kafka-keykey-value pair\nas the partition key when the Azure SDKEventData.PartitionKeyproperty\nis null and when thex-opt-kafka-keyis present.Type: stringDefault: START_OF_STREAMValid Values: either END_OF_STREAM or START_OF_STREAMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 69
      },
      "default": "start_of_streamvalid values: either end_of_stream or start_of_streamimportance: medium"
    },
    {
      "name": "azure.eventhubs.partition.id.regex",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 70,
      "display_name": "azure.eventhubs.partition.id.regex",
      "documentation": "Regex that matches the names of partitions in the event hub from which the connector polls data.Type: stringDefault: .*Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 70
      },
      "default": ".*importance: medium"
    },
    {
      "name": "azure.eventhubs.consumer.group",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 71,
      "display_name": "azure.eventhubs.consumer.group",
      "documentation": "Event Hubs consumer group to use to consume events.Type: stringDefault: $DefaultImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 71
      },
      "default": "$defaultimportance: low"
    },
    {
      "name": "azure.eventhubs.transport.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 72,
      "display_name": "azure.eventhubs.transport.type",
      "documentation": "Transport type for communicating to Event Hubs service. Event Hubs supports 2 types: AMQP, AMQP over TCP, which uses port 5671; AMQP_WEB_SOCKETS, AMQP over Web Sockets, which uses port 443.Type: stringDefault: AMQPValid Values: either AMQP or AMQP_WEB_SOCKETSImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 72
      },
      "default": "amqpvalid values: either amqp or amqp_web_socketsimportance: low"
    },
    {
      "name": "azure.eventhubs.offset.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 73,
      "display_name": "azure.eventhubs.offset.type",
      "documentation": "Offset type to use to keep track of events. Azure Event Hubs provides the offsets: OFFSET, Event Hubs offset of the event; SEQ_NUM, sequence number of the event.Type: stringDefault: OFFSETValid Values: either OFFSET or SEQ_NUMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 73
      },
      "default": "offsetvalid values: either offset or seq_numimportance: medium"
    },
    {
      "name": "azure.eventhubs.domain",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 74,
      "display_name": "azure.eventhubs.domain",
      "documentation": "Specifies the domain of the Event Hub to establish a connection.Type: stringDefault:servicebus.windows.netValid Values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 74
      },
      "default": "servicebus.windows.netvalid values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 75,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 75
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 76,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 76
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 77,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 77
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 78,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 78
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 79,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 79
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 80,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 80
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 81,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 81
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "azure.eventhubs.sas.keyname",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 82,
      "display_name": "azure.eventhubs.sas.keyname",
      "documentation": "Shared access policy name to the corresponding shared access policy rule for the namespace or entity.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 82
      }
    },
    {
      "name": "azure.eventhubs.sas.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 83,
      "display_name": "azure.eventhubs.sas.key",
      "documentation": "Shared Access key to the corresponding shared access policy rule of the namespace or entity.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 83
      }
    },
    {
      "name": "azure.eventhubs.namespace",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 84,
      "display_name": "azure.eventhubs.namespace",
      "documentation": "Namespace name of the event hub to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 84
      }
    },
    {
      "name": "azure.eventhubs.hub.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 85,
      "display_name": "azure.eventhubs.hub.name",
      "documentation": "The event hub to read from.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 85
      }
    },
    {
      "name": "azure.eventhubs.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 86,
      "display_name": "azure.eventhubs.max.retries",
      "documentation": "Maximum number of retry attempts for failed operations. Zero indicates no retries.Type: intDefault: 5Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 86
      },
      "default": "5valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "azure.eventhubs.initial.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 87,
      "display_name": "azure.eventhubs.initial.backoff.ms",
      "documentation": "The amount of time to wait (backoff) before the first retry.Type: intDefault: 3000 msValid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 87
      },
      "default": "3000 msvalid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "kafka.topic",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 88,
      "display_name": "kafka.topic",
      "documentation": "The Kafka topic to write the data to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 88
      }
    },
    {
      "name": "max.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 89,
      "display_name": "max.events",
      "documentation": "Maximum number of events to read per event hub partition per poll.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 89
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 90,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 90
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 91,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 91
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 92,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 92
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 93,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 93
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 94,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 94
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 95,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 95
      },
      "default": "kafka broker value"
    },
    {
      "name": "azure.eventhubs.partition.starting.position",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 96,
      "display_name": "azure.eventhubs.partition.starting.position",
      "documentation": "Default position in the event hub to reset to if no offsets are stored.NoteThe Azure Event Hub Source connector usesx-opt-kafka-keykey-value pair\nas the partition key when the Azure SDKEventData.PartitionKeyproperty\nis null and when thex-opt-kafka-keyis present.Type: stringDefault: START_OF_STREAMValid Values: either END_OF_STREAM or START_OF_STREAMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 96
      },
      "default": "start_of_streamvalid values: either end_of_stream or start_of_streamimportance: medium"
    },
    {
      "name": "azure.eventhubs.partition.id.regex",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 97,
      "display_name": "azure.eventhubs.partition.id.regex",
      "documentation": "Regex that matches the names of partitions in the event hub from which the connector polls data.Type: stringDefault: .*Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 97
      },
      "default": ".*importance: medium"
    },
    {
      "name": "azure.eventhubs.consumer.group",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 98,
      "display_name": "azure.eventhubs.consumer.group",
      "documentation": "Event Hubs consumer group to use to consume events.Type: stringDefault: $DefaultImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 98
      },
      "default": "$defaultimportance: low"
    },
    {
      "name": "azure.eventhubs.transport.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 99,
      "display_name": "azure.eventhubs.transport.type",
      "documentation": "Transport type for communicating to Event Hubs service. Event Hubs supports 2 types: AMQP, AMQP over TCP, which uses port 5671; AMQP_WEB_SOCKETS, AMQP over Web Sockets, which uses port 443.Type: stringDefault: AMQPValid Values: either AMQP or AMQP_WEB_SOCKETSImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 99
      },
      "default": "amqpvalid values: either amqp or amqp_web_socketsimportance: low"
    },
    {
      "name": "azure.eventhubs.offset.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 100,
      "display_name": "azure.eventhubs.offset.type",
      "documentation": "Offset type to use to keep track of events. Azure Event Hubs provides the offsets: OFFSET, Event Hubs offset of the event; SEQ_NUM, sequence number of the event.Type: stringDefault: OFFSETValid Values: either OFFSET or SEQ_NUMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 100
      },
      "default": "offsetvalid values: either offset or seq_numimportance: medium"
    },
    {
      "name": "azure.eventhubs.domain",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 101,
      "display_name": "azure.eventhubs.domain",
      "documentation": "Specifies the domain of the Event Hub to establish a connection.Type: stringDefault:servicebus.windows.netValid Values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 101
      },
      "default": "servicebus.windows.netvalid values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 102,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 102
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 103,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 103
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 104,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 104
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 105,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 105
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 106,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 106
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 107,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 107
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 108,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 108
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "azure.eventhubs.sas.keyname",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 109,
      "display_name": "azure.eventhubs.sas.keyname",
      "documentation": "Shared access policy name to the corresponding shared access policy rule for the namespace or entity.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 109
      }
    },
    {
      "name": "azure.eventhubs.sas.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 110,
      "display_name": "azure.eventhubs.sas.key",
      "documentation": "Shared Access key to the corresponding shared access policy rule of the namespace or entity.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 110
      }
    },
    {
      "name": "azure.eventhubs.namespace",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 111,
      "display_name": "azure.eventhubs.namespace",
      "documentation": "Namespace name of the event hub to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 111
      }
    },
    {
      "name": "azure.eventhubs.hub.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 112,
      "display_name": "azure.eventhubs.hub.name",
      "documentation": "The event hub to read from.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 112
      }
    },
    {
      "name": "azure.eventhubs.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 113,
      "display_name": "azure.eventhubs.max.retries",
      "documentation": "Maximum number of retry attempts for failed operations. Zero indicates no retries.Type: intDefault: 5Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 113
      },
      "default": "5valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "azure.eventhubs.initial.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 114,
      "display_name": "azure.eventhubs.initial.backoff.ms",
      "documentation": "The amount of time to wait (backoff) before the first retry.Type: intDefault: 3000 msValid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 114
      },
      "default": "3000 msvalid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "kafka.topic",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 115,
      "display_name": "kafka.topic",
      "documentation": "The Kafka topic to write the data to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 115
      }
    },
    {
      "name": "max.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 116,
      "display_name": "max.events",
      "documentation": "Maximum number of events to read per event hub partition per poll.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 116
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 117,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 117
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 118,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 118
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 119,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 119
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 120,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 120
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 121,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 121
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 122,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 122
      },
      "default": "kafka broker value"
    },
    {
      "name": "azure.eventhubs.partition.starting.position",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 123,
      "display_name": "azure.eventhubs.partition.starting.position",
      "documentation": "Default position in the event hub to reset to if no offsets are stored.NoteThe Azure Event Hub Source connector usesx-opt-kafka-keykey-value pair\nas the partition key when the Azure SDKEventData.PartitionKeyproperty\nis null and when thex-opt-kafka-keyis present.Type: stringDefault: START_OF_STREAMValid Values: either END_OF_STREAM or START_OF_STREAMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 123
      },
      "default": "start_of_streamvalid values: either end_of_stream or start_of_streamimportance: medium"
    },
    {
      "name": "azure.eventhubs.partition.id.regex",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 124,
      "display_name": "azure.eventhubs.partition.id.regex",
      "documentation": "Regex that matches the names of partitions in the event hub from which the connector polls data.Type: stringDefault: .*Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 124
      },
      "default": ".*importance: medium"
    },
    {
      "name": "azure.eventhubs.consumer.group",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 125,
      "display_name": "azure.eventhubs.consumer.group",
      "documentation": "Event Hubs consumer group to use to consume events.Type: stringDefault: $DefaultImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 125
      },
      "default": "$defaultimportance: low"
    },
    {
      "name": "azure.eventhubs.transport.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 126,
      "display_name": "azure.eventhubs.transport.type",
      "documentation": "Transport type for communicating to Event Hubs service. Event Hubs supports 2 types: AMQP, AMQP over TCP, which uses port 5671; AMQP_WEB_SOCKETS, AMQP over Web Sockets, which uses port 443.Type: stringDefault: AMQPValid Values: either AMQP or AMQP_WEB_SOCKETSImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 126
      },
      "default": "amqpvalid values: either amqp or amqp_web_socketsimportance: low"
    },
    {
      "name": "azure.eventhubs.offset.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 127,
      "display_name": "azure.eventhubs.offset.type",
      "documentation": "Offset type to use to keep track of events. Azure Event Hubs provides the offsets: OFFSET, Event Hubs offset of the event; SEQ_NUM, sequence number of the event.Type: stringDefault: OFFSETValid Values: either OFFSET or SEQ_NUMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 127
      },
      "default": "offsetvalid values: either offset or seq_numimportance: medium"
    },
    {
      "name": "azure.eventhubs.domain",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 128,
      "display_name": "azure.eventhubs.domain",
      "documentation": "Specifies the domain of the Event Hub to establish a connection.Type: stringDefault:servicebus.windows.netValid Values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 128
      },
      "default": "servicebus.windows.netvalid values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 129,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 129
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 130,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 130
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 131,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 131
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 132,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 132
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 133,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 133
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 134,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 134
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 135,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 135
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "azure.eventhubs.sas.keyname",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 136,
      "display_name": "azure.eventhubs.sas.keyname",
      "documentation": "Shared access policy name to the corresponding shared access policy rule for the namespace or entity.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 136
      }
    },
    {
      "name": "azure.eventhubs.sas.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 137,
      "display_name": "azure.eventhubs.sas.key",
      "documentation": "Shared Access key to the corresponding shared access policy rule of the namespace or entity.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 137
      }
    },
    {
      "name": "azure.eventhubs.namespace",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 138,
      "display_name": "azure.eventhubs.namespace",
      "documentation": "Namespace name of the event hub to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 138
      }
    },
    {
      "name": "azure.eventhubs.hub.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 139,
      "display_name": "azure.eventhubs.hub.name",
      "documentation": "The event hub to read from.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 139
      }
    },
    {
      "name": "azure.eventhubs.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 140,
      "display_name": "azure.eventhubs.max.retries",
      "documentation": "Maximum number of retry attempts for failed operations. Zero indicates no retries.Type: intDefault: 5Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 140
      },
      "default": "5valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "azure.eventhubs.initial.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 141,
      "display_name": "azure.eventhubs.initial.backoff.ms",
      "documentation": "The amount of time to wait (backoff) before the first retry.Type: intDefault: 3000 msValid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 141
      },
      "default": "3000 msvalid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "kafka.topic",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 142,
      "display_name": "kafka.topic",
      "documentation": "The Kafka topic to write the data to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 142
      }
    },
    {
      "name": "max.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 143,
      "display_name": "max.events",
      "documentation": "Maximum number of events to read per event hub partition per poll.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 143
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 144,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 144
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 145,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 145
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 146,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 146
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 147,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 147
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 148,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 148
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 149,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 149
      },
      "default": "kafka broker value"
    },
    {
      "name": "azure.eventhubs.partition.starting.position",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 150,
      "display_name": "azure.eventhubs.partition.starting.position",
      "documentation": "Default position in the event hub to reset to if no offsets are stored.NoteThe Azure Event Hub Source connector usesx-opt-kafka-keykey-value pair\nas the partition key when the Azure SDKEventData.PartitionKeyproperty\nis null and when thex-opt-kafka-keyis present.Type: stringDefault: START_OF_STREAMValid Values: either END_OF_STREAM or START_OF_STREAMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 150
      },
      "default": "start_of_streamvalid values: either end_of_stream or start_of_streamimportance: medium"
    },
    {
      "name": "azure.eventhubs.partition.id.regex",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 151,
      "display_name": "azure.eventhubs.partition.id.regex",
      "documentation": "Regex that matches the names of partitions in the event hub from which the connector polls data.Type: stringDefault: .*Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 151
      },
      "default": ".*importance: medium"
    },
    {
      "name": "azure.eventhubs.consumer.group",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 152,
      "display_name": "azure.eventhubs.consumer.group",
      "documentation": "Event Hubs consumer group to use to consume events.Type: stringDefault: $DefaultImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 152
      },
      "default": "$defaultimportance: low"
    },
    {
      "name": "azure.eventhubs.transport.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 153,
      "display_name": "azure.eventhubs.transport.type",
      "documentation": "Transport type for communicating to Event Hubs service. Event Hubs supports 2 types: AMQP, AMQP over TCP, which uses port 5671; AMQP_WEB_SOCKETS, AMQP over Web Sockets, which uses port 443.Type: stringDefault: AMQPValid Values: either AMQP or AMQP_WEB_SOCKETSImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 153
      },
      "default": "amqpvalid values: either amqp or amqp_web_socketsimportance: low"
    },
    {
      "name": "azure.eventhubs.offset.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 154,
      "display_name": "azure.eventhubs.offset.type",
      "documentation": "Offset type to use to keep track of events. Azure Event Hubs provides the offsets: OFFSET, Event Hubs offset of the event; SEQ_NUM, sequence number of the event.Type: stringDefault: OFFSETValid Values: either OFFSET or SEQ_NUMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 154
      },
      "default": "offsetvalid values: either offset or seq_numimportance: medium"
    },
    {
      "name": "azure.eventhubs.domain",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 155,
      "display_name": "azure.eventhubs.domain",
      "documentation": "Specifies the domain of the Event Hub to establish a connection.Type: stringDefault:servicebus.windows.netValid Values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 155
      },
      "default": "servicebus.windows.netvalid values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 156,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 156
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 157,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 157
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 158,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 158
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 159,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 159
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 160,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 160
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 161,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 161
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 162,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 162
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "azure.eventhubs.sas.keyname",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 163,
      "display_name": "azure.eventhubs.sas.keyname",
      "documentation": "Shared access policy name to the corresponding shared access policy rule for the namespace or entity.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 163
      }
    },
    {
      "name": "azure.eventhubs.sas.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 164,
      "display_name": "azure.eventhubs.sas.key",
      "documentation": "Shared Access key to the corresponding shared access policy rule of the namespace or entity.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 164
      }
    },
    {
      "name": "azure.eventhubs.namespace",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 165,
      "display_name": "azure.eventhubs.namespace",
      "documentation": "Namespace name of the event hub to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 165
      }
    },
    {
      "name": "azure.eventhubs.hub.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 166,
      "display_name": "azure.eventhubs.hub.name",
      "documentation": "The event hub to read from.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 166
      }
    },
    {
      "name": "azure.eventhubs.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 167,
      "display_name": "azure.eventhubs.max.retries",
      "documentation": "Maximum number of retry attempts for failed operations. Zero indicates no retries.Type: intDefault: 5Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 167
      },
      "default": "5valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "azure.eventhubs.initial.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 168,
      "display_name": "azure.eventhubs.initial.backoff.ms",
      "documentation": "The amount of time to wait (backoff) before the first retry.Type: intDefault: 3000 msValid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 168
      },
      "default": "3000 msvalid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "kafka.topic",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 169,
      "display_name": "kafka.topic",
      "documentation": "The Kafka topic to write the data to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 169
      }
    },
    {
      "name": "max.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 170,
      "display_name": "max.events",
      "documentation": "Maximum number of events to read per event hub partition per poll.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 170
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 171,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 171
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 172,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 172
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 173,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 173
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 174,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 174
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 175,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 175
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 176,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 176
      },
      "default": "kafka broker value"
    },
    {
      "name": "azure.eventhubs.partition.starting.position",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 177,
      "display_name": "azure.eventhubs.partition.starting.position",
      "documentation": "Default position in the event hub to reset to if no offsets are stored.NoteThe Azure Event Hub Source connector usesx-opt-kafka-keykey-value pair\nas the partition key when the Azure SDKEventData.PartitionKeyproperty\nis null and when thex-opt-kafka-keyis present.Type: stringDefault: START_OF_STREAMValid Values: either END_OF_STREAM or START_OF_STREAMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 177
      },
      "default": "start_of_streamvalid values: either end_of_stream or start_of_streamimportance: medium"
    },
    {
      "name": "azure.eventhubs.partition.id.regex",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 178,
      "display_name": "azure.eventhubs.partition.id.regex",
      "documentation": "Regex that matches the names of partitions in the event hub from which the connector polls data.Type: stringDefault: .*Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 178
      },
      "default": ".*importance: medium"
    },
    {
      "name": "azure.eventhubs.consumer.group",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 179,
      "display_name": "azure.eventhubs.consumer.group",
      "documentation": "Event Hubs consumer group to use to consume events.Type: stringDefault: $DefaultImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 179
      },
      "default": "$defaultimportance: low"
    },
    {
      "name": "azure.eventhubs.transport.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 180,
      "display_name": "azure.eventhubs.transport.type",
      "documentation": "Transport type for communicating to Event Hubs service. Event Hubs supports 2 types: AMQP, AMQP over TCP, which uses port 5671; AMQP_WEB_SOCKETS, AMQP over Web Sockets, which uses port 443.Type: stringDefault: AMQPValid Values: either AMQP or AMQP_WEB_SOCKETSImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 180
      },
      "default": "amqpvalid values: either amqp or amqp_web_socketsimportance: low"
    },
    {
      "name": "azure.eventhubs.offset.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 181,
      "display_name": "azure.eventhubs.offset.type",
      "documentation": "Offset type to use to keep track of events. Azure Event Hubs provides the offsets: OFFSET, Event Hubs offset of the event; SEQ_NUM, sequence number of the event.Type: stringDefault: OFFSETValid Values: either OFFSET or SEQ_NUMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 181
      },
      "default": "offsetvalid values: either offset or seq_numimportance: medium"
    },
    {
      "name": "azure.eventhubs.domain",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 182,
      "display_name": "azure.eventhubs.domain",
      "documentation": "Specifies the domain of the Event Hub to establish a connection.Type: stringDefault:servicebus.windows.netValid Values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 182
      },
      "default": "servicebus.windows.netvalid values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 183,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 183
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 184,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 184
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 185,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 185
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 186,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 186
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 187,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 187
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 188,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 188
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 189,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 189
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "azure.eventhubs.sas.keyname",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 190,
      "display_name": "azure.eventhubs.sas.keyname",
      "documentation": "Shared access policy name to the corresponding shared access policy rule for the namespace or entity.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 190
      }
    },
    {
      "name": "azure.eventhubs.sas.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 191,
      "display_name": "azure.eventhubs.sas.key",
      "documentation": "Shared Access key to the corresponding shared access policy rule of the namespace or entity.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 191
      }
    },
    {
      "name": "azure.eventhubs.namespace",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 192,
      "display_name": "azure.eventhubs.namespace",
      "documentation": "Namespace name of the event hub to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 192
      }
    },
    {
      "name": "azure.eventhubs.hub.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 193,
      "display_name": "azure.eventhubs.hub.name",
      "documentation": "The event hub to read from.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 193
      }
    },
    {
      "name": "azure.eventhubs.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 194,
      "display_name": "azure.eventhubs.max.retries",
      "documentation": "Maximum number of retry attempts for failed operations. Zero indicates no retries.Type: intDefault: 5Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 194
      },
      "default": "5valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "azure.eventhubs.initial.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 195,
      "display_name": "azure.eventhubs.initial.backoff.ms",
      "documentation": "The amount of time to wait (backoff) before the first retry.Type: intDefault: 3000 msValid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 195
      },
      "default": "3000 msvalid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "kafka.topic",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 196,
      "display_name": "kafka.topic",
      "documentation": "The Kafka topic to write the data to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 196
      }
    },
    {
      "name": "max.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 197,
      "display_name": "max.events",
      "documentation": "Maximum number of events to read per event hub partition per poll.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 197
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 198,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 198
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 199,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 199
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 200,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 200
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 201,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 201
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 202,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 202
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 203,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 203
      },
      "default": "kafka broker value"
    },
    {
      "name": "azure.eventhubs.partition.starting.position",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 204,
      "display_name": "azure.eventhubs.partition.starting.position",
      "documentation": "Default position in the event hub to reset to if no offsets are stored.NoteThe Azure Event Hub Source connector usesx-opt-kafka-keykey-value pair\nas the partition key when the Azure SDKEventData.PartitionKeyproperty\nis null and when thex-opt-kafka-keyis present.Type: stringDefault: START_OF_STREAMValid Values: either END_OF_STREAM or START_OF_STREAMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 204
      },
      "default": "start_of_streamvalid values: either end_of_stream or start_of_streamimportance: medium"
    },
    {
      "name": "azure.eventhubs.partition.id.regex",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 205,
      "display_name": "azure.eventhubs.partition.id.regex",
      "documentation": "Regex that matches the names of partitions in the event hub from which the connector polls data.Type: stringDefault: .*Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 205
      },
      "default": ".*importance: medium"
    },
    {
      "name": "azure.eventhubs.consumer.group",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 206,
      "display_name": "azure.eventhubs.consumer.group",
      "documentation": "Event Hubs consumer group to use to consume events.Type: stringDefault: $DefaultImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 206
      },
      "default": "$defaultimportance: low"
    },
    {
      "name": "azure.eventhubs.transport.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 207,
      "display_name": "azure.eventhubs.transport.type",
      "documentation": "Transport type for communicating to Event Hubs service. Event Hubs supports 2 types: AMQP, AMQP over TCP, which uses port 5671; AMQP_WEB_SOCKETS, AMQP over Web Sockets, which uses port 443.Type: stringDefault: AMQPValid Values: either AMQP or AMQP_WEB_SOCKETSImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 207
      },
      "default": "amqpvalid values: either amqp or amqp_web_socketsimportance: low"
    },
    {
      "name": "azure.eventhubs.offset.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 208,
      "display_name": "azure.eventhubs.offset.type",
      "documentation": "Offset type to use to keep track of events. Azure Event Hubs provides the offsets: OFFSET, Event Hubs offset of the event; SEQ_NUM, sequence number of the event.Type: stringDefault: OFFSETValid Values: either OFFSET or SEQ_NUMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 208
      },
      "default": "offsetvalid values: either offset or seq_numimportance: medium"
    },
    {
      "name": "azure.eventhubs.domain",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 209,
      "display_name": "azure.eventhubs.domain",
      "documentation": "Specifies the domain of the Event Hub to establish a connection.Type: stringDefault:servicebus.windows.netValid Values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 209
      },
      "default": "servicebus.windows.netvalid values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 210,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 210
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 211,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 211
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 212,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 212
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 213,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 213
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 214,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 214
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 215,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 215
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 216,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 216
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "azure.eventhubs.sas.keyname",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 217,
      "display_name": "azure.eventhubs.sas.keyname",
      "documentation": "Shared access policy name to the corresponding shared access policy rule for the namespace or entity.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 217
      }
    },
    {
      "name": "azure.eventhubs.sas.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 218,
      "display_name": "azure.eventhubs.sas.key",
      "documentation": "Shared Access key to the corresponding shared access policy rule of the namespace or entity.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 218
      }
    },
    {
      "name": "azure.eventhubs.namespace",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 219,
      "display_name": "azure.eventhubs.namespace",
      "documentation": "Namespace name of the event hub to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 219
      }
    },
    {
      "name": "azure.eventhubs.hub.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 220,
      "display_name": "azure.eventhubs.hub.name",
      "documentation": "The event hub to read from.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 220
      }
    },
    {
      "name": "azure.eventhubs.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 221,
      "display_name": "azure.eventhubs.max.retries",
      "documentation": "Maximum number of retry attempts for failed operations. Zero indicates no retries.Type: intDefault: 5Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 221
      },
      "default": "5valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "azure.eventhubs.initial.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 222,
      "display_name": "azure.eventhubs.initial.backoff.ms",
      "documentation": "The amount of time to wait (backoff) before the first retry.Type: intDefault: 3000 msValid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 222
      },
      "default": "3000 msvalid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "kafka.topic",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 223,
      "display_name": "kafka.topic",
      "documentation": "The Kafka topic to write the data to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 223
      }
    },
    {
      "name": "max.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 224,
      "display_name": "max.events",
      "documentation": "Maximum number of events to read per event hub partition per poll.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 224
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 225,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 225
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 226,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 226
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 227,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 227
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 228,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 228
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 229,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 229
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 230,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 230
      },
      "default": "kafka broker value"
    },
    {
      "name": "azure.eventhubs.partition.starting.position",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 231,
      "display_name": "azure.eventhubs.partition.starting.position",
      "documentation": "Default position in the event hub to reset to if no offsets are stored.NoteThe Azure Event Hub Source connector usesx-opt-kafka-keykey-value pair\nas the partition key when the Azure SDKEventData.PartitionKeyproperty\nis null and when thex-opt-kafka-keyis present.Type: stringDefault: START_OF_STREAMValid Values: either END_OF_STREAM or START_OF_STREAMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 231
      },
      "default": "start_of_streamvalid values: either end_of_stream or start_of_streamimportance: medium"
    },
    {
      "name": "azure.eventhubs.partition.id.regex",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 232,
      "display_name": "azure.eventhubs.partition.id.regex",
      "documentation": "Regex that matches the names of partitions in the event hub from which the connector polls data.Type: stringDefault: .*Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 232
      },
      "default": ".*importance: medium"
    },
    {
      "name": "azure.eventhubs.consumer.group",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 233,
      "display_name": "azure.eventhubs.consumer.group",
      "documentation": "Event Hubs consumer group to use to consume events.Type: stringDefault: $DefaultImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 233
      },
      "default": "$defaultimportance: low"
    },
    {
      "name": "azure.eventhubs.transport.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 234,
      "display_name": "azure.eventhubs.transport.type",
      "documentation": "Transport type for communicating to Event Hubs service. Event Hubs supports 2 types: AMQP, AMQP over TCP, which uses port 5671; AMQP_WEB_SOCKETS, AMQP over Web Sockets, which uses port 443.Type: stringDefault: AMQPValid Values: either AMQP or AMQP_WEB_SOCKETSImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 234
      },
      "default": "amqpvalid values: either amqp or amqp_web_socketsimportance: low"
    },
    {
      "name": "azure.eventhubs.offset.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 235,
      "display_name": "azure.eventhubs.offset.type",
      "documentation": "Offset type to use to keep track of events. Azure Event Hubs provides the offsets: OFFSET, Event Hubs offset of the event; SEQ_NUM, sequence number of the event.Type: stringDefault: OFFSETValid Values: either OFFSET or SEQ_NUMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 235
      },
      "default": "offsetvalid values: either offset or seq_numimportance: medium"
    },
    {
      "name": "azure.eventhubs.domain",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 236,
      "display_name": "azure.eventhubs.domain",
      "documentation": "Specifies the domain of the Event Hub to establish a connection.Type: stringDefault:servicebus.windows.netValid Values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 236
      },
      "default": "servicebus.windows.netvalid values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 237,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 237
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 238,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 238
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 239,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 239
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 240,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 240
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 241,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 241
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 242,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 242
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connector",
      "order_in_group": 243,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 243
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "azure.eventhubs.sas.keyname",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 244,
      "display_name": "azure.eventhubs.sas.keyname",
      "documentation": "Shared access policy name to the corresponding shared access policy rule for the namespace or entity.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 244
      }
    },
    {
      "name": "azure.eventhubs.sas.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 245,
      "display_name": "azure.eventhubs.sas.key",
      "documentation": "Shared Access key to the corresponding shared access policy rule of the namespace or entity.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 245
      }
    },
    {
      "name": "azure.eventhubs.namespace",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 246,
      "display_name": "azure.eventhubs.namespace",
      "documentation": "Namespace name of the event hub to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 246
      }
    },
    {
      "name": "azure.eventhubs.hub.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 247,
      "display_name": "azure.eventhubs.hub.name",
      "documentation": "The event hub to read from.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 247
      }
    },
    {
      "name": "azure.eventhubs.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 248,
      "display_name": "azure.eventhubs.max.retries",
      "documentation": "Maximum number of retry attempts for failed operations. Zero indicates no retries.Type: intDefault: 5Valid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 248
      },
      "default": "5valid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "azure.eventhubs.initial.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 249,
      "display_name": "azure.eventhubs.initial.backoff.ms",
      "documentation": "The amount of time to wait (backoff) before the first retry.Type: intDefault: 3000 msValid Values: [0,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 249
      },
      "default": "3000 msvalid values: [0,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "kafka.topic",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connector",
      "order_in_group": 250,
      "display_name": "kafka.topic",
      "documentation": "The Kafka topic to write the data to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 250
      }
    },
    {
      "name": "max.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connector",
      "order_in_group": 251,
      "display_name": "max.events",
      "documentation": "Maximum number of events to read per event hub partition per poll.Type: intDefault: 50Valid Values: [1,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 251
      },
      "default": "50valid values: [1,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topic.creation.groups",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 252,
      "display_name": "topic.creation.groups",
      "documentation": "A list of group aliases that are used to define per-group topic configurations for matching topics. Adefaultgroup always exists and matches all topics.Type: List of String typesDefault: emptyPossible Values: The values of this property refer to any additional groups. Adefaultgroup is always defined for topic configurations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 252
      },
      "default": "emptypossible values: the values of this property refer to any additional groups. adefaultgroup is always defined for topic configurations."
    },
    {
      "name": "topic.creation.$alias.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 253,
      "display_name": "topic.creation.$alias.replication.factor",
      "documentation": "The replication factor for new topics created by the connector. This value must not be larger than the number of brokers in the Kafka cluster. If this value is larger than the number of Kafka brokers, an error occurs when the connector attempts to create a topic. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 253
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 254,
      "display_name": "topic.creation.$alias.partitions",
      "documentation": "The number of topic partitions created by this connector. This is arequired propertyfor thedefaultgroup. This property is optional for any other group defined intopic.creation.groups. Other groups use the Kafka broker default value.Type: intDefault: n/aPossible Values:>=1for a specific valid value or-1to use the Kafka broker\u00e2\u0080\u0099s default value.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 254
      },
      "default": "n/apossible values:>=1for a specific valid value or-1to use the kafka broker\u00e2\u0080\u0099s default value."
    },
    {
      "name": "topic.creation.$alias.include",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 255,
      "display_name": "topic.creation.$alias.include",
      "documentation": "A list of strings that represent regular expressions that match topic names. This list is used to include topics with matching values, and apply this group\u00e2\u0080\u0099s specific configuration to the matching topics.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 255
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.exclude",
      "type": "LIST",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 256,
      "display_name": "topic.creation.$alias.exclude",
      "documentation": "A list of strings representing regular expressions that match topic names. This list is used to exclude topics with matching values from getting the group\u00e2\u0080\u0099s specfic configuration.$aliasapplies to any group defined intopic.creation.groups. This property does not apply to thedefaultgroup. Note that exclusion rules override any inclusion rules for topics.Type: List of String typesDefault: emptyPossible Values: Comma-separated list of exact topic names or regular expressions.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 256
      },
      "default": "emptypossible values: comma-separated list of exact topic names or regular expressions."
    },
    {
      "name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "type": "PROPERTY",
      "required": false,
      "importance": "MEDIUM",
      "group": "Auto topic creation",
      "order_in_group": 257,
      "display_name": "topic.creation.$alias.${kafkaTopicSpecificConfigName}",
      "documentation": "Any of theChanging Broker Configurations Dynamicallyfor the version of the Kafka broker where the records will be written. The broker\u00e2\u0080\u0099s topic-level configuration value is used if the configuration is not specified for the rule.$aliasapplies to thedefaultgroup as well as any group defined intopic.creation.groups.Type: property valuesDefault: Kafka broker value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 257
      },
      "default": "kafka broker value"
    },
    {
      "name": "azure.eventhubs.partition.starting.position",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Azure Event Hubs",
      "order_in_group": 258,
      "display_name": "azure.eventhubs.partition.starting.position",
      "documentation": "Default position in the event hub to reset to if no offsets are stored.NoteThe Azure Event Hub Source connector usesx-opt-kafka-keykey-value pair\nas the partition key when the Azure SDKEventData.PartitionKeyproperty\nis null and when thex-opt-kafka-keyis present.Type: stringDefault: START_OF_STREAMValid Values: either END_OF_STREAM or START_OF_STREAMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 258
      },
      "default": "start_of_streamvalid values: either end_of_stream or start_of_streamimportance: medium"
    },
    {
      "name": "azure.eventhubs.partition.id.regex",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Azure Event Hubs",
      "order_in_group": 259,
      "display_name": "azure.eventhubs.partition.id.regex",
      "documentation": "Regex that matches the names of partitions in the event hub from which the connector polls data.Type: stringDefault: .*Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 259
      },
      "default": ".*importance: medium"
    },
    {
      "name": "azure.eventhubs.consumer.group",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Azure Event Hubs",
      "order_in_group": 260,
      "display_name": "azure.eventhubs.consumer.group",
      "documentation": "Event Hubs consumer group to use to consume events.Type: stringDefault: $DefaultImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 260
      },
      "default": "$defaultimportance: low"
    },
    {
      "name": "azure.eventhubs.transport.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Azure Event Hubs",
      "order_in_group": 261,
      "display_name": "azure.eventhubs.transport.type",
      "documentation": "Transport type for communicating to Event Hubs service. Event Hubs supports 2 types: AMQP, AMQP over TCP, which uses port 5671; AMQP_WEB_SOCKETS, AMQP over Web Sockets, which uses port 443.Type: stringDefault: AMQPValid Values: either AMQP or AMQP_WEB_SOCKETSImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 261
      },
      "default": "amqpvalid values: either amqp or amqp_web_socketsimportance: low"
    },
    {
      "name": "azure.eventhubs.offset.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Azure Event Hubs",
      "order_in_group": 262,
      "display_name": "azure.eventhubs.offset.type",
      "documentation": "Offset type to use to keep track of events. Azure Event Hubs provides the offsets: OFFSET, Event Hubs offset of the event; SEQ_NUM, sequence number of the event.Type: stringDefault: OFFSETValid Values: either OFFSET or SEQ_NUMImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 262
      },
      "default": "offsetvalid values: either offset or seq_numimportance: medium"
    },
    {
      "name": "azure.eventhubs.domain",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Azure Event Hubs",
      "order_in_group": 263,
      "display_name": "azure.eventhubs.domain",
      "documentation": "Specifies the domain of the Event Hub to establish a connection.Type: stringDefault:servicebus.windows.netValid Values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 263
      },
      "default": "servicebus.windows.netvalid values:servicebus.windows.net,servicebus.usgovcloudapi.net,servicebus.cloudapi.de,servicebus.chinacloudapi.cnimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 264,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 264
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 265,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 265
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 266,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 266
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 267,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 267
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 268,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 268
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 269,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 269
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Confluent Platform license",
      "order_in_group": 270,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 270
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 271,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 271
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 272,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 272
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 273,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 273
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 274,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 274
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 275,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 275
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 276,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 276
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Confluent license properties",
      "order_in_group": 277,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 277
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "Search by configuration property name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "Search by configuration property name",
      "documentation": "Enter a string to search and filter by configuration property name.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "name",
      "documentation": "Globally unique name to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "connector.class",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 3,
      "display_name": "connector.class",
      "documentation": "Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \u00e2\u0080\u009cFileStreamSink\u00e2\u0080\u009d or \u00e2\u0080\u009cFileStreamSinkConnector\u00e2\u0080\u009d to make the configuration a bit shorter",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "tasks.max",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 4,
      "display_name": "tasks.max",
      "documentation": "Maximum number of tasks to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "tasks.max.enforce",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 5,
      "display_name": "tasks.max.enforce",
      "documentation": "(Deprecated) Whether to enforce that the tasks.max property is respected by the connector. By default, connectors that generate too many tasks will fail, and existing sets of tasks that exceed the tasks.max property will also be failed. If this property is set to false, then connectors will be allowed to generate more than the maximum number of tasks, and existing sets of tasks that exceed the tasks.max property will be allowed to run. This property is deprecated and will be removed in an upcoming major release.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "key.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 6,
      "display_name": "key.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "value.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 7,
      "display_name": "value.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "header.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 8,
      "display_name": "header.converter",
      "documentation": "HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      }
    },
    {
      "name": "config.action.reload",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 9,
      "display_name": "config.action.reload",
      "documentation": "The action that Connect should take on the connector when changes in external configuration providers result in a change in the connector\u00e2\u0080\u0099s configuration properties. A value of \u00e2\u0080\u0098none\u00e2\u0080\u0099 indicates that Connect will do nothing. A value of \u00e2\u0080\u0098restart\u00e2\u0080\u0099 indicates that Connect should restart/reload the connector with the updated configuration properties.The restart may actually be scheduled in the future if the external configuration provider indicates that a configuration value will expire in the future.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      }
    },
    {
      "name": "transforms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 10,
      "display_name": "transforms",
      "documentation": "Aliases for the transformations to be applied to records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      }
    },
    {
      "name": "predicates",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 11,
      "display_name": "predicates",
      "documentation": "Aliases for the predicates used by transformations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "errors.retry.timeout",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 12,
      "display_name": "errors.retry.timeout",
      "documentation": "The maximum duration in milliseconds that a failed operation will be reattempted. The default is 0, which means no retries will be attempted. Use -1 for infinite retries.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "errors.retry.delay.max.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 13,
      "display_name": "errors.retry.delay.max.ms",
      "documentation": "The maximum duration in milliseconds between consecutive retry attempts. Jitter will be added to the delay once this limit is reached to prevent thundering herd issues.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      }
    },
    {
      "name": "errors.tolerance",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 14,
      "display_name": "errors.tolerance",
      "documentation": "Behavior for tolerating errors during connector operation. \u00e2\u0080\u0098none\u00e2\u0080\u0099 is the default value and signals that any error will result in an immediate connector task failure; \u00e2\u0080\u0098all\u00e2\u0080\u0099 changes the behavior to skip over problematic records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "errors.log.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 15,
      "display_name": "errors.log.enable",
      "documentation": "If true, write each error and the details of the failed operation and problematic record to the Connect application log. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, so that only errors that are not tolerated are reported.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      }
    },
    {
      "name": "errors.log.include.messages",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 16,
      "display_name": "errors.log.include.messages",
      "documentation": "Whether to include in the log the Connect record that resulted in a failure. For sink records, the topic, partition, offset, and timestamp will be logged. For source records, the key and value (and their schemas), all headers, and the timestamp, Kafka topic, Kafka partition, source partition, and source offset will be logged. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, which will prevent record keys, values, and headers from being written to log files.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "exactly.once.support",
      "type": "STRING",
      "required": true,
      "importance": "HIGH",
      "group": "Common",
      "order_in_group": 18,
      "display_name": "exactly.once.support",
      "documentation": "Permitted values are requested, required. If set to \u00e2\u0080\u009crequired\u00e2\u0080\u009d, forces a preflight check for the connector to ensure that it can provide exactly-once semantics with the given configuration. Some connectors may be capable of providing exactly-once semantics but not signal to Connect that they support this; in that case, documentation for the connector should be consulted carefully before creating it, and the value for this property should be set to \u00e2\u0080\u009crequested\u00e2\u0080\u009d. Additionally, if the value is set to \u00e2\u0080\u009crequired\u00e2\u0080\u009d but the worker that performs preflight validation does not have exactly-once support enabled for source connectors, requests to create or validate the connector will fail.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      }
    },
    {
      "name": "transaction.boundary",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 19,
      "display_name": "transaction.boundary",
      "documentation": "Permitted values are: poll, interval, connector. If set to \u00e2\u0080\u0098poll\u00e2\u0080\u0099, a new producer transaction will be started and committed for every batch of records that each task from this connector provides to Connect. If set to \u00e2\u0080\u0098connector\u00e2\u0080\u0099, relies on connector-defined transaction boundaries; note that not all connectors are capable of defining their own transaction boundaries, and in that case, attempts to instantiate a connector with this value will fail. Finally, if set to \u00e2\u0080\u0098interval\u00e2\u0080\u0099, commits transactions only after a user-defined time interval has passed.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      }
    },
    {
      "name": "transaction.boundary.interval.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 20,
      "display_name": "transaction.boundary.interval.ms",
      "documentation": "If \u00e2\u0080\u0098transaction.boundary\u00e2\u0080\u0099 is set to \u00e2\u0080\u0098interval\u00e2\u0080\u0099, determines the interval for producer transaction commits by connector tasks. If unset, defaults to the value of the worker-level \u00e2\u0080\u0098offset.flush.interval.ms\u00e2\u0080\u0099 property. It has no effect if a different transaction.boundary is specified.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      }
    },
    {
      "name": "offsets.storage.topic",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 21,
      "display_name": "offsets.storage.topic",
      "documentation": "The name of a separate offsets topic to use for this connector. If empty or not specified, the worker\u00e2\u0080\u0099s global offsets topic name will be used. If specified, the offsets topic will be created if it does not already exist on the Kafka cluster targeted by this connector (which may be different from the one used for the worker\u00e2\u0080\u0099s global offsets topic if the bootstrap.servers property of the connector\u00e2\u0080\u0099s producer has been overridden from the worker\u00e2\u0080\u0099s). Only applicable in distributed mode; in standalone mode, setting this property will have no effect.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      }
    }
  ]
}