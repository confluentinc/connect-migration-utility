{
  "template_id": "HttpSourceConnector",
  "connector_type": "SOURCE",
  "connector.class": "io.confluent.connect.http.HttpSourceConnector",
  "name": "{{.logicalClusterId}}",
  "imports": [],
  "group_order": [
    "Connection",
    "Retries",
    "Authentication configuration",
    "Proxy configuration",
    "SSL configuration",
    "CSFLE configuration",
    "License configuration"
  ],
  "config_defs": [
    {
      "name": "url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 1,
      "display_name": "url",
      "documentation": "The service URL which can be templated with offset information. For example:http://example.com/api/v1/${entityName}/${offset}where${offset}will\nbe substituted with the offset generated by the previous request\u00e2\u0080\u0099s response\n(or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offset), and${entityName}will be substituted with values from the configurationentity.names.Type: stringValid Values: URI with one of these schemes:httporhttpsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 1
      }
    },
    {
      "name": "entity.names",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 2,
      "display_name": "entity.names",
      "documentation": "A list of entities that should be polled. Entities are distributed among the\nconnector tasks. Values from this list will replace the template variable${entityName}in the configurations:topic.name.pattern,url,http.request.parameters, andhttp.request.body. You do not need to set\nthis property if none of the aforementioned configuration properties contain\nthe template variable${entityName}.Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "http.request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 3,
      "display_name": "http.request.method",
      "documentation": "The HTTP request method.Type: stringDefault:GETValid Values:GETandPOSTImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      },
      "default": "getvalid values:getandpostimportance: high"
    },
    {
      "name": "http.request.headers.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 4,
      "display_name": "http.request.headers.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationHTTP_REQUEST_HEADERS.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      },
      "default": "|importance: low"
    },
    {
      "name": "http.request.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 5,
      "display_name": "http.request.headers",
      "documentation": "HTTP headers to be included in each request. Header names and values should be\nseparated by:. Distinct headers should be separated by the configuration\nvalue forHTTP_REQUEST_HEADERS_SEPARATOR(defaults toHTTP_REQUEST_HEADERS_SEPARATOR_DEFAULT). For example:From:abcxyz@confluent.io|Content-Length:348Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.parameters.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 6,
      "display_name": "http.request.parameters.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationhttp.request.parameters.Type: stringDefault:&Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      },
      "default": "&importance: medium"
    },
    {
      "name": "http.request.parameters",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 7,
      "display_name": "http.request.parameters",
      "documentation": "HTTP parameters to be added to the request. Parameter names and values should\nbe separated by=. Distinct parameters should be separated by the\nconfiguration value forhttp.request.parameters.separator(defaults to&). Parameter values can be templated with offset and entity information,\nfor example:entity=${entityName}&search_after=${offset}, where${offset}will be substituted with the offset generated from the previous\nrequest\u00e2\u0080\u0099s response or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offsetand${entityName}will be substituted with values from the configurationentity.names. The parameters are only set ifhttp.request.method``issetto``GET.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.body",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 8,
      "display_name": "http.request.body",
      "documentation": "The payload to be sent along with the HTTP request. The value can be templated\nwith offset information\u00e2\u0080\u0093for example,{\"search_after\":\"${offset}\",\"entity\":\"${entityName}\"where${offset}will be substituted with the\noffset generated by the previous request\u00e2\u0080\u0099s response (or if it\u00e2\u0080\u0099s the first\nrequest, fromhttp.initial.offset), and${entityName}will be\nsubstituted with values from the configentity.names. The body is only set ifhttp.request.methodis set toPOST.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumNoteWhen you set this property with the Confluent CLI or API, ensure that the value forhttp.request.bodyis properly escaped.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumnotewhen you set this property with the confluent cli or api, ensure that the value forhttp.request.bodyis properly escaped."
    },
    {
      "name": "http.initial.offset",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 9,
      "display_name": "http.initial.offset",
      "documentation": "The initial offset to be used to generate the first request. This needs to be\nset if either one or more of the following configurations:url,http.request.parameters, orhttp.request.bodycontain the template\nvariable${offset}:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 10,
      "display_name": "http.offset.mode",
      "documentation": "This property indicates how offsets are computed and how requests are\ngenerated. If set toSIMPLE_INCREMENTING, the${offset}used to\ngenerate requests is simply the previous offset (orhttp.initial.offset)\nincremented by the number of records in the response. In this mode,\nhttp.initial.offset needs to be set to an integer value, andhttp.offset.json.pointerdoesnot need to be configured. If set toCHAINING, the configurationhttp.offset.json.pointerneeds to be set,\nand the offset for a record is set to the value at the JSON pointer in the\nrecord data.Type: stringDefault:SIMPLE_INCREMENTINGValid values: [SIMPLE_INCREMENTING,CHAINING,CURSOR_PAGINATION]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      },
      "default": "simple_incrementingvalid values: [simple_incrementing,chaining,cursor_pagination]importance: high",
      "valid_values": [
        "simple_incrementing",
        "chaining",
        "cursor_pagination"
      ]
    },
    {
      "name": "http.response.data.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 11,
      "display_name": "http.response.data.json.pointer",
      "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data\nthat should be written to Kafka as records. The entity can be an array\n(multiple records ) or an object (single record).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 12,
      "display_name": "http.offset.json.pointer",
      "documentation": "The JSON Pointer to the value in each record that corresponds to the offset\nfor that record. For example, for a response like the following:{\"users\":[{\"id\":11,\"url\":\"http://{subdomain}.zendesk.com/api/v2/users/11.json\",\"name\":\"Agent Extraordinaire\",\"...\"\"user_fields\":{\"field1\":0,\"field2\":\"value2\"}}]\"metadata_1\":\"val\",\"metadata_2\":\"val\",\"time\":1383685952}This config can be set to/id. Note note that the pointer needs to be\nvalid for each record, not the top level JSON response. The offset for the\ncorresponding SourceRecord will be set to the value at the specified JSON\nPointer (cannot be an object or an array); also this value will be available\nto the subsequent request as${offset}.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "use.http.offset.json.pointer.as.string",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 13,
      "display_name": "use.http.offset.json.pointer.as.string",
      "documentation": "By default, the value of this property will be converted to a string before being used as an offset.\nSet this tofalseif this conversion is not needed.Type: booleanDefault:trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "http.next.page.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 14,
      "display_name": "http.next.page.json.pointer",
      "documentation": "The JSON pointer to the value in the response which corresponds to the next\npage reference (either a page token, a full URL or a URL fragment). This will\nbe stored as the offset and will be available to the subsequent request with\nthe template variable${offset}. This config should only be set ifhttp.offset.modeis set toCURSOR_PAGINATION.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.request.sensitive.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 15,
      "display_name": "http.request.sensitive.headers",
      "documentation": "Sensitive HTTP headers (for example, credentials) to be included in all\nrequests. Individual headers should be separated by theheader.separator.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 16,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 17,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 18,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. A comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with a start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to400.400-500includes codes from400to500, including500. Multiple ranges and single codes can be specified\ntogether to achieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUTand\nall5xxerror codes. Note that some status codes will always be retried, \u00e2\u0080\u009d\nsuch as unauthorized, timeouts and too many requests.Type: stringDefault:400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      },
      "default": "400-importance: medium"
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 19,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait after receiving a response to a request\nbefore sending a subsequent request.Type: longDefault:400-Valid values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      },
      "default": "400-valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 20,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,BEARER,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 21,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 22,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 22
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 23,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 23
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 24,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 24
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 25,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 25
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 26,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 26
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 27,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 27
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 28,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 28
      },
      "default": "anyimportance: low"
    },
    {
      "name": "bearer.token",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 29,
      "display_name": "bearer.token",
      "documentation": "The bearer authentication token to be used with an endpoint requiring bearer token-based authentication.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 29
      }
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 30,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 30
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 31,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 31
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 32,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 32
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 33,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 33
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 34,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 34
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 35,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 35
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 36,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 36
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 37,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 37
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 38,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 38
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 39,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 39
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 40,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 40
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 41,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 41
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 42,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 42
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 43,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 43
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 44,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 44
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 45,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 45
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 46,
      "display_name": "confluent.license",
      "documentation": "Confluent will issue a license key to each subscriber. The license key will be\na short snippet of text that you can copy and paste. Without the license key,\nyou can use the connector for a 30-day trial period. If you are a subscriber,contact Confluent Supportfor more\ninformation.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 46
      }
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 47,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the form<code>host1:port1,host2:port2,...</code>. Since these servers are just used\nfor the initial connection to discover the full cluster membership (which may\nchange dynamically), this list need not contain the full set of servers (you\nmay want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 47
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 48,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing\ninformation.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 48
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 49,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 49
      },
      "default": "3importance: low"
    },
    {
      "name": "url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 50,
      "display_name": "url",
      "documentation": "The service URL which can be templated with offset information. For example:http://example.com/api/v1/${entityName}/${offset}where${offset}will\nbe substituted with the offset generated by the previous request\u00e2\u0080\u0099s response\n(or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offset), and${entityName}will be substituted with values from the configurationentity.names.Type: stringValid Values: URI with one of these schemes:httporhttpsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 50
      }
    },
    {
      "name": "entity.names",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 51,
      "display_name": "entity.names",
      "documentation": "A list of entities that should be polled. Entities are distributed among the\nconnector tasks. Values from this list will replace the template variable${entityName}in the configurations:topic.name.pattern,url,http.request.parameters, andhttp.request.body. You do not need to set\nthis property if none of the aforementioned configuration properties contain\nthe template variable${entityName}.Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 51
      }
    },
    {
      "name": "http.request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 52,
      "display_name": "http.request.method",
      "documentation": "The HTTP request method.Type: stringDefault:GETValid Values:GETandPOSTImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 52
      },
      "default": "getvalid values:getandpostimportance: high"
    },
    {
      "name": "http.request.headers.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 53,
      "display_name": "http.request.headers.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationHTTP_REQUEST_HEADERS.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 53
      },
      "default": "|importance: low"
    },
    {
      "name": "http.request.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 54,
      "display_name": "http.request.headers",
      "documentation": "HTTP headers to be included in each request. Header names and values should be\nseparated by:. Distinct headers should be separated by the configuration\nvalue forHTTP_REQUEST_HEADERS_SEPARATOR(defaults toHTTP_REQUEST_HEADERS_SEPARATOR_DEFAULT). For example:From:abcxyz@confluent.io|Content-Length:348Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 54
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.parameters.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 55,
      "display_name": "http.request.parameters.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationhttp.request.parameters.Type: stringDefault:&Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 55
      },
      "default": "&importance: medium"
    },
    {
      "name": "http.request.parameters",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 56,
      "display_name": "http.request.parameters",
      "documentation": "HTTP parameters to be added to the request. Parameter names and values should\nbe separated by=. Distinct parameters should be separated by the\nconfiguration value forhttp.request.parameters.separator(defaults to&). Parameter values can be templated with offset and entity information,\nfor example:entity=${entityName}&search_after=${offset}, where${offset}will be substituted with the offset generated from the previous\nrequest\u00e2\u0080\u0099s response or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offsetand${entityName}will be substituted with values from the configurationentity.names. The parameters are only set ifhttp.request.method``issetto``GET.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 56
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.body",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 57,
      "display_name": "http.request.body",
      "documentation": "The payload to be sent along with the HTTP request. The value can be templated\nwith offset information\u00e2\u0080\u0093for example,{\"search_after\":\"${offset}\",\"entity\":\"${entityName}\"where${offset}will be substituted with the\noffset generated by the previous request\u00e2\u0080\u0099s response (or if it\u00e2\u0080\u0099s the first\nrequest, fromhttp.initial.offset), and${entityName}will be\nsubstituted with values from the configentity.names. The body is only set ifhttp.request.methodis set toPOST.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumNoteWhen you set this property with the Confluent CLI or API, ensure that the value forhttp.request.bodyis properly escaped.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 57
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumnotewhen you set this property with the confluent cli or api, ensure that the value forhttp.request.bodyis properly escaped."
    },
    {
      "name": "http.initial.offset",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 58,
      "display_name": "http.initial.offset",
      "documentation": "The initial offset to be used to generate the first request. This needs to be\nset if either one or more of the following configurations:url,http.request.parameters, orhttp.request.bodycontain the template\nvariable${offset}:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 58
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 59,
      "display_name": "http.offset.mode",
      "documentation": "This property indicates how offsets are computed and how requests are\ngenerated. If set toSIMPLE_INCREMENTING, the${offset}used to\ngenerate requests is simply the previous offset (orhttp.initial.offset)\nincremented by the number of records in the response. In this mode,\nhttp.initial.offset needs to be set to an integer value, andhttp.offset.json.pointerdoesnot need to be configured. If set toCHAINING, the configurationhttp.offset.json.pointerneeds to be set,\nand the offset for a record is set to the value at the JSON pointer in the\nrecord data.Type: stringDefault:SIMPLE_INCREMENTINGValid values: [SIMPLE_INCREMENTING,CHAINING,CURSOR_PAGINATION]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 59
      },
      "default": "simple_incrementingvalid values: [simple_incrementing,chaining,cursor_pagination]importance: high",
      "valid_values": [
        "simple_incrementing",
        "chaining",
        "cursor_pagination"
      ]
    },
    {
      "name": "http.response.data.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 60,
      "display_name": "http.response.data.json.pointer",
      "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data\nthat should be written to Kafka as records. The entity can be an array\n(multiple records ) or an object (single record).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 60
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 61,
      "display_name": "http.offset.json.pointer",
      "documentation": "The JSON Pointer to the value in each record that corresponds to the offset\nfor that record. For example, for a response like the following:{\"users\":[{\"id\":11,\"url\":\"http://{subdomain}.zendesk.com/api/v2/users/11.json\",\"name\":\"Agent Extraordinaire\",\"...\"\"user_fields\":{\"field1\":0,\"field2\":\"value2\"}}]\"metadata_1\":\"val\",\"metadata_2\":\"val\",\"time\":1383685952}This config can be set to/id. Note note that the pointer needs to be\nvalid for each record, not the top level JSON response. The offset for the\ncorresponding SourceRecord will be set to the value at the specified JSON\nPointer (cannot be an object or an array); also this value will be available\nto the subsequent request as${offset}.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 61
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "use.http.offset.json.pointer.as.string",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 62,
      "display_name": "use.http.offset.json.pointer.as.string",
      "documentation": "By default, the value of this property will be converted to a string before being used as an offset.\nSet this tofalseif this conversion is not needed.Type: booleanDefault:trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 62
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "http.next.page.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 63,
      "display_name": "http.next.page.json.pointer",
      "documentation": "The JSON pointer to the value in the response which corresponds to the next\npage reference (either a page token, a full URL or a URL fragment). This will\nbe stored as the offset and will be available to the subsequent request with\nthe template variable${offset}. This config should only be set ifhttp.offset.modeis set toCURSOR_PAGINATION.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 63
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.request.sensitive.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 64,
      "display_name": "http.request.sensitive.headers",
      "documentation": "Sensitive HTTP headers (for example, credentials) to be included in all\nrequests. Individual headers should be separated by theheader.separator.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 64
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 65,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 65
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 66,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 66
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 67,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. A comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with a start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to400.400-500includes codes from400to500, including500. Multiple ranges and single codes can be specified\ntogether to achieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUTand\nall5xxerror codes. Note that some status codes will always be retried, \u00e2\u0080\u009d\nsuch as unauthorized, timeouts and too many requests.Type: stringDefault:400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 67
      },
      "default": "400-importance: medium"
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 68,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait after receiving a response to a request\nbefore sending a subsequent request.Type: longDefault:400-Valid values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 68
      },
      "default": "400-valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 69,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,BEARER,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 69
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 70,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 70
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 71,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 71
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 72,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 72
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 73,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 73
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 74,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 74
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 75,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 75
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 76,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 76
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 77,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 77
      },
      "default": "anyimportance: low"
    },
    {
      "name": "bearer.token",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 78,
      "display_name": "bearer.token",
      "documentation": "The bearer authentication token to be used with an endpoint requiring bearer token-based authentication.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 78
      }
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 79,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 79
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 80,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 80
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 81,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 81
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 82,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 82
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 83,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 83
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 84,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 84
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 85,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 85
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 86,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 86
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 87,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 87
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 88,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 88
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 89,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 89
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 90,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 90
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 91,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 91
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 92,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 92
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 93,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 93
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 94,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 94
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 95,
      "display_name": "confluent.license",
      "documentation": "Confluent will issue a license key to each subscriber. The license key will be\na short snippet of text that you can copy and paste. Without the license key,\nyou can use the connector for a 30-day trial period. If you are a subscriber,contact Confluent Supportfor more\ninformation.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 95
      }
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 96,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the form<code>host1:port1,host2:port2,...</code>. Since these servers are just used\nfor the initial connection to discover the full cluster membership (which may\nchange dynamically), this list need not contain the full set of servers (you\nmay want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 96
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 97,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing\ninformation.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 97
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 98,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 98
      },
      "default": "3importance: low"
    },
    {
      "name": "url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 99,
      "display_name": "url",
      "documentation": "The service URL which can be templated with offset information. For example:http://example.com/api/v1/${entityName}/${offset}where${offset}will\nbe substituted with the offset generated by the previous request\u00e2\u0080\u0099s response\n(or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offset), and${entityName}will be substituted with values from the configurationentity.names.Type: stringValid Values: URI with one of these schemes:httporhttpsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 99
      }
    },
    {
      "name": "entity.names",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 100,
      "display_name": "entity.names",
      "documentation": "A list of entities that should be polled. Entities are distributed among the\nconnector tasks. Values from this list will replace the template variable${entityName}in the configurations:topic.name.pattern,url,http.request.parameters, andhttp.request.body. You do not need to set\nthis property if none of the aforementioned configuration properties contain\nthe template variable${entityName}.Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 100
      }
    },
    {
      "name": "http.request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 101,
      "display_name": "http.request.method",
      "documentation": "The HTTP request method.Type: stringDefault:GETValid Values:GETandPOSTImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 101
      },
      "default": "getvalid values:getandpostimportance: high"
    },
    {
      "name": "http.request.headers.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 102,
      "display_name": "http.request.headers.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationHTTP_REQUEST_HEADERS.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 102
      },
      "default": "|importance: low"
    },
    {
      "name": "http.request.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 103,
      "display_name": "http.request.headers",
      "documentation": "HTTP headers to be included in each request. Header names and values should be\nseparated by:. Distinct headers should be separated by the configuration\nvalue forHTTP_REQUEST_HEADERS_SEPARATOR(defaults toHTTP_REQUEST_HEADERS_SEPARATOR_DEFAULT). For example:From:abcxyz@confluent.io|Content-Length:348Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 103
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.parameters.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 104,
      "display_name": "http.request.parameters.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationhttp.request.parameters.Type: stringDefault:&Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 104
      },
      "default": "&importance: medium"
    },
    {
      "name": "http.request.parameters",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 105,
      "display_name": "http.request.parameters",
      "documentation": "HTTP parameters to be added to the request. Parameter names and values should\nbe separated by=. Distinct parameters should be separated by the\nconfiguration value forhttp.request.parameters.separator(defaults to&). Parameter values can be templated with offset and entity information,\nfor example:entity=${entityName}&search_after=${offset}, where${offset}will be substituted with the offset generated from the previous\nrequest\u00e2\u0080\u0099s response or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offsetand${entityName}will be substituted with values from the configurationentity.names. The parameters are only set ifhttp.request.method``issetto``GET.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 105
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.body",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 106,
      "display_name": "http.request.body",
      "documentation": "The payload to be sent along with the HTTP request. The value can be templated\nwith offset information\u00e2\u0080\u0093for example,{\"search_after\":\"${offset}\",\"entity\":\"${entityName}\"where${offset}will be substituted with the\noffset generated by the previous request\u00e2\u0080\u0099s response (or if it\u00e2\u0080\u0099s the first\nrequest, fromhttp.initial.offset), and${entityName}will be\nsubstituted with values from the configentity.names. The body is only set ifhttp.request.methodis set toPOST.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumNoteWhen you set this property with the Confluent CLI or API, ensure that the value forhttp.request.bodyis properly escaped.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 106
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumnotewhen you set this property with the confluent cli or api, ensure that the value forhttp.request.bodyis properly escaped."
    },
    {
      "name": "http.initial.offset",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 107,
      "display_name": "http.initial.offset",
      "documentation": "The initial offset to be used to generate the first request. This needs to be\nset if either one or more of the following configurations:url,http.request.parameters, orhttp.request.bodycontain the template\nvariable${offset}:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 107
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 108,
      "display_name": "http.offset.mode",
      "documentation": "This property indicates how offsets are computed and how requests are\ngenerated. If set toSIMPLE_INCREMENTING, the${offset}used to\ngenerate requests is simply the previous offset (orhttp.initial.offset)\nincremented by the number of records in the response. In this mode,\nhttp.initial.offset needs to be set to an integer value, andhttp.offset.json.pointerdoesnot need to be configured. If set toCHAINING, the configurationhttp.offset.json.pointerneeds to be set,\nand the offset for a record is set to the value at the JSON pointer in the\nrecord data.Type: stringDefault:SIMPLE_INCREMENTINGValid values: [SIMPLE_INCREMENTING,CHAINING,CURSOR_PAGINATION]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 108
      },
      "default": "simple_incrementingvalid values: [simple_incrementing,chaining,cursor_pagination]importance: high",
      "valid_values": [
        "simple_incrementing",
        "chaining",
        "cursor_pagination"
      ]
    },
    {
      "name": "http.response.data.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 109,
      "display_name": "http.response.data.json.pointer",
      "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data\nthat should be written to Kafka as records. The entity can be an array\n(multiple records ) or an object (single record).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 109
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 110,
      "display_name": "http.offset.json.pointer",
      "documentation": "The JSON Pointer to the value in each record that corresponds to the offset\nfor that record. For example, for a response like the following:{\"users\":[{\"id\":11,\"url\":\"http://{subdomain}.zendesk.com/api/v2/users/11.json\",\"name\":\"Agent Extraordinaire\",\"...\"\"user_fields\":{\"field1\":0,\"field2\":\"value2\"}}]\"metadata_1\":\"val\",\"metadata_2\":\"val\",\"time\":1383685952}This config can be set to/id. Note note that the pointer needs to be\nvalid for each record, not the top level JSON response. The offset for the\ncorresponding SourceRecord will be set to the value at the specified JSON\nPointer (cannot be an object or an array); also this value will be available\nto the subsequent request as${offset}.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 110
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "use.http.offset.json.pointer.as.string",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 111,
      "display_name": "use.http.offset.json.pointer.as.string",
      "documentation": "By default, the value of this property will be converted to a string before being used as an offset.\nSet this tofalseif this conversion is not needed.Type: booleanDefault:trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 111
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "http.next.page.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 112,
      "display_name": "http.next.page.json.pointer",
      "documentation": "The JSON pointer to the value in the response which corresponds to the next\npage reference (either a page token, a full URL or a URL fragment). This will\nbe stored as the offset and will be available to the subsequent request with\nthe template variable${offset}. This config should only be set ifhttp.offset.modeis set toCURSOR_PAGINATION.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 112
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.request.sensitive.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 113,
      "display_name": "http.request.sensitive.headers",
      "documentation": "Sensitive HTTP headers (for example, credentials) to be included in all\nrequests. Individual headers should be separated by theheader.separator.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 113
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 114,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 114
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 115,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 115
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 116,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. A comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with a start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to400.400-500includes codes from400to500, including500. Multiple ranges and single codes can be specified\ntogether to achieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUTand\nall5xxerror codes. Note that some status codes will always be retried, \u00e2\u0080\u009d\nsuch as unauthorized, timeouts and too many requests.Type: stringDefault:400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 116
      },
      "default": "400-importance: medium"
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 117,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait after receiving a response to a request\nbefore sending a subsequent request.Type: longDefault:400-Valid values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 117
      },
      "default": "400-valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 118,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,BEARER,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 118
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 119,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 119
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 120,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 120
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 121,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 121
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 122,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 122
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 123,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 123
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 124,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 124
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 125,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 125
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 126,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 126
      },
      "default": "anyimportance: low"
    },
    {
      "name": "bearer.token",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 127,
      "display_name": "bearer.token",
      "documentation": "The bearer authentication token to be used with an endpoint requiring bearer token-based authentication.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 127
      }
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 128,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 128
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 129,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 129
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 130,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 130
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 131,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 131
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 132,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 132
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 133,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 133
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 134,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 134
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 135,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 135
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 136,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 136
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 137,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 137
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 138,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 138
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 139,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 139
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 140,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 140
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 141,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 141
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 142,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 142
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 143,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 143
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 144,
      "display_name": "confluent.license",
      "documentation": "Confluent will issue a license key to each subscriber. The license key will be\na short snippet of text that you can copy and paste. Without the license key,\nyou can use the connector for a 30-day trial period. If you are a subscriber,contact Confluent Supportfor more\ninformation.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 144
      }
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 145,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the form<code>host1:port1,host2:port2,...</code>. Since these servers are just used\nfor the initial connection to discover the full cluster membership (which may\nchange dynamically), this list need not contain the full set of servers (you\nmay want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 145
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 146,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing\ninformation.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 146
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 147,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 147
      },
      "default": "3importance: low"
    },
    {
      "name": "url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 148,
      "display_name": "url",
      "documentation": "The service URL which can be templated with offset information. For example:http://example.com/api/v1/${entityName}/${offset}where${offset}will\nbe substituted with the offset generated by the previous request\u00e2\u0080\u0099s response\n(or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offset), and${entityName}will be substituted with values from the configurationentity.names.Type: stringValid Values: URI with one of these schemes:httporhttpsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 148
      }
    },
    {
      "name": "entity.names",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 149,
      "display_name": "entity.names",
      "documentation": "A list of entities that should be polled. Entities are distributed among the\nconnector tasks. Values from this list will replace the template variable${entityName}in the configurations:topic.name.pattern,url,http.request.parameters, andhttp.request.body. You do not need to set\nthis property if none of the aforementioned configuration properties contain\nthe template variable${entityName}.Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 149
      }
    },
    {
      "name": "http.request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 150,
      "display_name": "http.request.method",
      "documentation": "The HTTP request method.Type: stringDefault:GETValid Values:GETandPOSTImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 150
      },
      "default": "getvalid values:getandpostimportance: high"
    },
    {
      "name": "http.request.headers.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 151,
      "display_name": "http.request.headers.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationHTTP_REQUEST_HEADERS.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 151
      },
      "default": "|importance: low"
    },
    {
      "name": "http.request.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 152,
      "display_name": "http.request.headers",
      "documentation": "HTTP headers to be included in each request. Header names and values should be\nseparated by:. Distinct headers should be separated by the configuration\nvalue forHTTP_REQUEST_HEADERS_SEPARATOR(defaults toHTTP_REQUEST_HEADERS_SEPARATOR_DEFAULT). For example:From:abcxyz@confluent.io|Content-Length:348Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 152
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.parameters.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 153,
      "display_name": "http.request.parameters.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationhttp.request.parameters.Type: stringDefault:&Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 153
      },
      "default": "&importance: medium"
    },
    {
      "name": "http.request.parameters",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 154,
      "display_name": "http.request.parameters",
      "documentation": "HTTP parameters to be added to the request. Parameter names and values should\nbe separated by=. Distinct parameters should be separated by the\nconfiguration value forhttp.request.parameters.separator(defaults to&). Parameter values can be templated with offset and entity information,\nfor example:entity=${entityName}&search_after=${offset}, where${offset}will be substituted with the offset generated from the previous\nrequest\u00e2\u0080\u0099s response or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offsetand${entityName}will be substituted with values from the configurationentity.names. The parameters are only set ifhttp.request.method``issetto``GET.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 154
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.body",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 155,
      "display_name": "http.request.body",
      "documentation": "The payload to be sent along with the HTTP request. The value can be templated\nwith offset information\u00e2\u0080\u0093for example,{\"search_after\":\"${offset}\",\"entity\":\"${entityName}\"where${offset}will be substituted with the\noffset generated by the previous request\u00e2\u0080\u0099s response (or if it\u00e2\u0080\u0099s the first\nrequest, fromhttp.initial.offset), and${entityName}will be\nsubstituted with values from the configentity.names. The body is only set ifhttp.request.methodis set toPOST.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumNoteWhen you set this property with the Confluent CLI or API, ensure that the value forhttp.request.bodyis properly escaped.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 155
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumnotewhen you set this property with the confluent cli or api, ensure that the value forhttp.request.bodyis properly escaped."
    },
    {
      "name": "http.initial.offset",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 156,
      "display_name": "http.initial.offset",
      "documentation": "The initial offset to be used to generate the first request. This needs to be\nset if either one or more of the following configurations:url,http.request.parameters, orhttp.request.bodycontain the template\nvariable${offset}:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 156
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 157,
      "display_name": "http.offset.mode",
      "documentation": "This property indicates how offsets are computed and how requests are\ngenerated. If set toSIMPLE_INCREMENTING, the${offset}used to\ngenerate requests is simply the previous offset (orhttp.initial.offset)\nincremented by the number of records in the response. In this mode,\nhttp.initial.offset needs to be set to an integer value, andhttp.offset.json.pointerdoesnot need to be configured. If set toCHAINING, the configurationhttp.offset.json.pointerneeds to be set,\nand the offset for a record is set to the value at the JSON pointer in the\nrecord data.Type: stringDefault:SIMPLE_INCREMENTINGValid values: [SIMPLE_INCREMENTING,CHAINING,CURSOR_PAGINATION]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 157
      },
      "default": "simple_incrementingvalid values: [simple_incrementing,chaining,cursor_pagination]importance: high",
      "valid_values": [
        "simple_incrementing",
        "chaining",
        "cursor_pagination"
      ]
    },
    {
      "name": "http.response.data.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 158,
      "display_name": "http.response.data.json.pointer",
      "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data\nthat should be written to Kafka as records. The entity can be an array\n(multiple records ) or an object (single record).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 158
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 159,
      "display_name": "http.offset.json.pointer",
      "documentation": "The JSON Pointer to the value in each record that corresponds to the offset\nfor that record. For example, for a response like the following:{\"users\":[{\"id\":11,\"url\":\"http://{subdomain}.zendesk.com/api/v2/users/11.json\",\"name\":\"Agent Extraordinaire\",\"...\"\"user_fields\":{\"field1\":0,\"field2\":\"value2\"}}]\"metadata_1\":\"val\",\"metadata_2\":\"val\",\"time\":1383685952}This config can be set to/id. Note note that the pointer needs to be\nvalid for each record, not the top level JSON response. The offset for the\ncorresponding SourceRecord will be set to the value at the specified JSON\nPointer (cannot be an object or an array); also this value will be available\nto the subsequent request as${offset}.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 159
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "use.http.offset.json.pointer.as.string",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 160,
      "display_name": "use.http.offset.json.pointer.as.string",
      "documentation": "By default, the value of this property will be converted to a string before being used as an offset.\nSet this tofalseif this conversion is not needed.Type: booleanDefault:trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 160
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "http.next.page.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 161,
      "display_name": "http.next.page.json.pointer",
      "documentation": "The JSON pointer to the value in the response which corresponds to the next\npage reference (either a page token, a full URL or a URL fragment). This will\nbe stored as the offset and will be available to the subsequent request with\nthe template variable${offset}. This config should only be set ifhttp.offset.modeis set toCURSOR_PAGINATION.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 161
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.request.sensitive.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 162,
      "display_name": "http.request.sensitive.headers",
      "documentation": "Sensitive HTTP headers (for example, credentials) to be included in all\nrequests. Individual headers should be separated by theheader.separator.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 162
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 163,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 163
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 164,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 164
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 165,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. A comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with a start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to400.400-500includes codes from400to500, including500. Multiple ranges and single codes can be specified\ntogether to achieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUTand\nall5xxerror codes. Note that some status codes will always be retried, \u00e2\u0080\u009d\nsuch as unauthorized, timeouts and too many requests.Type: stringDefault:400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 165
      },
      "default": "400-importance: medium"
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 166,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait after receiving a response to a request\nbefore sending a subsequent request.Type: longDefault:400-Valid values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 166
      },
      "default": "400-valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 167,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,BEARER,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 167
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 168,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 168
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 169,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 169
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 170,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 170
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 171,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 171
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 172,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 172
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 173,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 173
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 174,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 174
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 175,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 175
      },
      "default": "anyimportance: low"
    },
    {
      "name": "bearer.token",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 176,
      "display_name": "bearer.token",
      "documentation": "The bearer authentication token to be used with an endpoint requiring bearer token-based authentication.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 176
      }
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 177,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 177
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 178,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 178
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 179,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 179
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 180,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 180
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 181,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 181
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 182,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 182
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 183,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 183
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 184,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 184
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 185,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 185
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 186,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 186
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 187,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 187
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 188,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 188
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 189,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 189
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 190,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 190
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 191,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 191
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 192,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 192
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 193,
      "display_name": "confluent.license",
      "documentation": "Confluent will issue a license key to each subscriber. The license key will be\na short snippet of text that you can copy and paste. Without the license key,\nyou can use the connector for a 30-day trial period. If you are a subscriber,contact Confluent Supportfor more\ninformation.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 193
      }
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 194,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the form<code>host1:port1,host2:port2,...</code>. Since these servers are just used\nfor the initial connection to discover the full cluster membership (which may\nchange dynamically), this list need not contain the full set of servers (you\nmay want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 194
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 195,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing\ninformation.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 195
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 196,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 196
      },
      "default": "3importance: low"
    },
    {
      "name": "url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 197,
      "display_name": "url",
      "documentation": "The service URL which can be templated with offset information. For example:http://example.com/api/v1/${entityName}/${offset}where${offset}will\nbe substituted with the offset generated by the previous request\u00e2\u0080\u0099s response\n(or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offset), and${entityName}will be substituted with values from the configurationentity.names.Type: stringValid Values: URI with one of these schemes:httporhttpsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 197
      }
    },
    {
      "name": "entity.names",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 198,
      "display_name": "entity.names",
      "documentation": "A list of entities that should be polled. Entities are distributed among the\nconnector tasks. Values from this list will replace the template variable${entityName}in the configurations:topic.name.pattern,url,http.request.parameters, andhttp.request.body. You do not need to set\nthis property if none of the aforementioned configuration properties contain\nthe template variable${entityName}.Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 198
      }
    },
    {
      "name": "http.request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 199,
      "display_name": "http.request.method",
      "documentation": "The HTTP request method.Type: stringDefault:GETValid Values:GETandPOSTImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 199
      },
      "default": "getvalid values:getandpostimportance: high"
    },
    {
      "name": "http.request.headers.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 200,
      "display_name": "http.request.headers.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationHTTP_REQUEST_HEADERS.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 200
      },
      "default": "|importance: low"
    },
    {
      "name": "http.request.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 201,
      "display_name": "http.request.headers",
      "documentation": "HTTP headers to be included in each request. Header names and values should be\nseparated by:. Distinct headers should be separated by the configuration\nvalue forHTTP_REQUEST_HEADERS_SEPARATOR(defaults toHTTP_REQUEST_HEADERS_SEPARATOR_DEFAULT). For example:From:abcxyz@confluent.io|Content-Length:348Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 201
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.parameters.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 202,
      "display_name": "http.request.parameters.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationhttp.request.parameters.Type: stringDefault:&Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 202
      },
      "default": "&importance: medium"
    },
    {
      "name": "http.request.parameters",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 203,
      "display_name": "http.request.parameters",
      "documentation": "HTTP parameters to be added to the request. Parameter names and values should\nbe separated by=. Distinct parameters should be separated by the\nconfiguration value forhttp.request.parameters.separator(defaults to&). Parameter values can be templated with offset and entity information,\nfor example:entity=${entityName}&search_after=${offset}, where${offset}will be substituted with the offset generated from the previous\nrequest\u00e2\u0080\u0099s response or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offsetand${entityName}will be substituted with values from the configurationentity.names. The parameters are only set ifhttp.request.method``issetto``GET.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 203
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.body",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 204,
      "display_name": "http.request.body",
      "documentation": "The payload to be sent along with the HTTP request. The value can be templated\nwith offset information\u00e2\u0080\u0093for example,{\"search_after\":\"${offset}\",\"entity\":\"${entityName}\"where${offset}will be substituted with the\noffset generated by the previous request\u00e2\u0080\u0099s response (or if it\u00e2\u0080\u0099s the first\nrequest, fromhttp.initial.offset), and${entityName}will be\nsubstituted with values from the configentity.names. The body is only set ifhttp.request.methodis set toPOST.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumNoteWhen you set this property with the Confluent CLI or API, ensure that the value forhttp.request.bodyis properly escaped.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 204
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumnotewhen you set this property with the confluent cli or api, ensure that the value forhttp.request.bodyis properly escaped."
    },
    {
      "name": "http.initial.offset",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 205,
      "display_name": "http.initial.offset",
      "documentation": "The initial offset to be used to generate the first request. This needs to be\nset if either one or more of the following configurations:url,http.request.parameters, orhttp.request.bodycontain the template\nvariable${offset}:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 205
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 206,
      "display_name": "http.offset.mode",
      "documentation": "This property indicates how offsets are computed and how requests are\ngenerated. If set toSIMPLE_INCREMENTING, the${offset}used to\ngenerate requests is simply the previous offset (orhttp.initial.offset)\nincremented by the number of records in the response. In this mode,\nhttp.initial.offset needs to be set to an integer value, andhttp.offset.json.pointerdoesnot need to be configured. If set toCHAINING, the configurationhttp.offset.json.pointerneeds to be set,\nand the offset for a record is set to the value at the JSON pointer in the\nrecord data.Type: stringDefault:SIMPLE_INCREMENTINGValid values: [SIMPLE_INCREMENTING,CHAINING,CURSOR_PAGINATION]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 206
      },
      "default": "simple_incrementingvalid values: [simple_incrementing,chaining,cursor_pagination]importance: high",
      "valid_values": [
        "simple_incrementing",
        "chaining",
        "cursor_pagination"
      ]
    },
    {
      "name": "http.response.data.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 207,
      "display_name": "http.response.data.json.pointer",
      "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data\nthat should be written to Kafka as records. The entity can be an array\n(multiple records ) or an object (single record).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 207
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 208,
      "display_name": "http.offset.json.pointer",
      "documentation": "The JSON Pointer to the value in each record that corresponds to the offset\nfor that record. For example, for a response like the following:{\"users\":[{\"id\":11,\"url\":\"http://{subdomain}.zendesk.com/api/v2/users/11.json\",\"name\":\"Agent Extraordinaire\",\"...\"\"user_fields\":{\"field1\":0,\"field2\":\"value2\"}}]\"metadata_1\":\"val\",\"metadata_2\":\"val\",\"time\":1383685952}This config can be set to/id. Note note that the pointer needs to be\nvalid for each record, not the top level JSON response. The offset for the\ncorresponding SourceRecord will be set to the value at the specified JSON\nPointer (cannot be an object or an array); also this value will be available\nto the subsequent request as${offset}.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 208
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "use.http.offset.json.pointer.as.string",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 209,
      "display_name": "use.http.offset.json.pointer.as.string",
      "documentation": "By default, the value of this property will be converted to a string before being used as an offset.\nSet this tofalseif this conversion is not needed.Type: booleanDefault:trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 209
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "http.next.page.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 210,
      "display_name": "http.next.page.json.pointer",
      "documentation": "The JSON pointer to the value in the response which corresponds to the next\npage reference (either a page token, a full URL or a URL fragment). This will\nbe stored as the offset and will be available to the subsequent request with\nthe template variable${offset}. This config should only be set ifhttp.offset.modeis set toCURSOR_PAGINATION.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 210
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.request.sensitive.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 211,
      "display_name": "http.request.sensitive.headers",
      "documentation": "Sensitive HTTP headers (for example, credentials) to be included in all\nrequests. Individual headers should be separated by theheader.separator.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 211
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 212,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 212
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 213,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 213
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 214,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. A comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with a start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to400.400-500includes codes from400to500, including500. Multiple ranges and single codes can be specified\ntogether to achieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUTand\nall5xxerror codes. Note that some status codes will always be retried, \u00e2\u0080\u009d\nsuch as unauthorized, timeouts and too many requests.Type: stringDefault:400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 214
      },
      "default": "400-importance: medium"
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 215,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait after receiving a response to a request\nbefore sending a subsequent request.Type: longDefault:400-Valid values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 215
      },
      "default": "400-valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 216,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,BEARER,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 216
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 217,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 217
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 218,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 218
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 219,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 219
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 220,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 220
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 221,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 221
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 222,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 222
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 223,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 223
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 224,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 224
      },
      "default": "anyimportance: low"
    },
    {
      "name": "bearer.token",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 225,
      "display_name": "bearer.token",
      "documentation": "The bearer authentication token to be used with an endpoint requiring bearer token-based authentication.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 225
      }
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 226,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 226
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 227,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 227
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 228,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 228
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 229,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 229
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 230,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 230
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 231,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 231
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 232,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 232
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 233,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 233
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 234,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 234
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 235,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 235
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 236,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 236
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 237,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 237
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 238,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 238
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 239,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 239
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 240,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 240
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 241,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 241
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 242,
      "display_name": "confluent.license",
      "documentation": "Confluent will issue a license key to each subscriber. The license key will be\na short snippet of text that you can copy and paste. Without the license key,\nyou can use the connector for a 30-day trial period. If you are a subscriber,contact Confluent Supportfor more\ninformation.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 242
      }
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 243,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the form<code>host1:port1,host2:port2,...</code>. Since these servers are just used\nfor the initial connection to discover the full cluster membership (which may\nchange dynamically), this list need not contain the full set of servers (you\nmay want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 243
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 244,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing\ninformation.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 244
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 245,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 245
      },
      "default": "3importance: low"
    },
    {
      "name": "url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 246,
      "display_name": "url",
      "documentation": "The service URL which can be templated with offset information. For example:http://example.com/api/v1/${entityName}/${offset}where${offset}will\nbe substituted with the offset generated by the previous request\u00e2\u0080\u0099s response\n(or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offset), and${entityName}will be substituted with values from the configurationentity.names.Type: stringValid Values: URI with one of these schemes:httporhttpsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 246
      }
    },
    {
      "name": "entity.names",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 247,
      "display_name": "entity.names",
      "documentation": "A list of entities that should be polled. Entities are distributed among the\nconnector tasks. Values from this list will replace the template variable${entityName}in the configurations:topic.name.pattern,url,http.request.parameters, andhttp.request.body. You do not need to set\nthis property if none of the aforementioned configuration properties contain\nthe template variable${entityName}.Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 247
      }
    },
    {
      "name": "http.request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 248,
      "display_name": "http.request.method",
      "documentation": "The HTTP request method.Type: stringDefault:GETValid Values:GETandPOSTImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 248
      },
      "default": "getvalid values:getandpostimportance: high"
    },
    {
      "name": "http.request.headers.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 249,
      "display_name": "http.request.headers.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationHTTP_REQUEST_HEADERS.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 249
      },
      "default": "|importance: low"
    },
    {
      "name": "http.request.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 250,
      "display_name": "http.request.headers",
      "documentation": "HTTP headers to be included in each request. Header names and values should be\nseparated by:. Distinct headers should be separated by the configuration\nvalue forHTTP_REQUEST_HEADERS_SEPARATOR(defaults toHTTP_REQUEST_HEADERS_SEPARATOR_DEFAULT). For example:From:abcxyz@confluent.io|Content-Length:348Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 250
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.parameters.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 251,
      "display_name": "http.request.parameters.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationhttp.request.parameters.Type: stringDefault:&Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 251
      },
      "default": "&importance: medium"
    },
    {
      "name": "http.request.parameters",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 252,
      "display_name": "http.request.parameters",
      "documentation": "HTTP parameters to be added to the request. Parameter names and values should\nbe separated by=. Distinct parameters should be separated by the\nconfiguration value forhttp.request.parameters.separator(defaults to&). Parameter values can be templated with offset and entity information,\nfor example:entity=${entityName}&search_after=${offset}, where${offset}will be substituted with the offset generated from the previous\nrequest\u00e2\u0080\u0099s response or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offsetand${entityName}will be substituted with values from the configurationentity.names. The parameters are only set ifhttp.request.method``issetto``GET.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 252
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.body",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 253,
      "display_name": "http.request.body",
      "documentation": "The payload to be sent along with the HTTP request. The value can be templated\nwith offset information\u00e2\u0080\u0093for example,{\"search_after\":\"${offset}\",\"entity\":\"${entityName}\"where${offset}will be substituted with the\noffset generated by the previous request\u00e2\u0080\u0099s response (or if it\u00e2\u0080\u0099s the first\nrequest, fromhttp.initial.offset), and${entityName}will be\nsubstituted with values from the configentity.names. The body is only set ifhttp.request.methodis set toPOST.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumNoteWhen you set this property with the Confluent CLI or API, ensure that the value forhttp.request.bodyis properly escaped.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 253
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumnotewhen you set this property with the confluent cli or api, ensure that the value forhttp.request.bodyis properly escaped."
    },
    {
      "name": "http.initial.offset",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 254,
      "display_name": "http.initial.offset",
      "documentation": "The initial offset to be used to generate the first request. This needs to be\nset if either one or more of the following configurations:url,http.request.parameters, orhttp.request.bodycontain the template\nvariable${offset}:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 254
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 255,
      "display_name": "http.offset.mode",
      "documentation": "This property indicates how offsets are computed and how requests are\ngenerated. If set toSIMPLE_INCREMENTING, the${offset}used to\ngenerate requests is simply the previous offset (orhttp.initial.offset)\nincremented by the number of records in the response. In this mode,\nhttp.initial.offset needs to be set to an integer value, andhttp.offset.json.pointerdoesnot need to be configured. If set toCHAINING, the configurationhttp.offset.json.pointerneeds to be set,\nand the offset for a record is set to the value at the JSON pointer in the\nrecord data.Type: stringDefault:SIMPLE_INCREMENTINGValid values: [SIMPLE_INCREMENTING,CHAINING,CURSOR_PAGINATION]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 255
      },
      "default": "simple_incrementingvalid values: [simple_incrementing,chaining,cursor_pagination]importance: high",
      "valid_values": [
        "simple_incrementing",
        "chaining",
        "cursor_pagination"
      ]
    },
    {
      "name": "http.response.data.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 256,
      "display_name": "http.response.data.json.pointer",
      "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data\nthat should be written to Kafka as records. The entity can be an array\n(multiple records ) or an object (single record).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 256
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 257,
      "display_name": "http.offset.json.pointer",
      "documentation": "The JSON Pointer to the value in each record that corresponds to the offset\nfor that record. For example, for a response like the following:{\"users\":[{\"id\":11,\"url\":\"http://{subdomain}.zendesk.com/api/v2/users/11.json\",\"name\":\"Agent Extraordinaire\",\"...\"\"user_fields\":{\"field1\":0,\"field2\":\"value2\"}}]\"metadata_1\":\"val\",\"metadata_2\":\"val\",\"time\":1383685952}This config can be set to/id. Note note that the pointer needs to be\nvalid for each record, not the top level JSON response. The offset for the\ncorresponding SourceRecord will be set to the value at the specified JSON\nPointer (cannot be an object or an array); also this value will be available\nto the subsequent request as${offset}.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 257
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "use.http.offset.json.pointer.as.string",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 258,
      "display_name": "use.http.offset.json.pointer.as.string",
      "documentation": "By default, the value of this property will be converted to a string before being used as an offset.\nSet this tofalseif this conversion is not needed.Type: booleanDefault:trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 258
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "http.next.page.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 259,
      "display_name": "http.next.page.json.pointer",
      "documentation": "The JSON pointer to the value in the response which corresponds to the next\npage reference (either a page token, a full URL or a URL fragment). This will\nbe stored as the offset and will be available to the subsequent request with\nthe template variable${offset}. This config should only be set ifhttp.offset.modeis set toCURSOR_PAGINATION.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 259
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.request.sensitive.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 260,
      "display_name": "http.request.sensitive.headers",
      "documentation": "Sensitive HTTP headers (for example, credentials) to be included in all\nrequests. Individual headers should be separated by theheader.separator.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 260
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 261,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 261
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 262,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 262
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 263,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. A comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with a start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to400.400-500includes codes from400to500, including500. Multiple ranges and single codes can be specified\ntogether to achieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUTand\nall5xxerror codes. Note that some status codes will always be retried, \u00e2\u0080\u009d\nsuch as unauthorized, timeouts and too many requests.Type: stringDefault:400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 263
      },
      "default": "400-importance: medium"
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 264,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait after receiving a response to a request\nbefore sending a subsequent request.Type: longDefault:400-Valid values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 264
      },
      "default": "400-valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 265,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,BEARER,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 265
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 266,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 266
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 267,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 267
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 268,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 268
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 269,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 269
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 270,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 270
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 271,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 271
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 272,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 272
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 273,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 273
      },
      "default": "anyimportance: low"
    },
    {
      "name": "bearer.token",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 274,
      "display_name": "bearer.token",
      "documentation": "The bearer authentication token to be used with an endpoint requiring bearer token-based authentication.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 274
      }
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 275,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 275
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 276,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 276
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 277,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 277
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 278,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 278
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 279,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 279
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 280,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 280
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 281,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 281
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 282,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 282
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 283,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 283
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 284,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 284
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 285,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 285
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 286,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 286
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 287,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 287
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 288,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 288
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 289,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 289
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 290,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 290
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 291,
      "display_name": "confluent.license",
      "documentation": "Confluent will issue a license key to each subscriber. The license key will be\na short snippet of text that you can copy and paste. Without the license key,\nyou can use the connector for a 30-day trial period. If you are a subscriber,contact Confluent Supportfor more\ninformation.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 291
      }
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 292,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the form<code>host1:port1,host2:port2,...</code>. Since these servers are just used\nfor the initial connection to discover the full cluster membership (which may\nchange dynamically), this list need not contain the full set of servers (you\nmay want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 292
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 293,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing\ninformation.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 293
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 294,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 294
      },
      "default": "3importance: low"
    },
    {
      "name": "url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 295,
      "display_name": "url",
      "documentation": "The service URL which can be templated with offset information. For example:http://example.com/api/v1/${entityName}/${offset}where${offset}will\nbe substituted with the offset generated by the previous request\u00e2\u0080\u0099s response\n(or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offset), and${entityName}will be substituted with values from the configurationentity.names.Type: stringValid Values: URI with one of these schemes:httporhttpsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 295
      }
    },
    {
      "name": "entity.names",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 296,
      "display_name": "entity.names",
      "documentation": "A list of entities that should be polled. Entities are distributed among the\nconnector tasks. Values from this list will replace the template variable${entityName}in the configurations:topic.name.pattern,url,http.request.parameters, andhttp.request.body. You do not need to set\nthis property if none of the aforementioned configuration properties contain\nthe template variable${entityName}.Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 296
      }
    },
    {
      "name": "http.request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 297,
      "display_name": "http.request.method",
      "documentation": "The HTTP request method.Type: stringDefault:GETValid Values:GETandPOSTImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 297
      },
      "default": "getvalid values:getandpostimportance: high"
    },
    {
      "name": "http.request.headers.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 298,
      "display_name": "http.request.headers.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationHTTP_REQUEST_HEADERS.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 298
      },
      "default": "|importance: low"
    },
    {
      "name": "http.request.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 299,
      "display_name": "http.request.headers",
      "documentation": "HTTP headers to be included in each request. Header names and values should be\nseparated by:. Distinct headers should be separated by the configuration\nvalue forHTTP_REQUEST_HEADERS_SEPARATOR(defaults toHTTP_REQUEST_HEADERS_SEPARATOR_DEFAULT). For example:From:abcxyz@confluent.io|Content-Length:348Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 299
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.parameters.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 300,
      "display_name": "http.request.parameters.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationhttp.request.parameters.Type: stringDefault:&Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 300
      },
      "default": "&importance: medium"
    },
    {
      "name": "http.request.parameters",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 301,
      "display_name": "http.request.parameters",
      "documentation": "HTTP parameters to be added to the request. Parameter names and values should\nbe separated by=. Distinct parameters should be separated by the\nconfiguration value forhttp.request.parameters.separator(defaults to&). Parameter values can be templated with offset and entity information,\nfor example:entity=${entityName}&search_after=${offset}, where${offset}will be substituted with the offset generated from the previous\nrequest\u00e2\u0080\u0099s response or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offsetand${entityName}will be substituted with values from the configurationentity.names. The parameters are only set ifhttp.request.method``issetto``GET.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 301
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.body",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 302,
      "display_name": "http.request.body",
      "documentation": "The payload to be sent along with the HTTP request. The value can be templated\nwith offset information\u00e2\u0080\u0093for example,{\"search_after\":\"${offset}\",\"entity\":\"${entityName}\"where${offset}will be substituted with the\noffset generated by the previous request\u00e2\u0080\u0099s response (or if it\u00e2\u0080\u0099s the first\nrequest, fromhttp.initial.offset), and${entityName}will be\nsubstituted with values from the configentity.names. The body is only set ifhttp.request.methodis set toPOST.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumNoteWhen you set this property with the Confluent CLI or API, ensure that the value forhttp.request.bodyis properly escaped.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 302
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumnotewhen you set this property with the confluent cli or api, ensure that the value forhttp.request.bodyis properly escaped."
    },
    {
      "name": "http.initial.offset",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 303,
      "display_name": "http.initial.offset",
      "documentation": "The initial offset to be used to generate the first request. This needs to be\nset if either one or more of the following configurations:url,http.request.parameters, orhttp.request.bodycontain the template\nvariable${offset}:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 303
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 304,
      "display_name": "http.offset.mode",
      "documentation": "This property indicates how offsets are computed and how requests are\ngenerated. If set toSIMPLE_INCREMENTING, the${offset}used to\ngenerate requests is simply the previous offset (orhttp.initial.offset)\nincremented by the number of records in the response. In this mode,\nhttp.initial.offset needs to be set to an integer value, andhttp.offset.json.pointerdoesnot need to be configured. If set toCHAINING, the configurationhttp.offset.json.pointerneeds to be set,\nand the offset for a record is set to the value at the JSON pointer in the\nrecord data.Type: stringDefault:SIMPLE_INCREMENTINGValid values: [SIMPLE_INCREMENTING,CHAINING,CURSOR_PAGINATION]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 304
      },
      "default": "simple_incrementingvalid values: [simple_incrementing,chaining,cursor_pagination]importance: high",
      "valid_values": [
        "simple_incrementing",
        "chaining",
        "cursor_pagination"
      ]
    },
    {
      "name": "http.response.data.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 305,
      "display_name": "http.response.data.json.pointer",
      "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data\nthat should be written to Kafka as records. The entity can be an array\n(multiple records ) or an object (single record).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 305
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 306,
      "display_name": "http.offset.json.pointer",
      "documentation": "The JSON Pointer to the value in each record that corresponds to the offset\nfor that record. For example, for a response like the following:{\"users\":[{\"id\":11,\"url\":\"http://{subdomain}.zendesk.com/api/v2/users/11.json\",\"name\":\"Agent Extraordinaire\",\"...\"\"user_fields\":{\"field1\":0,\"field2\":\"value2\"}}]\"metadata_1\":\"val\",\"metadata_2\":\"val\",\"time\":1383685952}This config can be set to/id. Note note that the pointer needs to be\nvalid for each record, not the top level JSON response. The offset for the\ncorresponding SourceRecord will be set to the value at the specified JSON\nPointer (cannot be an object or an array); also this value will be available\nto the subsequent request as${offset}.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 306
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "use.http.offset.json.pointer.as.string",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 307,
      "display_name": "use.http.offset.json.pointer.as.string",
      "documentation": "By default, the value of this property will be converted to a string before being used as an offset.\nSet this tofalseif this conversion is not needed.Type: booleanDefault:trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 307
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "http.next.page.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 308,
      "display_name": "http.next.page.json.pointer",
      "documentation": "The JSON pointer to the value in the response which corresponds to the next\npage reference (either a page token, a full URL or a URL fragment). This will\nbe stored as the offset and will be available to the subsequent request with\nthe template variable${offset}. This config should only be set ifhttp.offset.modeis set toCURSOR_PAGINATION.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 308
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.request.sensitive.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 309,
      "display_name": "http.request.sensitive.headers",
      "documentation": "Sensitive HTTP headers (for example, credentials) to be included in all\nrequests. Individual headers should be separated by theheader.separator.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 309
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 310,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 310
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 311,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 311
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 312,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. A comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with a start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to400.400-500includes codes from400to500, including500. Multiple ranges and single codes can be specified\ntogether to achieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUTand\nall5xxerror codes. Note that some status codes will always be retried, \u00e2\u0080\u009d\nsuch as unauthorized, timeouts and too many requests.Type: stringDefault:400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 312
      },
      "default": "400-importance: medium"
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 313,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait after receiving a response to a request\nbefore sending a subsequent request.Type: longDefault:400-Valid values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 313
      },
      "default": "400-valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 314,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,BEARER,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 314
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 315,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 315
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 316,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 316
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 317,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 317
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 318,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 318
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 319,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 319
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 320,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 320
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 321,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 321
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 322,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 322
      },
      "default": "anyimportance: low"
    },
    {
      "name": "bearer.token",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 323,
      "display_name": "bearer.token",
      "documentation": "The bearer authentication token to be used with an endpoint requiring bearer token-based authentication.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 323
      }
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 324,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 324
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 325,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 325
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 326,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 326
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 327,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 327
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 328,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 328
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 329,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 329
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 330,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 330
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 331,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 331
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 332,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 332
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 333,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 333
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 334,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 334
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 335,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 335
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 336,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 336
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 337,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 337
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 338,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 338
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 339,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 339
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 340,
      "display_name": "confluent.license",
      "documentation": "Confluent will issue a license key to each subscriber. The license key will be\na short snippet of text that you can copy and paste. Without the license key,\nyou can use the connector for a 30-day trial period. If you are a subscriber,contact Confluent Supportfor more\ninformation.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 340
      }
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 341,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the form<code>host1:port1,host2:port2,...</code>. Since these servers are just used\nfor the initial connection to discover the full cluster membership (which may\nchange dynamically), this list need not contain the full set of servers (you\nmay want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 341
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 342,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing\ninformation.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 342
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 343,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 343
      },
      "default": "3importance: low"
    },
    {
      "name": "url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 344,
      "display_name": "url",
      "documentation": "The service URL which can be templated with offset information. For example:http://example.com/api/v1/${entityName}/${offset}where${offset}will\nbe substituted with the offset generated by the previous request\u00e2\u0080\u0099s response\n(or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offset), and${entityName}will be substituted with values from the configurationentity.names.Type: stringValid Values: URI with one of these schemes:httporhttpsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 344
      }
    },
    {
      "name": "entity.names",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 345,
      "display_name": "entity.names",
      "documentation": "A list of entities that should be polled. Entities are distributed among the\nconnector tasks. Values from this list will replace the template variable${entityName}in the configurations:topic.name.pattern,url,http.request.parameters, andhttp.request.body. You do not need to set\nthis property if none of the aforementioned configuration properties contain\nthe template variable${entityName}.Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 345
      }
    },
    {
      "name": "http.request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 346,
      "display_name": "http.request.method",
      "documentation": "The HTTP request method.Type: stringDefault:GETValid Values:GETandPOSTImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 346
      },
      "default": "getvalid values:getandpostimportance: high"
    },
    {
      "name": "http.request.headers.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 347,
      "display_name": "http.request.headers.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationHTTP_REQUEST_HEADERS.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 347
      },
      "default": "|importance: low"
    },
    {
      "name": "http.request.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 348,
      "display_name": "http.request.headers",
      "documentation": "HTTP headers to be included in each request. Header names and values should be\nseparated by:. Distinct headers should be separated by the configuration\nvalue forHTTP_REQUEST_HEADERS_SEPARATOR(defaults toHTTP_REQUEST_HEADERS_SEPARATOR_DEFAULT). For example:From:abcxyz@confluent.io|Content-Length:348Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 348
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.parameters.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 349,
      "display_name": "http.request.parameters.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationhttp.request.parameters.Type: stringDefault:&Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 349
      },
      "default": "&importance: medium"
    },
    {
      "name": "http.request.parameters",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 350,
      "display_name": "http.request.parameters",
      "documentation": "HTTP parameters to be added to the request. Parameter names and values should\nbe separated by=. Distinct parameters should be separated by the\nconfiguration value forhttp.request.parameters.separator(defaults to&). Parameter values can be templated with offset and entity information,\nfor example:entity=${entityName}&search_after=${offset}, where${offset}will be substituted with the offset generated from the previous\nrequest\u00e2\u0080\u0099s response or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offsetand${entityName}will be substituted with values from the configurationentity.names. The parameters are only set ifhttp.request.method``issetto``GET.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 350
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.body",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 351,
      "display_name": "http.request.body",
      "documentation": "The payload to be sent along with the HTTP request. The value can be templated\nwith offset information\u00e2\u0080\u0093for example,{\"search_after\":\"${offset}\",\"entity\":\"${entityName}\"where${offset}will be substituted with the\noffset generated by the previous request\u00e2\u0080\u0099s response (or if it\u00e2\u0080\u0099s the first\nrequest, fromhttp.initial.offset), and${entityName}will be\nsubstituted with values from the configentity.names. The body is only set ifhttp.request.methodis set toPOST.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumNoteWhen you set this property with the Confluent CLI or API, ensure that the value forhttp.request.bodyis properly escaped.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 351
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumnotewhen you set this property with the confluent cli or api, ensure that the value forhttp.request.bodyis properly escaped."
    },
    {
      "name": "http.initial.offset",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 352,
      "display_name": "http.initial.offset",
      "documentation": "The initial offset to be used to generate the first request. This needs to be\nset if either one or more of the following configurations:url,http.request.parameters, orhttp.request.bodycontain the template\nvariable${offset}:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 352
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 353,
      "display_name": "http.offset.mode",
      "documentation": "This property indicates how offsets are computed and how requests are\ngenerated. If set toSIMPLE_INCREMENTING, the${offset}used to\ngenerate requests is simply the previous offset (orhttp.initial.offset)\nincremented by the number of records in the response. In this mode,\nhttp.initial.offset needs to be set to an integer value, andhttp.offset.json.pointerdoesnot need to be configured. If set toCHAINING, the configurationhttp.offset.json.pointerneeds to be set,\nand the offset for a record is set to the value at the JSON pointer in the\nrecord data.Type: stringDefault:SIMPLE_INCREMENTINGValid values: [SIMPLE_INCREMENTING,CHAINING,CURSOR_PAGINATION]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 353
      },
      "default": "simple_incrementingvalid values: [simple_incrementing,chaining,cursor_pagination]importance: high",
      "valid_values": [
        "simple_incrementing",
        "chaining",
        "cursor_pagination"
      ]
    },
    {
      "name": "http.response.data.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 354,
      "display_name": "http.response.data.json.pointer",
      "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data\nthat should be written to Kafka as records. The entity can be an array\n(multiple records ) or an object (single record).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 354
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 355,
      "display_name": "http.offset.json.pointer",
      "documentation": "The JSON Pointer to the value in each record that corresponds to the offset\nfor that record. For example, for a response like the following:{\"users\":[{\"id\":11,\"url\":\"http://{subdomain}.zendesk.com/api/v2/users/11.json\",\"name\":\"Agent Extraordinaire\",\"...\"\"user_fields\":{\"field1\":0,\"field2\":\"value2\"}}]\"metadata_1\":\"val\",\"metadata_2\":\"val\",\"time\":1383685952}This config can be set to/id. Note note that the pointer needs to be\nvalid for each record, not the top level JSON response. The offset for the\ncorresponding SourceRecord will be set to the value at the specified JSON\nPointer (cannot be an object or an array); also this value will be available\nto the subsequent request as${offset}.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 355
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "use.http.offset.json.pointer.as.string",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 356,
      "display_name": "use.http.offset.json.pointer.as.string",
      "documentation": "By default, the value of this property will be converted to a string before being used as an offset.\nSet this tofalseif this conversion is not needed.Type: booleanDefault:trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 356
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "http.next.page.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 357,
      "display_name": "http.next.page.json.pointer",
      "documentation": "The JSON pointer to the value in the response which corresponds to the next\npage reference (either a page token, a full URL or a URL fragment). This will\nbe stored as the offset and will be available to the subsequent request with\nthe template variable${offset}. This config should only be set ifhttp.offset.modeis set toCURSOR_PAGINATION.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 357
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.request.sensitive.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 358,
      "display_name": "http.request.sensitive.headers",
      "documentation": "Sensitive HTTP headers (for example, credentials) to be included in all\nrequests. Individual headers should be separated by theheader.separator.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 358
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 359,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 359
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 360,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 360
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 361,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. A comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with a start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to400.400-500includes codes from400to500, including500. Multiple ranges and single codes can be specified\ntogether to achieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUTand\nall5xxerror codes. Note that some status codes will always be retried, \u00e2\u0080\u009d\nsuch as unauthorized, timeouts and too many requests.Type: stringDefault:400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 361
      },
      "default": "400-importance: medium"
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 362,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait after receiving a response to a request\nbefore sending a subsequent request.Type: longDefault:400-Valid values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 362
      },
      "default": "400-valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 363,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,BEARER,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 363
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 364,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 364
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 365,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 365
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 366,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 366
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 367,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 367
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 368,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 368
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 369,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 369
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 370,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 370
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 371,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 371
      },
      "default": "anyimportance: low"
    },
    {
      "name": "bearer.token",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 372,
      "display_name": "bearer.token",
      "documentation": "The bearer authentication token to be used with an endpoint requiring bearer token-based authentication.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 372
      }
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 373,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 373
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 374,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 374
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 375,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 375
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 376,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 376
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 377,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 377
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 378,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 378
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 379,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 379
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 380,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 380
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 381,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 381
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 382,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 382
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 383,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 383
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 384,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 384
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 385,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 385
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 386,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 386
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 387,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 387
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 388,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 388
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 389,
      "display_name": "confluent.license",
      "documentation": "Confluent will issue a license key to each subscriber. The license key will be\na short snippet of text that you can copy and paste. Without the license key,\nyou can use the connector for a 30-day trial period. If you are a subscriber,contact Confluent Supportfor more\ninformation.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 389
      }
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 390,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the form<code>host1:port1,host2:port2,...</code>. Since these servers are just used\nfor the initial connection to discover the full cluster membership (which may\nchange dynamically), this list need not contain the full set of servers (you\nmay want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 390
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 391,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing\ninformation.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 391
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 392,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 392
      },
      "default": "3importance: low"
    },
    {
      "name": "url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 393,
      "display_name": "url",
      "documentation": "The service URL which can be templated with offset information. For example:http://example.com/api/v1/${entityName}/${offset}where${offset}will\nbe substituted with the offset generated by the previous request\u00e2\u0080\u0099s response\n(or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offset), and${entityName}will be substituted with values from the configurationentity.names.Type: stringValid Values: URI with one of these schemes:httporhttpsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 393
      }
    },
    {
      "name": "entity.names",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 394,
      "display_name": "entity.names",
      "documentation": "A list of entities that should be polled. Entities are distributed among the\nconnector tasks. Values from this list will replace the template variable${entityName}in the configurations:topic.name.pattern,url,http.request.parameters, andhttp.request.body. You do not need to set\nthis property if none of the aforementioned configuration properties contain\nthe template variable${entityName}.Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 394
      }
    },
    {
      "name": "http.request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 395,
      "display_name": "http.request.method",
      "documentation": "The HTTP request method.Type: stringDefault:GETValid Values:GETandPOSTImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 395
      },
      "default": "getvalid values:getandpostimportance: high"
    },
    {
      "name": "http.request.headers.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 396,
      "display_name": "http.request.headers.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationHTTP_REQUEST_HEADERS.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 396
      },
      "default": "|importance: low"
    },
    {
      "name": "http.request.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 397,
      "display_name": "http.request.headers",
      "documentation": "HTTP headers to be included in each request. Header names and values should be\nseparated by:. Distinct headers should be separated by the configuration\nvalue forHTTP_REQUEST_HEADERS_SEPARATOR(defaults toHTTP_REQUEST_HEADERS_SEPARATOR_DEFAULT). For example:From:abcxyz@confluent.io|Content-Length:348Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 397
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.parameters.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 398,
      "display_name": "http.request.parameters.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationhttp.request.parameters.Type: stringDefault:&Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 398
      },
      "default": "&importance: medium"
    },
    {
      "name": "http.request.parameters",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 399,
      "display_name": "http.request.parameters",
      "documentation": "HTTP parameters to be added to the request. Parameter names and values should\nbe separated by=. Distinct parameters should be separated by the\nconfiguration value forhttp.request.parameters.separator(defaults to&). Parameter values can be templated with offset and entity information,\nfor example:entity=${entityName}&search_after=${offset}, where${offset}will be substituted with the offset generated from the previous\nrequest\u00e2\u0080\u0099s response or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offsetand${entityName}will be substituted with values from the configurationentity.names. The parameters are only set ifhttp.request.method``issetto``GET.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 399
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.body",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 400,
      "display_name": "http.request.body",
      "documentation": "The payload to be sent along with the HTTP request. The value can be templated\nwith offset information\u00e2\u0080\u0093for example,{\"search_after\":\"${offset}\",\"entity\":\"${entityName}\"where${offset}will be substituted with the\noffset generated by the previous request\u00e2\u0080\u0099s response (or if it\u00e2\u0080\u0099s the first\nrequest, fromhttp.initial.offset), and${entityName}will be\nsubstituted with values from the configentity.names. The body is only set ifhttp.request.methodis set toPOST.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumNoteWhen you set this property with the Confluent CLI or API, ensure that the value forhttp.request.bodyis properly escaped.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 400
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumnotewhen you set this property with the confluent cli or api, ensure that the value forhttp.request.bodyis properly escaped."
    },
    {
      "name": "http.initial.offset",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 401,
      "display_name": "http.initial.offset",
      "documentation": "The initial offset to be used to generate the first request. This needs to be\nset if either one or more of the following configurations:url,http.request.parameters, orhttp.request.bodycontain the template\nvariable${offset}:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 401
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 402,
      "display_name": "http.offset.mode",
      "documentation": "This property indicates how offsets are computed and how requests are\ngenerated. If set toSIMPLE_INCREMENTING, the${offset}used to\ngenerate requests is simply the previous offset (orhttp.initial.offset)\nincremented by the number of records in the response. In this mode,\nhttp.initial.offset needs to be set to an integer value, andhttp.offset.json.pointerdoesnot need to be configured. If set toCHAINING, the configurationhttp.offset.json.pointerneeds to be set,\nand the offset for a record is set to the value at the JSON pointer in the\nrecord data.Type: stringDefault:SIMPLE_INCREMENTINGValid values: [SIMPLE_INCREMENTING,CHAINING,CURSOR_PAGINATION]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 402
      },
      "default": "simple_incrementingvalid values: [simple_incrementing,chaining,cursor_pagination]importance: high",
      "valid_values": [
        "simple_incrementing",
        "chaining",
        "cursor_pagination"
      ]
    },
    {
      "name": "http.response.data.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 403,
      "display_name": "http.response.data.json.pointer",
      "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data\nthat should be written to Kafka as records. The entity can be an array\n(multiple records ) or an object (single record).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 403
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 404,
      "display_name": "http.offset.json.pointer",
      "documentation": "The JSON Pointer to the value in each record that corresponds to the offset\nfor that record. For example, for a response like the following:{\"users\":[{\"id\":11,\"url\":\"http://{subdomain}.zendesk.com/api/v2/users/11.json\",\"name\":\"Agent Extraordinaire\",\"...\"\"user_fields\":{\"field1\":0,\"field2\":\"value2\"}}]\"metadata_1\":\"val\",\"metadata_2\":\"val\",\"time\":1383685952}This config can be set to/id. Note note that the pointer needs to be\nvalid for each record, not the top level JSON response. The offset for the\ncorresponding SourceRecord will be set to the value at the specified JSON\nPointer (cannot be an object or an array); also this value will be available\nto the subsequent request as${offset}.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 404
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "use.http.offset.json.pointer.as.string",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 405,
      "display_name": "use.http.offset.json.pointer.as.string",
      "documentation": "By default, the value of this property will be converted to a string before being used as an offset.\nSet this tofalseif this conversion is not needed.Type: booleanDefault:trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 405
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "http.next.page.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 406,
      "display_name": "http.next.page.json.pointer",
      "documentation": "The JSON pointer to the value in the response which corresponds to the next\npage reference (either a page token, a full URL or a URL fragment). This will\nbe stored as the offset and will be available to the subsequent request with\nthe template variable${offset}. This config should only be set ifhttp.offset.modeis set toCURSOR_PAGINATION.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 406
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.request.sensitive.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 407,
      "display_name": "http.request.sensitive.headers",
      "documentation": "Sensitive HTTP headers (for example, credentials) to be included in all\nrequests. Individual headers should be separated by theheader.separator.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 407
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 408,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 408
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 409,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 409
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 410,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. A comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with a start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to400.400-500includes codes from400to500, including500. Multiple ranges and single codes can be specified\ntogether to achieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUTand\nall5xxerror codes. Note that some status codes will always be retried, \u00e2\u0080\u009d\nsuch as unauthorized, timeouts and too many requests.Type: stringDefault:400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 410
      },
      "default": "400-importance: medium"
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 411,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait after receiving a response to a request\nbefore sending a subsequent request.Type: longDefault:400-Valid values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 411
      },
      "default": "400-valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 412,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,BEARER,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 412
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 413,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 413
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 414,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 414
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 415,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 415
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 416,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 416
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 417,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 417
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 418,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 418
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 419,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 419
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 420,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 420
      },
      "default": "anyimportance: low"
    },
    {
      "name": "bearer.token",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 421,
      "display_name": "bearer.token",
      "documentation": "The bearer authentication token to be used with an endpoint requiring bearer token-based authentication.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 421
      }
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 422,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 422
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 423,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 423
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 424,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 424
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 425,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 425
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 426,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 426
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 427,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 427
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 428,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 428
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 429,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 429
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 430,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 430
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 431,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 431
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 432,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 432
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 433,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 433
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 434,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 434
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 435,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 435
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 436,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 436
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 437,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 437
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 438,
      "display_name": "confluent.license",
      "documentation": "Confluent will issue a license key to each subscriber. The license key will be\na short snippet of text that you can copy and paste. Without the license key,\nyou can use the connector for a 30-day trial period. If you are a subscriber,contact Confluent Supportfor more\ninformation.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 438
      }
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 439,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the form<code>host1:port1,host2:port2,...</code>. Since these servers are just used\nfor the initial connection to discover the full cluster membership (which may\nchange dynamically), this list need not contain the full set of servers (you\nmay want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 439
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 440,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing\ninformation.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 440
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 441,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 441
      },
      "default": "3importance: low"
    },
    {
      "name": "url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 442,
      "display_name": "url",
      "documentation": "The service URL which can be templated with offset information. For example:http://example.com/api/v1/${entityName}/${offset}where${offset}will\nbe substituted with the offset generated by the previous request\u00e2\u0080\u0099s response\n(or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offset), and${entityName}will be substituted with values from the configurationentity.names.Type: stringValid Values: URI with one of these schemes:httporhttpsImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 442
      }
    },
    {
      "name": "entity.names",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 443,
      "display_name": "entity.names",
      "documentation": "A list of entities that should be polled. Entities are distributed among the\nconnector tasks. Values from this list will replace the template variable${entityName}in the configurations:topic.name.pattern,url,http.request.parameters, andhttp.request.body. You do not need to set\nthis property if none of the aforementioned configuration properties contain\nthe template variable${entityName}.Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 443
      }
    },
    {
      "name": "http.request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 444,
      "display_name": "http.request.method",
      "documentation": "The HTTP request method.Type: stringDefault:GETValid Values:GETandPOSTImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 444
      },
      "default": "getvalid values:getandpostimportance: high"
    },
    {
      "name": "http.request.headers.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 445,
      "display_name": "http.request.headers.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationHTTP_REQUEST_HEADERS.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 445
      },
      "default": "|importance: low"
    },
    {
      "name": "http.request.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 446,
      "display_name": "http.request.headers",
      "documentation": "HTTP headers to be included in each request. Header names and values should be\nseparated by:. Distinct headers should be separated by the configuration\nvalue forHTTP_REQUEST_HEADERS_SEPARATOR(defaults toHTTP_REQUEST_HEADERS_SEPARATOR_DEFAULT). For example:From:abcxyz@confluent.io|Content-Length:348Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 446
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.parameters.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 447,
      "display_name": "http.request.parameters.separator",
      "documentation": "The character that separates multiple distinct headers in the configurationhttp.request.parameters.Type: stringDefault:&Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 447
      },
      "default": "&importance: medium"
    },
    {
      "name": "http.request.parameters",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 448,
      "display_name": "http.request.parameters",
      "documentation": "HTTP parameters to be added to the request. Parameter names and values should\nbe separated by=. Distinct parameters should be separated by the\nconfiguration value forhttp.request.parameters.separator(defaults to&). Parameter values can be templated with offset and entity information,\nfor example:entity=${entityName}&search_after=${offset}, where${offset}will be substituted with the offset generated from the previous\nrequest\u00e2\u0080\u0099s response or if it\u00e2\u0080\u0099s the first request, fromhttp.initial.offsetand${entityName}will be substituted with values from the configurationentity.names. The parameters are only set ifhttp.request.method``issetto``GET.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 448
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.request.body",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 449,
      "display_name": "http.request.body",
      "documentation": "The payload to be sent along with the HTTP request. The value can be templated\nwith offset information\u00e2\u0080\u0093for example,{\"search_after\":\"${offset}\",\"entity\":\"${entityName}\"where${offset}will be substituted with the\noffset generated by the previous request\u00e2\u0080\u0099s response (or if it\u00e2\u0080\u0099s the first\nrequest, fromhttp.initial.offset), and${entityName}will be\nsubstituted with values from the configentity.names. The body is only set ifhttp.request.methodis set toPOST.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: mediumNoteWhen you set this property with the Confluent CLI or API, ensure that the value forhttp.request.bodyis properly escaped.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 449
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: mediumnotewhen you set this property with the confluent cli or api, ensure that the value forhttp.request.bodyis properly escaped."
    },
    {
      "name": "http.initial.offset",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 450,
      "display_name": "http.initial.offset",
      "documentation": "The initial offset to be used to generate the first request. This needs to be\nset if either one or more of the following configurations:url,http.request.parameters, orhttp.request.bodycontain the template\nvariable${offset}:Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 450
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.mode",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 451,
      "display_name": "http.offset.mode",
      "documentation": "This property indicates how offsets are computed and how requests are\ngenerated. If set toSIMPLE_INCREMENTING, the${offset}used to\ngenerate requests is simply the previous offset (orhttp.initial.offset)\nincremented by the number of records in the response. In this mode,\nhttp.initial.offset needs to be set to an integer value, andhttp.offset.json.pointerdoesnot need to be configured. If set toCHAINING, the configurationhttp.offset.json.pointerneeds to be set,\nand the offset for a record is set to the value at the JSON pointer in the\nrecord data.Type: stringDefault:SIMPLE_INCREMENTINGValid values: [SIMPLE_INCREMENTING,CHAINING,CURSOR_PAGINATION]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 451
      },
      "default": "simple_incrementingvalid values: [simple_incrementing,chaining,cursor_pagination]importance: high",
      "valid_values": [
        "simple_incrementing",
        "chaining",
        "cursor_pagination"
      ]
    },
    {
      "name": "http.response.data.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 452,
      "display_name": "http.response.data.json.pointer",
      "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data\nthat should be written to Kafka as records. The entity can be an array\n(multiple records ) or an object (single record).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 452
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.offset.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 453,
      "display_name": "http.offset.json.pointer",
      "documentation": "The JSON Pointer to the value in each record that corresponds to the offset\nfor that record. For example, for a response like the following:{\"users\":[{\"id\":11,\"url\":\"http://{subdomain}.zendesk.com/api/v2/users/11.json\",\"name\":\"Agent Extraordinaire\",\"...\"\"user_fields\":{\"field1\":0,\"field2\":\"value2\"}}]\"metadata_1\":\"val\",\"metadata_2\":\"val\",\"time\":1383685952}This config can be set to/id. Note note that the pointer needs to be\nvalid for each record, not the top level JSON response. The offset for the\ncorresponding SourceRecord will be set to the value at the specified JSON\nPointer (cannot be an object or an array); also this value will be available\nto the subsequent request as${offset}.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 453
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "use.http.offset.json.pointer.as.string",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 454,
      "display_name": "use.http.offset.json.pointer.as.string",
      "documentation": "By default, the value of this property will be converted to a string before being used as an offset.\nSet this tofalseif this conversion is not needed.Type: booleanDefault:trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 454
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "http.next.page.json.pointer",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 455,
      "display_name": "http.next.page.json.pointer",
      "documentation": "The JSON pointer to the value in the response which corresponds to the next\npage reference (either a page token, a full URL or a URL fragment). This will\nbe stored as the offset and will be available to the subsequent request with\nthe template variable${offset}. This config should only be set ifhttp.offset.modeis set toCURSOR_PAGINATION.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 455
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.request.sensitive.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 456,
      "display_name": "http.request.sensitive.headers",
      "documentation": "Sensitive HTTP headers (for example, credentials) to be included in all\nrequests. Individual headers should be separated by theheader.separator.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 456
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Retries",
      "order_in_group": 457,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 457
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Retries",
      "order_in_group": 458,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 458
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Retries",
      "order_in_group": 459,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. A comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with a start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to400.400-500includes codes from400to500, including500. Multiple ranges and single codes can be specified\ntogether to achieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUTand\nall5xxerror codes. Note that some status codes will always be retried, \u00e2\u0080\u009d\nsuch as unauthorized, timeouts and too many requests.Type: stringDefault:400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 459
      },
      "default": "400-importance: medium"
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Retries",
      "order_in_group": 460,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait after receiving a response to a request\nbefore sending a subsequent request.Type: longDefault:400-Valid values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 460
      },
      "default": "400-valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authentication configuration",
      "order_in_group": 461,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,BEARER,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 461
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authentication configuration",
      "order_in_group": 462,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 462
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authentication configuration",
      "order_in_group": 463,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 463
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authentication configuration",
      "order_in_group": 464,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 464
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authentication configuration",
      "order_in_group": 465,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 465
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authentication configuration",
      "order_in_group": 466,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 466
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authentication configuration",
      "order_in_group": 467,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 467
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Authentication configuration",
      "order_in_group": 468,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 468
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Authentication configuration",
      "order_in_group": 469,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 469
      },
      "default": "anyimportance: low"
    },
    {
      "name": "bearer.token",
      "type": "PASSWORDIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Authentication configuration",
      "order_in_group": 470,
      "display_name": "bearer.token",
      "documentation": "The bearer authentication token to be used with an endpoint requiring bearer token-based authentication.Type: passwordImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 470
      }
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Proxy configuration",
      "order_in_group": 471,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 471
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Proxy configuration",
      "order_in_group": 472,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 472
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Proxy configuration",
      "order_in_group": 473,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 473
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Proxy configuration",
      "order_in_group": 474,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 474
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "SSL configuration",
      "order_in_group": 475,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 475
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "SSL configuration",
      "order_in_group": 476,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 476
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "SSL configuration",
      "order_in_group": 477,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 477
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "SSL configuration",
      "order_in_group": 478,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 478
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "SSL configuration",
      "order_in_group": 479,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 479
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "SSL configuration",
      "order_in_group": 480,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 480
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "SSL configuration",
      "order_in_group": 481,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 481
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "SSL configuration",
      "order_in_group": 482,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 482
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "SSL configuration",
      "order_in_group": 483,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 483
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "SSL configuration",
      "order_in_group": 484,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 484
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "SSL configuration",
      "order_in_group": 485,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 485
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "SSL configuration",
      "order_in_group": 486,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 486
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "License configuration",
      "order_in_group": 487,
      "display_name": "confluent.license",
      "documentation": "Confluent will issue a license key to each subscriber. The license key will be\na short snippet of text that you can copy and paste. Without the license key,\nyou can use the connector for a 30-day trial period. If you are a subscriber,contact Confluent Supportfor more\ninformation.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 487
      }
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "License configuration",
      "order_in_group": 488,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the form<code>host1:port1,host2:port2,...</code>. Since these servers are just used\nfor the initial connection to discover the full cluster membership (which may\nchange dynamically), this list need not contain the full set of servers (you\nmay want more than one, though, in case a server is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 488
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "License configuration",
      "order_in_group": 489,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing\ninformation.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 489
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "License configuration",
      "order_in_group": 490,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 490
      },
      "default": "3importance: low"
    },
    {
      "name": "Search by configuration property name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "Search by configuration property name",
      "documentation": "Enter a string to search and filter by configuration property name.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "name",
      "documentation": "Globally unique name to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "connector.class",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 3,
      "display_name": "connector.class",
      "documentation": "Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \u00e2\u0080\u009cFileStreamSink\u00e2\u0080\u009d or \u00e2\u0080\u009cFileStreamSinkConnector\u00e2\u0080\u009d to make the configuration a bit shorter",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "tasks.max",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 4,
      "display_name": "tasks.max",
      "documentation": "Maximum number of tasks to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "tasks.max.enforce",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 5,
      "display_name": "tasks.max.enforce",
      "documentation": "(Deprecated) Whether to enforce that the tasks.max property is respected by the connector. By default, connectors that generate too many tasks will fail, and existing sets of tasks that exceed the tasks.max property will also be failed. If this property is set to false, then connectors will be allowed to generate more than the maximum number of tasks, and existing sets of tasks that exceed the tasks.max property will be allowed to run. This property is deprecated and will be removed in an upcoming major release.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "key.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 6,
      "display_name": "key.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "value.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 7,
      "display_name": "value.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "header.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 8,
      "display_name": "header.converter",
      "documentation": "HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      }
    },
    {
      "name": "config.action.reload",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 9,
      "display_name": "config.action.reload",
      "documentation": "The action that Connect should take on the connector when changes in external configuration providers result in a change in the connector\u00e2\u0080\u0099s configuration properties. A value of \u00e2\u0080\u0098none\u00e2\u0080\u0099 indicates that Connect will do nothing. A value of \u00e2\u0080\u0098restart\u00e2\u0080\u0099 indicates that Connect should restart/reload the connector with the updated configuration properties.The restart may actually be scheduled in the future if the external configuration provider indicates that a configuration value will expire in the future.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      }
    },
    {
      "name": "transforms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 10,
      "display_name": "transforms",
      "documentation": "Aliases for the transformations to be applied to records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      }
    },
    {
      "name": "predicates",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 11,
      "display_name": "predicates",
      "documentation": "Aliases for the predicates used by transformations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "errors.retry.timeout",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 12,
      "display_name": "errors.retry.timeout",
      "documentation": "The maximum duration in milliseconds that a failed operation will be reattempted. The default is 0, which means no retries will be attempted. Use -1 for infinite retries.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "errors.retry.delay.max.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 13,
      "display_name": "errors.retry.delay.max.ms",
      "documentation": "The maximum duration in milliseconds between consecutive retry attempts. Jitter will be added to the delay once this limit is reached to prevent thundering herd issues.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      }
    },
    {
      "name": "errors.tolerance",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 14,
      "display_name": "errors.tolerance",
      "documentation": "Behavior for tolerating errors during connector operation. \u00e2\u0080\u0098none\u00e2\u0080\u0099 is the default value and signals that any error will result in an immediate connector task failure; \u00e2\u0080\u0098all\u00e2\u0080\u0099 changes the behavior to skip over problematic records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "errors.log.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 15,
      "display_name": "errors.log.enable",
      "documentation": "If true, write each error and the details of the failed operation and problematic record to the Connect application log. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, so that only errors that are not tolerated are reported.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      }
    },
    {
      "name": "errors.log.include.messages",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 16,
      "display_name": "errors.log.include.messages",
      "documentation": "Whether to include in the log the Connect record that resulted in a failure. For sink records, the topic, partition, offset, and timestamp will be logged. For source records, the key and value (and their schemas), all headers, and the timestamp, Kafka topic, Kafka partition, source partition, and source offset will be logged. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, which will prevent record keys, values, and headers from being written to log files.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "topic.creation.groups",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 17,
      "display_name": "topic.creation.groups",
      "documentation": "Groups of configurations for topics created by source connectors",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      }
    },
    {
      "name": "exactly.once.support",
      "type": "STRING",
      "required": true,
      "importance": "HIGH",
      "group": "Common",
      "order_in_group": 18,
      "display_name": "exactly.once.support",
      "documentation": "Permitted values are requested, required. If set to \u00e2\u0080\u009crequired\u00e2\u0080\u009d, forces a preflight check for the connector to ensure that it can provide exactly-once semantics with the given configuration. Some connectors may be capable of providing exactly-once semantics but not signal to Connect that they support this; in that case, documentation for the connector should be consulted carefully before creating it, and the value for this property should be set to \u00e2\u0080\u009crequested\u00e2\u0080\u009d. Additionally, if the value is set to \u00e2\u0080\u009crequired\u00e2\u0080\u009d but the worker that performs preflight validation does not have exactly-once support enabled for source connectors, requests to create or validate the connector will fail.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      }
    },
    {
      "name": "transaction.boundary",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 19,
      "display_name": "transaction.boundary",
      "documentation": "Permitted values are: poll, interval, connector. If set to \u00e2\u0080\u0098poll\u00e2\u0080\u0099, a new producer transaction will be started and committed for every batch of records that each task from this connector provides to Connect. If set to \u00e2\u0080\u0098connector\u00e2\u0080\u0099, relies on connector-defined transaction boundaries; note that not all connectors are capable of defining their own transaction boundaries, and in that case, attempts to instantiate a connector with this value will fail. Finally, if set to \u00e2\u0080\u0098interval\u00e2\u0080\u0099, commits transactions only after a user-defined time interval has passed.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      }
    },
    {
      "name": "transaction.boundary.interval.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 20,
      "display_name": "transaction.boundary.interval.ms",
      "documentation": "If \u00e2\u0080\u0098transaction.boundary\u00e2\u0080\u0099 is set to \u00e2\u0080\u0098interval\u00e2\u0080\u0099, determines the interval for producer transaction commits by connector tasks. If unset, defaults to the value of the worker-level \u00e2\u0080\u0098offset.flush.interval.ms\u00e2\u0080\u0099 property. It has no effect if a different transaction.boundary is specified.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      }
    },
    {
      "name": "offsets.storage.topic",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 21,
      "display_name": "offsets.storage.topic",
      "documentation": "The name of a separate offsets topic to use for this connector. If empty or not specified, the worker\u00e2\u0080\u0099s global offsets topic name will be used. If specified, the offsets topic will be created if it does not already exist on the Kafka cluster targeted by this connector (which may be different from the one used for the worker\u00e2\u0080\u0099s global offsets topic if the bootstrap.servers property of the connector\u00e2\u0080\u0099s producer has been overridden from the worker\u00e2\u0080\u0099s). Only applicable in distributed mode; in standalone mode, setting this property will have no effect.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      }
    }
  ]
}