{
  "templates": [
    {
      "template_id": "S3Source",
      "connector_type": "SOURCE",
      "connector.class": "io.confluent.connect.s3.source.S3SourceConnector",
      "config_defs": [
        {
          "name": "topic.regex.list",
          "type": "LIST",
          "required": true,
          "importance": "HIGH",
          "group": "Which topic(s) do you want to send data to?",
          "order_in_group": 1,
          "display_name": "Topic Name Regex Patterns",
          "documentation": "A list of topics along with a regex expression of the files which are to be sent to that topic.  For example: \"my-topic:.*\" will send all files to \"my-topic\", while a list containing only the expression \"special-topic:.*\\.json\" will send only files starting with \".json\" to \"special-topic\", and all other files not matching any patterns will be ignored and not sourced. Files that match multiple mappings will be sent to the first topic in the list that maps the file. The ``topic.regex.list`` property matches the full path (for example, ``folder/file.txt``), not just the filename."
        },
        {
          "name": "aws.access.key.id",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "AWS credentials",
          "order_in_group": 2,
          "display_name": "AWS access key ID",
          "documentation": "The AWS Access Key used to connect to Amazon S3."
        },
        {
          "name": "aws.secret.access.key",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "AWS credentials",
          "order_in_group": 3,
          "display_name": "AWS secret access key",
          "documentation": "The AWS Secret Key used to connect to Amazon S3.",
          "dependents": [
            "aws.access.key.id"
          ]
        },
        {
          "name": "input.data.format",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "Input and output messages",
          "order_in_group": 1,
          "display_name": "Input Message Format",
          "documentation": "Sets the input message format. Valid entries are AVRO, JSON, or BYTES. Note that you need to have Confluent Cloud Schema Registry configured if using a schema-based message format like AVRO.",
          "recommended_values": [
            "AVRO",
            "JSON",
            "BYTES",
            "PARQUET",
            "CSV"
          ],
          "dependents": [
            "schema.registry.url"
          ]
        },
        {
          "name": "output.data.format",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "Input and output messages",
          "order_in_group": 2,
          "display_name": "Output Message Format",
          "default_value": "${input.data.format}",
          "documentation": "Set the output message format for values. Valid entries are AVRO, JSON, JSON_SR, PROTOBUF, STRING, or BYTES. Note that you need to have Confluent Cloud Schema Registry configured if using a schema-based message format like AVRO, JSON_SR and PROTOBUF.",
          "recommended_values": [
            "AVRO",
            "JSON_SR",
            "PROTOBUF",
            "JSON",
            "STRING",
            "BYTES"
          ],
          "dependents": [
            "schema.registry.url"
          ]
        },
        {
          "name": "s3.bucket.name",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "How should we connect to your S3 bucket?",
          "order_in_group": 1,
          "display_name": "S3 bucket name"
        },
        {
          "name": "s3.region",
          "group": "How should we connect to your S3 bucket?",
          "order_in_group": 2,
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "display_name": "AWS Region",
          "documentation": "Set to the AWS region where your S3 bucket resides.",
          "recommender": {
            "name": "aws.regions"
          }
        },
        {
          "name": "s3.part.retries",
          "type": "INT",
          "group": "How should we connect to your S3 bucket?",
          "order_in_group": 3,
          "importance": "MEDIUM",
          "default_value": "3",
          "display_name": "Number of Retries on S3 Errors",
          "documentation": "The number of times a single S3 API call should be retried in the case that it fails with a \"retriable\" error (such as a throttling exception). Once this limit is exceeded, the Kafka Connect poll itself may retry (based upon the Kafka Connect-based retry configuration)."
        },
        {
          "name": "s3.retry.backoff.ms",
          "type": "INT",
          "group": "How should we connect to your S3 bucket?",
          "order_in_group": 4,
          "importance": "MEDIUM",
          "default_value": "200",
          "display_name": "Retry Backoff on S3 Errors (ms)",
          "documentation": "How long to wait in milliseconds before attempting the first retry of a failed S3 request. Upon a failure, this connector  may wait up to twice as long as the previous wait, up to the maximum number of retries. This avoids retrying in a tight loop under failure scenarios."
        },
        {
          "name": "ui.s3.wan.mode",
          "type": "STRING",
          "required": false,
          "default_value": "NO",
          "importance": "MEDIUM",
          "group": "How should we connect to your S3 bucket?",
          "order_in_group": 5,
          "display_name": "S3 Accelerated Endpoint",
          "documentation": "Use an S3 accelerated endpoint.",
          "recommended_values": [
            "YES",
            "NO"
          ]
        },
        {
          "name": "ui.s3.path.style.access",
          "type": "STRING",
          "required": false,
          "default_value": "NO",
          "importance": "MEDIUM",
          "group": "How should we connect to your S3 bucket?",
          "order_in_group": 6,
          "display_name": "S3 Path-style Access",
          "documentation": "Whether to use s3 path-style access.",
          "recommended_values": [
            "YES",
            "NO"
          ]
        },
        {
          "name": "s3.http.send.expect.continue",
          "type": "STRING",
          "required": false,
          "default_value": "YES",
          "importance": "MEDIUM",
          "group": "How should we connect to your S3 bucket?",
          "order_in_group": 7,
          "display_name": "Send S3 Expect Continue Request",
          "documentation": "Enable/disable use of the HTTP/1.1 handshake using EXPECT: 100-CONTINUE during multi-part upload. If true, the client waits for a 100 (CONTINUE) response before sending the request body. If false, the client uploads the entire request body without checking if the server is willing to accept the request.",
          "recommended_values": [
            "YES",
            "NO"
          ]
        },
        {
          "name": "ui.s3.ssea.name",
          "type": "STRING",
          "group": "How should we connect to your S3 bucket?",
          "order_in_group": 8,
          "importance": "MEDIUM",
          "display_name": "S3 Server Side Encryption Algorithm",
          "documentation": "The S3 server-side encryption algorithm.",
          "default_value": "NONE",
          "recommended_values": [
            "NONE",
            "AES256",
            "AWS:KMS"
          ]
        },
        {
          "name": "s3.sse.customer.key",
          "type": "PASSWORD",
          "importance": "MEDIUM",
          "group": "How should we connect to your S3 bucket?",
          "order_in_group": 9,
          "display_name": "S3 Server Side Encryption Customer-Provided Key (SSE-C)",
          "documentation": "The S3 Server-Side Encryption customer-provided key (SSE-C).",
          "dependents": [
            "ui.s3.ssea.name"
          ]
        },
        {
          "name": "topics.dir",
          "type": "STRING",
          "default_value": "topics",
          "importance": "HIGH",
          "group": "Storage",
          "order_in_group": 1,
          "display_name": "Topics directory",
          "documentation": "Top-level directory (in the S3 bucket) where data to be ingested is stored."
        },
        {
          "name": "task.batch.size",
          "type": "INT",
          "group": "Storage",
          "order_in_group": 2,
          "importance": "HIGH",
          "default_value": "10",
          "documentation": "The number of files assigned to each task at a time",
          "display_name": "Task Batch Size"
        },
        {
          "name": "file.discovery.starting.timestamp",
          "type": "LONG",
          "required": false,
          "importance": "HIGH",
          "default_value": "0",
          "group": "Storage",
          "order_in_group": 3,
          "display_name": "File Discovery Starting Timestamp",
          "documentation": "A Unix timestamp (in epoch milliseconds since Jan 1, 1970 UTC) that denotes where to start processing files. The connector ignores any file with a creation time earlier than this timestamp. Note that the connector only uses this configuration property when no offsets are stored for a connector. This parameter allows new connectors to start from a specific timestamp instead of reading all files in a bucket."
        },
        {
          "name": "directory.delim",
          "type": "STRING",
          "required": false,
          "default_value": "/",
          "importance": "MEDIUM",
          "group": "Storage",
          "order_in_group": 4,
          "display_name": "Directory Delimiter Character",
          "documentation": "Directory delimiter pattern."
        },
        {
          "name": "ui.behavior.on.error",
          "type": "STRING",
          "group": "Storage",
          "order_in_group": 5,
          "importance": "MEDIUM",
          "display_name": "Behavior on Errors",
          "documentation": "Error handling behavior setting for storage connectors. Must be configured to one of the following: IGNORE, FAIL",
          "default_value": "FAIL",
          "recommended_values": [
            "IGNORE",
            "FAIL"
          ]
        },
        {
          "name": "format.bytearray.separator",
          "type": "STRING",
          "importance": "MEDIUM",
          "group": "Storage",
          "order_in_group": 7,
          "display_name": "Byte Array Line Separator",
          "documentation": "String inserted between records for ByteArrayFormat. Defaults to `\\n` and may contain escape sequences like `\\n`.  An input record that contains the line separator looks like multiple records in the storage object input."
        },
        {
          "name": "format.json.schema.enable",
          "type": "BOOLEAN",
          "importance": "MEDIUM",
          "group": "Storage",
          "order_in_group": 8,
          "default_value": "false",
          "display_name": "Enable Embedded JSON Schema",
          "documentation": "Enable reading of JSON messages with schema embedded"
        },
        {
          "name": "csv.separator.char",
          "type": "INT",
          "required": false,
          "importance": "LOW",
          "group": "Storage",
          "order_in_group": 9,
          "default_value": 44,
          "display_name": "CSV - Separator character",
          "documentation": "The character that separates each field in the form of an integer. Typically in a CSV file, this is a ``,`` (``44``) character. A TSV file would use a tab (``9``) character. Applicable only if ``input.data.format`` is set to ``CSV``."
        },
        {
          "name": "csv.first.row.as.header",
          "type": "BOOLEAN",
          "required": false,
          "importance": "MEDIUM",
          "group": "Storage",
          "order_in_group": 10,
          "default_value": "true",
          "display_name": "CSV - Treat first row as header",
          "documentation": "Flag to indicate if the fist row of data contains the header of the file. Applicable only if ``input.data.format`` is set to ``CSV``."
        },
        {
          "name": "csv.null.field.indicator",
          "type": "STRING",
          "required": false,
          "default_value": "NEITHER",
          "importance": "LOW",
          "group": "Storage",
          "order_in_group": 11,
          "display_name": "CSV - Null field indicator",
          "documentation": "Indicator to determine how the CSV Reader can determine if a field is null. For more information, see http://opencsv.sourceforge.net/apidocs/com/opencsv/enums/CSVReaderNullFieldIndicator.html. Applicable only if ``input.data.format`` is set to ``CSV``  .",
          "recommended_values": [
            "EMPTY_SEPARATORS",
            "EMPTY_QUOTES",
            "BOTH",
            "NEITHER"
          ]
        },
        {
          "name": "value.schema",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "Storage",
          "order_in_group": 12,
          "display_name": "CSV - Value schema",
          "documentation": "The schema for the value written to Kafka. A default schema will be auto-generated if no value schema is provided. Applicable only if ``input.data.format`` is set to ``CSV``."
        },
        {
          "name": "csv.file.charset",
          "type": "STRING",
          "required": false,
          "default_value": "UTF-8",
          "importance": "LOW",
          "group": "Storage",
          "order_in_group": 13,
          "display_name": "CSV - File character set",
          "documentation": "Character set to read file with. Applicable only if ``input.data.format`` is set to ``CSV``",
          "recommender": {
            "name": "character.encoding"
          }
        },
        {
          "name": "csv.skip.lines",
          "type": "INT",
          "required": false,
          "importance": "LOW",
          "group": "Storage",
          "order_in_group": 14,
          "default_value": 0,
          "display_name": "CSV - Skip lines",
          "documentation": "The number of lines to skip in the beginning of the file. Applicable only if ``input.data.format`` is set to ``CSV``."
        },
        {
          "name": "csv.escape.char",
          "type": "INT",
          "required": false,
          "importance": "LOW",
          "group": "Storage",
          "order_in_group": 15,
          "default_value": 92,
          "display_name": "CSV - Escape character",
          "documentation": "The character as an integer to use when a special character is encountered. The default escape character is typically a ``\\`` (``92``). Applicable only if ``input.data.format`` is set to ``CSV``."
        },
        {
          "name": "csv.quote.char",
          "type": "INT",
          "required": false,
          "importance": "LOW",
          "group": "Storage",
          "order_in_group": 16,
          "default_value": 34,
          "display_name": "CSV - Quote character",
          "documentation": "The character that is used to quote a field. Typically in a CSV file,  this is a ``\"`` (``34``) character. This happens when the ``csv.separator.char`` is within the data. Applicable only if ``input.data.format`` is set to ``CSV``."
        },
        {
          "name": "csv.ignore.leading.whitespace",
          "type": "BOOLEAN",
          "required": false,
          "importance": "LOW",
          "group": "Storage",
          "order_in_group": 17,
          "default_value": "true",
          "display_name": "CSV - Ignore leading whitespace",
          "documentation": "Sets the ignore leading whitespace setting. If ``true``, the white space in front of a quote in a field is ignored. Applicable only if ``input.data.format`` is set to ``CSV``."
        },
        {
          "name": "csv.ignore.quotations",
          "type": "BOOLEAN",
          "required": false,
          "importance": "LOW",
          "group": "Storage",
          "order_in_group": 18,
          "default_value": "false",
          "display_name": "CSV - Ignore quotations",
          "documentation": "Sets the ignore quotations mode. If ``true``, quotations are ignored. Applicable only if ``input.data.format`` is set to ``CSV``."
        },
        {
          "name": "csv.strict.quotes",
          "type": "BOOLEAN",
          "required": false,
          "importance": "LOW",
          "group": "Storage",
          "order_in_group": 19,
          "default_value": "false",
          "display_name": "CSV - Use strict quotes",
          "documentation": "Sets the strict quotes setting. If ``true``, characters outside the quotes are ignored. Applicable only if ``input.data.format`` is set to ``CSV``."
        },
        {
          "name": "s3.poll.interval.ms",
          "type": "LONG",
          "importance": "MEDIUM",
          "default_value": "60000",
          "group": "Data polling policy",
          "order_in_group": 1,
          "display_name": "S3 poll interval (ms)",
          "documentation": "Frequency in milliseconds to poll for new or removed folders. This may result in updated task configurations starting to poll for data in added folders or stopping polling for data in removed folders"
        },
        {
          "name": "record.batch.max.size",
          "type": "INT",
          "importance": "MEDIUM",
          "default_value": "200",
          "group": "Data polling policy",
          "order_in_group": 2,
          "display_name": "Max records per poll",
          "documentation": "The maximum amount of records to return each time storage is polled."
        },
        {
          "name": "tasks.max",
          "type": "INT",
          "group": "Number of tasks for this connector",
          "required": true,
          "order_in_group": 1,
          "importance": "HIGH",
          "display_name": "Tasks max",
          "documentation": "The total number of tasks to run in parallel."
        }
      ],
      "connector_configs": [
        {
          "name": "consumer.bootstrap.servers",
          "value": "${kafka.endpoint}"
        },
        {
          "name": "producer.bootstrap.servers",
          "value": "${kafka.endpoint}"
        },
        {
          "name": "consumer.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "consumer.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "producer.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "producer.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "consumer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "consumer.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "producer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "producer.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "admin.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "admin.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "format.class",
          "switch": {
            "input.data.format": {
              "AVRO": "io.confluent.connect.s3.format.avro.AvroFormat",
              "JSON": "io.confluent.connect.s3.format.json.JsonFormat",
              "BYTES": "io.confluent.connect.s3.format.bytearray.ByteArrayFormat",
              "PARQUET": "io.confluent.connect.s3.format.parquet.ParquetFormat",
              "CSV": "io.confluent.connect.s3.format.csv.CsvFormat"
            }
          }
        },
        {
          "name": "value.converter",
          "switch": {
            "output.data.format": {
              "AVRO": "io.confluent.connect.avro.AvroConverter",
              "JSON_SR": "io.confluent.connect.json.JsonSchemaConverter",
              "PROTOBUF": "io.confluent.connect.protobuf.ProtobufConverter",
              "JSON": "org.apache.kafka.connect.json.JsonConverter",
              "STRING": "org.apache.kafka.connect.storage.StringConverter",
              "BYTES": "org.apache.kafka.connect.converters.ByteArrayConverter"
            }
          }
        },
        {
          "name": "value.converter.schema.registry.url",
          "switch": {
            "output.data.format": {
              "AVRO": "${schema.registry.url}",
              "JSON_SR": "${schema.registry.url}",
              "PROTOBUF": "${schema.registry.url}"
            }
          }
        },
        {
          "name": "value.converter.basic.auth.credentials.source",
          "switch": {
            "output.data.format": {
              "AVRO": "USER_INFO",
              "JSON_SR": "USER_INFO",
              "PROTOBUF": "USER_INFO"
            }
          }
        },
        {
          "name": "value.converter.basic.auth.user.info",
          "switch": {
            "output.data.format": {
              "AVRO": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}",
              "JSON_SR": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}",
              "PROTOBUF": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}"
            }
          }
        },
        {
          "name": "topics.dir"
        },
        {
          "name": "directory.delim"
        },
        {
          "name": "s3.path.style.access",
          "switch": {
            "ui.s3.path.style.access": {
              "YES": "true",
              "NO": "false"
            }
          }
        },
        {
          "name": "s3.wan.mode",
          "switch": {
            "ui.s3.wan.mode": {
              "YES": "true",
              "NO": "false"
            }
          }
        },
        {
          "name": "ui.s3.http.send.expect.continue",
          "switch": {
            "s3.http.send.expect.continue": {
              "YES": "true",
              "NO": "false"
            }
          }
        },
        {
          "name": "s3.ssea.name",
          "switch": {
            "ui.s3.ssea.name": {
              "NONE": "",
              "AES256": "aes256",
              "AWS:KMS": "kms"
            }
          }
        },
        {
          "name": "s3.sse.customer.key"
        },
        {
          "name": "format.bytearray.separator"
        },
        {
          "name": "format.json.schema.enable"
        },
        {
          "name": "csv.separator.char"
        },
        {
          "name": "csv.first.row.as.header"
        },
        {
          "name": "csv.null.field.indicator"
        },
        {
          "name": "value.schema"
        },
        {
          "name": "csv.file.charset"
        },
        {
          "name": "csv.skip.lines"
        },
        {
          "name": "csv.escape.char"
        },
        {
          "name": "csv.quote.char"
        },
        {
          "name": "csv.ignore.leading.whitespace"
        },
        {
          "name": "csv.ignore.quotations"
        },
        {
          "name": "csv.strict.quotes"
        },
        {
          "name": "csv.rfc.4180.parser.enabled"
        },
        {
          "name": "csv.keep.carriage.return"
        },
        {
          "name": "task.batch.size"
        },
        {
          "name": "tasks.max"
        },
        {
          "name": "s3.poll.interval.ms"
        },
        {
          "name": "record.batch.max.size"
        },
        {
          "name": "file.discovery.starting.timestamp"
        },
        {
          "name": "s3.bucket.name"
        },
        {
          "name": "s3.region"
        },
        {
          "name": "topic.regex.list"
        },
        {
          "name": "s3.part.size",
          "value": "5242880"
        },
        {
          "name": "schema.cache.size",
          "value": 1000
        },
        {
          "name": "key.converter.schemas.enable",
          "value": "false"
        },
        {
          "name": "key.converter",
          "value": "org.apache.kafka.connect.storage.StringConverter"
        },
        {
          "name": "enhanced.avro.schema.support",
          "value": "true"
        },
        {
          "name": "s3.credentials.provider.class",
          "switch": {
            "authentication.method": {
              "Access Keys": "io.confluent.cloud.connect.storage.DummyCloudPropertiesCredentialsProvider",
              "IAM Roles": "io.confluent.provider.integration.aws.v1.ChainedAssumeRoleCredentialsProvider"
            }
          }
        },
        {
          "name": "s3.credentials.provider.customer.aws.iam.role.arn",
          "value": "${customer.aws.iam.role.arn}"
        },
        {
          "name": "s3.credentials.provider.external.id",
          "value": "${external.id}"
        },
        {
          "name": "s3.credentials.provider.confluent.aws.iam.role.arn",
          "value": "${confluent.aws.iam.role.arn}"
        },
        {
          "name": "s3.credentials.provider.middleware.external.id",
          "value": "${middleware.external.id}"
        },
        {
          "name": "s3.credentials.provider.aws.iam.assume.role.session.name",
          "value": "${aws.iam.assume.role.session.name}"
        },
        {
          "name": "s3.credentials.provider.provider.integration.max.retries",
          "value": "${provider.integration.max.retries}"
        },
        {
          "name": "s3.credentials.provider.file.path",
          "value": "/mnt/secrets/connect-external-secrets-{{.logicalClusterId}}.properties"
        },
        {
          "name": "s3.part.retries"
        },
        {
          "name": "s3.retry.backoff.ms"
        },
        {
          "name": "storage.class",
          "value": "io.confluent.connect.s3.storage.S3Storage"
        },
        {
          "name": "locale",
          "value": "en"
        },
        {
          "name": "timezone",
          "value": "UTC"
        },
        {
          "name": "timestamp.extractor",
          "value": "Record"
        },
        {
          "name": "confluent.topic.bootstrap.servers",
          "value": "Placeholder value to pass connector validations"
        },
        {
          "name": "mode",
          "value": "GENERIC"
        },
        {
          "name": "bucket.listing.max.objects.threshold",
          "value": "10000000"
        },
        {
          "name": "behavior.on.error",
          "switch": {
            "ui.behavior.on.error": {
              "IGNORE": "ignore",
              "FAIL": "fail"
            }
          }
        },
        {
          "name": "aws.access.key.id"
        },
        {
          "name": "aws.secret.access.key"
        },
        {
          "name": "connector.endpoint",
          "value": "s3.${s3.region}.amazonaws.com"
        }
      ]
    },
    {
      "template_id": "common",
      "global_validators": [
        {
          "name": "required",
          "priority": "HIGHEST"
        },
        {
          "name": "recommended.values",
          "priority": "HIGHER"
        }
      ],
      "abstract": true,
      "config_defs": [
        {
          "name": "connector.class",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "How should we connect to your data?",
          "order_in_group": 1,
          "display_name": "Connector class"
        },
        {
          "name": "name",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "How should we connect to your data?",
          "order_in_group": 2,
          "display_name": "Connector name",
          "documentation": "Sets a name for your connector."
        },
        {
          "name": "tasks.max",
          "type": "INT",
          "required": true,
          "importance": "HIGH",
          "group": "Number of tasks for this connector",
          "order_in_group": 1,
          "display_name": "Tasks",
          "documentation": "Maximum number of tasks for the connector."
        },
        {
          "name": "kafka.auth.mode",
          "type": "STRING",
          "required": false,
          "default_value": "KAFKA_API_KEY",
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 1,
          "display_name": "Kafka Cluster Authentication mode",
          "documentation": "Kafka Authentication mode. It can be one of KAFKA_API_KEY or SERVICE_ACCOUNT. It defaults to KAFKA_API_KEY mode.",
          "recommended_values": [
            "SERVICE_ACCOUNT",
            "KAFKA_API_KEY"
          ]
        },
        {
          "name": "kafka.api.key",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 2,
          "display_name": "Kafka API Key",
          "documentation": "Kafka API Key. Required when kafka.auth.mode==KAFKA_API_KEY."
        }
      ],
      "connector_configs": [
        {
          "name": "tasks.max"
        },
        {
          "name": "confluent.topic.bootstrap.servers",
          "value": "Placeholder value to pass connector validations"
        },
        {
          "name": "errors.log.enable",
          "value": "true"
        },
        {
          "name": "errors.log.include.messages",
          "value": "false"
        },
        {
          "name": "errors.retry.timeout",
          "value": "300000"
        },
        {
          "name": "errors.retry.delay.max.ms",
          "value": "30000"
        },
        {
          "name": "value.converter.ignore.modern.dialects",
          "value": "true"
        }
      ]
    },
    {
      "template_id": "common-kafka-connectivity",
      "abstract": true,
      "config_defs": [],
      "connector_configs": [
        {
          "name": "consumer.override.bootstrap.servers",
          "switch": {
            "connect.metadata_property.kafka.itsl.bootstrap.servers": {
              "UNSET": "${kafka.endpoint}",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.bootstrap.servers}"
            }
          }
        },
        {
          "name": "producer.override.bootstrap.servers",
          "switch": {
            "connect.metadata_property.kafka.itsl.bootstrap.servers": {
              "UNSET": "${kafka.endpoint}",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.bootstrap.servers}"
            }
          }
        },
        {
          "name": "admin.override.bootstrap.servers",
          "switch": {
            "connect.metadata_property.kafka.itsl.bootstrap.servers": {
              "UNSET": "${kafka.endpoint}",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.bootstrap.servers}"
            }
          }
        },
        {
          "name": "admin.override.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "producer.override.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "consumer.override.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "admin.override.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "producer.override.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "consumer.override.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "admin.override.security.providers",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "io.confluent.kafka.security.fips.provider.BcFipsProviderCreator,io.confluent.kafka.security.fips.provider.BcFipsJsseProviderCreator,io.confluent.kafka.server.plugins.ssl.ConfluentTrustProviderCreator",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.security.providers",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "io.confluent.kafka.security.fips.provider.BcFipsProviderCreator,io.confluent.kafka.security.fips.provider.BcFipsJsseProviderCreator,io.confluent.kafka.server.plugins.ssl.ConfluentTrustProviderCreator",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "consumer.override.security.providers",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "io.confluent.kafka.security.fips.provider.BcFipsProviderCreator,io.confluent.kafka.security.fips.provider.BcFipsJsseProviderCreator,io.confluent.kafka.server.plugins.ssl.ConfluentTrustProviderCreator",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "admin.override.ssl.provider",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "BCJSSE",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.ssl.provider",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "BCJSSE",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "consumer.override.ssl.provider",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "BCJSSE",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "admin.override.ssl.cipher.suites",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CCM,TLS_ECDHE_ECDSA_WITH_AES_128_CCM,TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8,TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_128_CCM_SHA256,TLS_AES_128_CCM_8_SHA256",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.ssl.cipher.suites",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CCM,TLS_ECDHE_ECDSA_WITH_AES_128_CCM,TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8,TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_128_CCM_SHA256,TLS_AES_128_CCM_8_SHA256",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "consumer.override.ssl.cipher.suites",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CCM,TLS_ECDHE_ECDSA_WITH_AES_128_CCM,TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8,TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_128_CCM_SHA256,TLS_AES_128_CCM_8_SHA256",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "admin.override.ssl.enabled.protocols",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLSv1.2,TLSv1.3",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.ssl.enabled.protocols",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLSv1.2,TLSv1.3",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "consumer.override.ssl.enabled.protocols",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLSv1.2,TLSv1.3",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "consumer.override.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "admin.override.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "producer.override.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "producer.override.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        },
        {
          "name": "consumer.override.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "consumer.override.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        },
        {
          "name": "admin.override.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "admin.override.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        }
      ]
    },
    {
      "template_id": "common-source",
      "abstract": true,
      "config_defs": [
        {
          "name": "kafka.service.account.id",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 2,
          "display_name": "Kafka Service Account",
          "documentation": "The Service Account that will be used to generate the API keys to communicate with Kafka Cluster."
        },
        {
          "name": "kafka.api.secret",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 3,
          "display_name": "Kafka API Secret",
          "documentation": "Secret associated with Kafka API key. Required when kafka.auth.mode==KAFKA_API_KEY.",
          "dependents": [
            "kafka.api.key"
          ]
        },
        {
          "name": "datapreview.schemas.enable",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "default_value": "false",
          "display_name": "Show schemas in data preview request output",
          "group": "Kafka Cluster credentials",
          "order_in_group": 4,
          "documentation": "This config key only applies to data preview requests and governs whether the data preview output has record schema with it.\nThe visibility condition is set such that it can never be true.\nSo this key does not show in create connector UI."
        },
        {
          "name": "errors.tolerance",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Additional Configs",
          "default_value": "none",
          "display_name": "errors.tolerance",
          "documentation": "Use this property if you would like to configure the connector's error handling behavior. WARNING: This property should be used with CAUTION for SOURCE CONNECTORS as it may lead to dataloss. If you set this property to 'all', the connector will not fail on errant records, but will instead log them (and send to DLQ for Sink Connectors) and continue processing. If you set this property to 'none', the connector task will fail on errant records.",
          "recommended_values": [
            "none",
            "all"
          ]
        },
        {
          "name": "producer.override.linger.ms",
          "type": "LONG",
          "required": "false",
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "producer.override.linger.ms",
          "documentation": "The producer groups together any records that arrive in between request transmissions into a single batched request. More details can be found in the documentation: https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#linger-ms."
        }
      ],
      "connector_configs": [
        {
          "name": "topic.creation.default.replication.factor",
          "value": "3"
        },
        {
          "name": "topic.creation.default.partitions",
          "value": "1"
        },
        {
          "name": "errors.tolerance"
        },
        {
          "name": "producer.override.max.request.size",
          "switch": {
            "kafka.dedicated": {
              "true": "20971610",
              "false": "8388698"
            }
          }
        },
        {
          "name": "topic.creation.default.max.message.bytes",
          "switch": {
            "kafka.dedicated": {
              "true": "20971520",
              "false": "8388608"
            }
          }
        },
        {
          "name": "datapreview.schemas.enable"
        },
        {
          "name": "producer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "producer.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "admin.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "admin.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "producer.override.linger.ms"
        },
        {
          "name": "consumer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "consumer.override.sasl.mechanism",
          "value": "PLAIN"
        }
      ]
    },
    {
      "template_id": "schema-registry",
      "abstract": true,
      "config_defs": [
        {
          "name": "schema.context.name",
          "type": "STRING",
          "group": "Schema Config",
          "order_in_group": 1,
          "importance": "MEDIUM",
          "display_name": "Schema context",
          "documentation": "Add a schema context name. A schema context represents an independent scope in Schema Registry. It is a separate sub-schema tied to topics in different Kafka clusters that share the same Schema Registry instance. If not used, the connector uses the default schema configured for Schema Registry in your Confluent Cloud environment.",
          "default_value": "default",
          "dependents": [
            "schema.registry.url"
          ]
        }
      ],
      "connector_configs": []
    },
    {
      "template_id": "csfle-source",
      "abstract": true,
      "config_defs": [
        {
          "name": "csfle.enabled",
          "type": "BOOLEAN",
          "default_value": "false",
          "importance": "HIGH",
          "group": "CSFLE",
          "order_in_group": 1,
          "docs_hidden": true,
          "display_name": "Enable Client-Side Field Level Encryption",
          "documentation": "Determines whether the connector honours CSFLE rules or not",
          "conditional_metadata_provider": [
            {
              "name": "metadata.conditional.visible",
              "arguments": {
                "config": "csfle.configs.visible",
                "values": "false"
              },
              "metadata": {
                "visibility": "false"
              }
            }
          ]
        },
        {
          "name": "sr.service.account.id",
          "type": "STRING",
          "importance": "HIGH",
          "group": "CSFLE",
          "order_in_group": 2,
          "docs_hidden": true,
          "display_name": "Schema Registry Service Account",
          "documentation": "Select the service account that has appropriate permissions to schemas and encryption keys in the Schema Registry."
        }
      ],
      "connector_configs": [
        {
          "name": "csfle.enabled"
        },
        {
          "name": "value.converter.rule.executors._ENCRYPT_.disabled",
          "switch": {
            "csfle.enabled": {
              "true": "false",
              "false": "true"
            }
          }
        },
        {
          "name": "value.converter.rule.executors._ENCRYPT_.onFailure",
          "switch": {
            "csfle.enabled": {
              "true": "ERROR"
            }
          }
        },
        {
          "name": "value.converter.latest.cache.ttl.sec",
          "switch": {
            "csfle.enabled": {
              "true": "300"
            }
          }
        },
        {
          "name": "key.converter.rule.executors._ENCRYPT_.disabled",
          "switch": {
            "csfle.enabled": {
              "true": "false",
              "false": "true"
            }
          }
        },
        {
          "name": "key.converter.rule.executors._ENCRYPT_.onFailure",
          "switch": {
            "csfle.enabled": {
              "true": "ERROR"
            }
          }
        },
        {
          "name": "key.converter.auto.register.schemas",
          "switch": {
            "csfle.enabled": {
              "true": "false"
            }
          }
        },
        {
          "name": "key.converter.use.latest.version",
          "switch": {
            "csfle.enabled": {
              "true": "true"
            }
          }
        },
        {
          "name": "key.converter.latest.cache.ttl.sec",
          "switch": {
            "csfle.enabled": {
              "true": "300"
            }
          }
        }
      ]
    },
    {
      "template_id": "aws-authentication",
      "abstract": true,
      "config_defs": [
        {
          "name": "authentication.method",
          "type": "STRING",
          "required": false,
          "default_value": "Access Keys",
          "importance": "HIGH",
          "group": "AWS credentials",
          "order_in_group": 1,
          "display_name": "Authentication method",
          "documentation": "Select how you want to authenticate with AWS.",
          "recommended_values": [
            "IAM Roles",
            "Access Keys"
          ],
          "conditional_metadata_provider": [
            {
              "name": "metadata.conditional.visible",
              "arguments": {
                "config": "provider.integration.visible",
                "values": "false"
              },
              "metadata": {
                "visibility": "false"
              }
            }
          ]
        },
        {
          "name": "provider.integration.id",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "AWS credentials",
          "order_in_group": 2,
          "display_name": "Provider Integration",
          "documentation": "Select an existing integration that has access to your resource. In case you need to integrate a new IAM role, use provider integration"
        }
      ],
      "connector_configs": [
        {
          "name": "authentication.method",
          "switch": {
            "authentication.method": {
              "IAM Roles": "IAM Roles",
              "Access Keys": "Access Keys"
            }
          }
        },
        {
          "name": "provider.integration.id"
        },
        {
          "name": "customer.aws.iam.role.arn"
        },
        {
          "name": "external.id"
        },
        {
          "name": "middleware.external.id"
        },
        {
          "name": "confluent.aws.iam.role.arn"
        },
        {
          "name": "aws.iam.assume.role.session.name"
        },
        {
          "name": "provider.integration.max.retries"
        },
        {
          "name": "connect.aws.iam.role.validation.disable"
        }
      ]
    },
    {
      "template_id": "source-connector-output-data-format",
      "abstract": true,
      "config_defs": [
        {
          "name": "output.data.format",
          "type": "STRING",
          "required": true,
          "default_value": "JSON",
          "importance": "HIGH",
          "group": "Output messages",
          "order_in_group": 1,
          "display_name": "Select output record value format",
          "alias": "data.format",
          "documentation": "Sets the output Kafka record value format. Valid entries are AVRO, JSON_SR, PROTOBUF, or JSON. Note that you need to have Confluent Cloud Schema Registry configured if using a schema-based message format like AVRO, JSON_SR, and PROTOBUF",
          "recommended_values": [
            "AVRO",
            "JSON_SR",
            "PROTOBUF",
            "JSON"
          ],
          "dependents": [
            "schema.registry.url"
          ]
        },
        {
          "name": "value.converter.schemas.enable",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "Additional Configs",
          "alias": "schemas.enable",
          "display_name": "value.converter.schemas.enable",
          "documentation": "Include schemas within each of the serialized values. Input messages must contain `schema` and `payload` fields and may not contain additional fields. For plain JSON data, set this to `false`. Applicable for JSON Converter."
        },
        {
          "name": "value.converter.replace.null.with.default",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "alias": "replace.null.with.default",
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "value.converter.replace.null.with.default",
          "documentation": "Whether to replace fields that have a default value and that are null to the default value. When set to true, the default value is used, otherwise null is used. Applicable for JSON Converter."
        },
        {
          "name": "value.converter.ignore.default.for.nullables",
          "alias": "ignore.default.for.nullables",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "value.converter.ignore.default.for.nullables",
          "documentation": "When set to true, this property ensures that the corresponding record in Kafka is NULL, instead of showing the default column value. Applicable for AVRO,PROTOBUF and JSON_SR Converters."
        },
        {
          "name": "value.converter.scrub.invalid.names",
          "type": "BOOLEAN",
          "documentation": "Whether to scrub invalid names by replacing invalid characters with valid characters. Applicable for Avro and Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.scrub.invalid.names"
        }
      ],
      "connector_configs": [
        {
          "name": "value.converter",
          "switch": {
            "output.data.format": {
              "AVRO": "io.confluent.connect.avro.AvroConverter",
              "JSON_SR": "io.confluent.connect.json.JsonSchemaConverter",
              "PROTOBUF": "io.confluent.connect.protobuf.ProtobufConverter",
              "JSON": "org.apache.kafka.connect.json.JsonConverter"
            }
          }
        },
        {
          "name": "value.converter.schemas.enable"
        },
        {
          "name": "value.converter.replace.null.with.default"
        },
        {
          "name": "value.converter.schema.registry.url",
          "switch": {
            "output.data.format": {
              "AVRO": "${schema.registry.url}",
              "JSON_SR": "${schema.registry.url}",
              "PROTOBUF": "${schema.registry.url}"
            }
          }
        },
        {
          "name": "value.converter.basic.auth.credentials.source",
          "switch": {
            "output.data.format": {
              "AVRO": "USER_INFO",
              "JSON_SR": "USER_INFO",
              "PROTOBUF": "USER_INFO"
            }
          }
        },
        {
          "name": "value.converter.basic.auth.user.info",
          "switch": {
            "output.data.format": {
              "AVRO": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}",
              "JSON_SR": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}",
              "PROTOBUF": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}"
            }
          }
        },
        {
          "name": "value.converter.ignore.default.for.nullables"
        },
        {
          "name": "value.converter.scrub.invalid.names",
          "dynamic.mapper": {
            "name": "value.converter.scrub.invalid.names.mapper"
          }
        }
      ]
    },
    {
      "template_id": "super",
      "abstract": true,
      "config_defs": [
        {
          "name": "auto.restart.on.user.error",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "Auto-restart policy",
          "order_in_group": 1,
          "display_name": "Enable Connector Auto-restart",
          "documentation": "Enable connector to automatically restart on user-actionable errors."
        },
        {
          "name": "value.converter.enhanced.avro.schema.support",
          "type": "BOOLEAN",
          "documentation": "Enable enhanced schema support to preserve package information and Enums. Applicable for Avro Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.enhanced.avro.schema.support"
        },
        {
          "name": "value.converter.connect.meta.data",
          "type": "BOOLEAN",
          "documentation": "Allow the Connect converter to add its metadata to the output schema. Applicable for Avro Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.connect.meta.data"
        },
        {
          "name": "value.converter.enhanced.protobuf.schema.support",
          "type": "BOOLEAN",
          "documentation": "Enable enhanced schema support to preserve package information. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.enhanced.protobuf.schema.support"
        },
        {
          "name": "value.converter.generate.index.for.unions",
          "type": "BOOLEAN",
          "documentation": "Whether to generate an index suffix for unions. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.generate.index.for.unions"
        },
        {
          "name": "value.converter.int.for.enums",
          "type": "BOOLEAN",
          "documentation": "Whether to represent enums as integers. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.int.for.enums"
        },
        {
          "name": "value.converter.optional.for.nullables",
          "type": "BOOLEAN",
          "documentation": "Whether nullable fields should be specified with an optional label. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.optional.for.nullables"
        },
        {
          "name": "value.converter.generate.struct.for.nulls",
          "type": "BOOLEAN",
          "documentation": "Whether to generate a struct variable for null values. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.generate.struct.for.nulls"
        },
        {
          "name": "value.converter.wrapper.for.nullables",
          "type": "BOOLEAN",
          "documentation": "Whether nullable fields should use primitive wrapper messages. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.wrapper.for.nullables"
        },
        {
          "name": "value.converter.wrapper.for.raw.primitives",
          "type": "BOOLEAN",
          "documentation": "Whether a wrapper message should be interpreted as a raw primitive at root level. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.wrapper.for.raw.primitives"
        },
        {
          "name": "value.converter.object.additional.properties",
          "type": "BOOLEAN",
          "documentation": "Whether to allow additional properties for object schemas. Applicable for JSON_SR Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.object.additional.properties"
        },
        {
          "name": "value.converter.use.optional.for.nonrequired",
          "type": "BOOLEAN",
          "documentation": "Whether to set non-required properties to be optional. Applicable for JSON_SR Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.use.optional.for.nonrequired"
        },
        {
          "name": "value.converter.decimal.format",
          "type": "STRING",
          "recommended_values": [
            "BASE64",
            "NUMERIC"
          ],
          "documentation": "Specify the JSON/JSON_SR serialization format for Connect DECIMAL logical type values with two allowed literals:\nBASE64 to serialize DECIMAL logical types as base64 encoded binary data and\nNUMERIC to serialize Connect DECIMAL logical type values in JSON/JSON_SR as a number representing the decimal value.",
          "group": "Additional Configs",
          "alias": "json.output.decimal.format",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.decimal.format",
          "default_value": "BASE64"
        },
        {
          "name": "value.converter.auto.register.schemas",
          "type": "BOOLEAN",
          "documentation": "Specify if the Serializer should attempt to register the Schema.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.auto.register.schemas"
        },
        {
          "name": "value.converter.use.latest.version",
          "type": "BOOLEAN",
          "documentation": "Use latest version of schema in subject for serialization when auto.register.schemas is false.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.use.latest.version"
        },
        {
          "name": "value.converter.latest.compatibility.strict",
          "type": "BOOLEAN",
          "documentation": "Verify latest subject version is backward compatible when `use.latest.version` is `true`.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.latest.compatibility.strict"
        },
        {
          "name": "key.converter.key.subject.name.strategy",
          "type": "STRING",
          "default_value": "TopicNameStrategy",
          "recommended_values": [
            "TopicNameStrategy",
            "RecordNameStrategy",
            "TopicRecordNameStrategy"
          ],
          "alias": "key.subject.name.strategy",
          "documentation": "How to construct the subject name for key schema registration.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "key.converter.key.subject.name.strategy"
        },
        {
          "name": "value.converter.value.subject.name.strategy",
          "type": "STRING",
          "recommended_values": [
            "TopicNameStrategy",
            "RecordNameStrategy",
            "TopicRecordNameStrategy"
          ],
          "default_value": "TopicNameStrategy",
          "alias": "subject.name.strategy,value.subject.name.strategy",
          "documentation": "Determines how to construct the subject name under which the value schema is registered with Schema Registry.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.value.subject.name.strategy"
        },
        {
          "name": "value.converter.reference.subject.name.strategy",
          "type": "STRING",
          "recommended_values": [
            "DefaultReferenceSubjectNameStrategy",
            "QualifiedReferenceSubjectNameStrategy"
          ],
          "default_value": "DefaultReferenceSubjectNameStrategy",
          "documentation": "Set the subject reference name strategy for value. Valid entries are DefaultReferenceSubjectNameStrategy or QualifiedReferenceSubjectNameStrategy. Note that the subject reference name strategy can be selected only for PROTOBUF format with the default strategy being DefaultReferenceSubjectNameStrategy.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.reference.subject.name.strategy"
        },
        {
          "name": "value.converter.allow.optional.map.keys",
          "type": "BOOLEAN",
          "documentation": "Allow optional string map key when converting from Connect Schema to Avro Schema. Applicable for Avro Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.allow.optional.map.keys"
        },
        {
          "name": "value.converter.flatten.singleton.unions",
          "type": "BOOLEAN",
          "default_value": "false",
          "documentation": "Whether to flatten singleton unions. Applicable for Avro and JSON_SR Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.flatten.singleton.unions"
        },
        {
          "name": "value.converter.optional.for.proto2",
          "type": "BOOLEAN",
          "documentation": "Whether proto2 optionals are supported. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.optional.for.proto2"
        },
        {
          "name": "value.converter.flatten.unions",
          "type": "BOOLEAN",
          "documentation": "Whether to flatten unions (oneofs). Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.flatten.unions"
        },
        {
          "name": "header.converter",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "header.converter",
          "documentation": "The converter class for the headers. This is used to serialize and deserialize the headers of the messages.",
          "recommended_values": [
            "org.apache.kafka.connect.storage.SimpleHeaderConverter",
            "org.apache.kafka.connect.storage.StringConverter",
            "org.apache.kafka.connect.json.JsonConverter",
            "org.apache.kafka.connect.converters.BooleanConverter",
            "org.apache.kafka.connect.converters.DoubleConverter",
            "org.apache.kafka.connect.converters.FloatConverter",
            "org.apache.kafka.connect.converters.IntegerConverter",
            "org.apache.kafka.connect.converters.LongConverter",
            "org.apache.kafka.connect.converters.ShortConverter"
          ]
        }
      ],
      "connector_configs": [
        {
          "name": "auto.restart.on.user.error"
        },
        {
          "name": "value.converter.enhanced.avro.schema.support"
        },
        {
          "name": "value.converter.connect.meta.data"
        },
        {
          "name": "value.converter.enhanced.protobuf.schema.support"
        },
        {
          "name": "value.converter.generate.index.for.unions"
        },
        {
          "name": "value.converter.int.for.enums"
        },
        {
          "name": "value.converter.optional.for.nullables"
        },
        {
          "name": "value.converter.generate.struct.for.nulls"
        },
        {
          "name": "value.converter.wrapper.for.nullables"
        },
        {
          "name": "value.converter.wrapper.for.raw.primitives"
        },
        {
          "name": "value.converter.object.additional.properties"
        },
        {
          "name": "value.converter.use.optional.for.nonrequired"
        },
        {
          "name": "value.converter.decimal.format"
        },
        {
          "name": "value.converter.auto.register.schemas",
          "dynamic.mapper": {
            "name": "value.converter.auto.register.schemas.mapper"
          }
        },
        {
          "name": "value.converter.use.latest.version",
          "dynamic.mapper": {
            "name": "value.converter.use.latest.version.mapper"
          }
        },
        {
          "name": "value.converter.latest.compatibility.strict"
        },
        {
          "name": "value.converter.value.subject.name.strategy",
          "dynamic.mapper": {
            "name": "value.converter.value.subject.name.strategy.mapper"
          }
        },
        {
          "name": "key.converter.key.subject.name.strategy",
          "dynamic.mapper": {
            "name": "value.converter.value.subject.name.strategy.mapper"
          }
        },
        {
          "name": "value.converter.reference.subject.name.strategy",
          "dynamic.mapper": {
            "name": "value.converter.reference.subject.name.strategy.mapper"
          }
        },
        {
          "name": "value.converter.allow.optional.map.keys"
        },
        {
          "name": "value.converter.flatten.singleton.unions"
        },
        {
          "name": "value.converter.optional.for.proto2"
        },
        {
          "name": "value.converter.flatten.unions"
        },
        {
          "name": "header.converter"
        },
        {
          "name": "key.converter.use.apache.http.client"
        },
        {
          "name": "value.converter.use.apache.http.client"
        }
      ]
    },
    {
      "template_id": "super-source",
      "abstract": true,
      "config_defs": [
        {
          "name": "producer.override.compression.type",
          "type": "STRING",
          "recommended_values": [
            "none",
            "gzip",
            "snappy",
            "lz4",
            "zstd"
          ],
          "documentation": "The compression type for all data generated by the producer. Valid values are none, gzip, snappy, lz4, and zstd.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "producer.override.compression.type"
        }
      ],
      "connector_configs": [
        {
          "name": "producer.override.compression.type"
        }
      ]
    }
  ]
}