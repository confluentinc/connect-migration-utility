{
  "templates": [
    {
      "template_id": "CosmosDbSourceV2",
      "connector_type": "SOURCE",
      "connector.class": "com.azure.cosmos.kafka.connect.CosmosSourceConnector",
      "config_defs": [
        {
          "name": "azure.cosmos.account.endpoint",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "Connect to your Cosmos DB database",
          "order_in_group": 1,
          "display_name": "Cosmos endpoint",
          "documentation": "Cosmos endpoint URL. For example: https://connect-cosmosdb.documents.azure.com:443/.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.source.database.name",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "Connect to your Cosmos DB database",
          "order_in_group": 2,
          "display_name": "Cosmos DB database name",
          "documentation": "Name of the database to read from.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.source.containers.topicMap",
          "type": "STRING",
          "importance": "MEDIUM",
          "group": "Container details",
          "order_in_group": 2,
          "display_name": "Cosmos container topic map",
          "documentation": "A comma delimited list of Kafka topics mapped to Cosmos containers. For example: topic1#con1,topic2#con2. By default, the container name is used as the name of the Kafka topic to publish data to, but you can use this property to override the default configuration.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "output.data.format",
          "type": "STRING",
          "required": true,
          "default_value": "JSON_SR",
          "importance": "HIGH",
          "group": "Output messages",
          "order_in_group": 1,
          "display_name": "Output Kafka record value format",
          "documentation": "Sets the output Kafka record value format. Valid entries are AVRO, JSON_SR, or PROTOBUF. Note that you need to have Confluent Cloud Schema Registry configured when using a schema-based message format like AVRO, JSON_SR, and PROTOBUF.",
          "recommended_values": [
            "AVRO",
            "JSON_SR",
            "PROTOBUF"
          ],
          "dependents": [
            "schema.registry.url"
          ]
        },
        {
          "name": "azure.cosmos.source.changeFeed.startFrom",
          "type": "STRING",
          "importance": "HIGH",
          "default_value": "Beginning",
          "required": true,
          "group": "ChangeFeed details",
          "order_in_group": 1,
          "display_name": "Change feed start from",
          "documentation": "ChangeFeed Start from settings (Now, Beginning or a certain point in time (UTC) for example 2020-02-10T14:15:03) - the default value is ``Beginning``.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.source.changeFeed.mode",
          "type": "STRING",
          "importance": "HIGH",
          "required": true,
          "group": "ChangeFeed details",
          "default_value": "LatestVersion",
          "order_in_group": 1,
          "display_name": "ChangeFeed mode",
          "documentation": "ChangeFeed mode (LatestVersion or AllVersionsAndDeletes)",
          "recommended_values": [
            "LatestVersion",
            "AllVersionsAndDeletes"
          ]
        },
        {
          "name": "azure.cosmos.source.changeFeed.maxItemCountHint",
          "type": "INT",
          "importance": "MEDIUM",
          "default_value": 1000,
          "group": "ChangeFeed details",
          "order_in_group": 1,
          "display_name": "Maximum number hint of documents returned in single request",
          "documentation": "The maximum number of documents returned in a single change feed request. But the number of items received might be higher than the specified value if multiple items are changed by the same transaction. The default is 1000."
        },
        {
          "name": "azure.cosmos.source.metadata.poll.delay.ms",
          "type": "INT",
          "default_value": 300000,
          "importance": "MEDIUM",
          "group": "Metadata details",
          "order_in_group": 1,
          "display_name": "Metadata polling delay in ms",
          "documentation": "Indicates how often to check the metadata changes (including container split/merge, adding/removing/recreated containers). When changes are detected, it will reconfigure the tasks. Default is 5 minutes"
        },
        {
          "name": "azure.cosmos.source.metadata.storage.type",
          "type": "STRING",
          "default_value": "Kafka",
          "importance": "MEDIUM",
          "required": true,
          "group": "Metadata details",
          "order_in_group": 1,
          "display_name": "Storage source of metadata",
          "documentation": "The storage type of the metadata. Two types are supported: Cosmos, Kafka.",
          "recommended_values": [
            "Cosmos",
            "Kafka"
          ]
        },
        {
          "name": "azure.cosmos.source.metadata.storage.name.prefix",
          "type": "STRING",
          "default_value": "cosmos.metadata.topic",
          "importance": "MEDIUM",
          "group": "Metadata details",
          "required": true,
          "order_in_group": 1,
          "display_name": "Metadata storage name Prefix",
          "documentation": "The resource name of the metadata storage prefix. If metadata storage type is Kafka topic, then this config refers to kafka topic name, the metadata topic will be created if it does not already exist, else it will use the pre-created topic. If metadata storage type is ``Cosmos``, then this config refers to container name, for ``MasterKey`` auth, this container will be created with ``AutoScale`` with 4000 RU if not already exists, for ``ServicePrincipal`` auth, it requires the container to be created ahead of time .",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.source.messageKey.enabled",
          "type": "BOOLEAN",
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "Message key details",
          "order_in_group": 1,
          "display_name": "Kafka record message key enabled",
          "documentation": "Whether to set the kafka record message key."
        },
        {
          "name": "azure.cosmos.source.containers.includeAll",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "HIGH",
          "group": "Container details",
          "order_in_group": 3,
          "display_name": "Include all containers",
          "documentation": "Flag to indicate whether reading from all containers."
        },
        {
          "name": "azure.cosmos.source.containers.includedList",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Container details",
          "order_in_group": 4,
          "display_name": "Containers included",
          "documentation": "Containers included. This config will be ignored if kafka.connect.cosmos.source.containers.includeAll is true.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.source.messageKey.field",
          "type": "STRING",
          "required": false,
          "default_value": "id",
          "importance": "HIGH",
          "group": "Message key details",
          "order_in_group": 3,
          "display_name": "Kafka message key field",
          "documentation": "The document field to use as the message key.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        }
      ],
      "connector_configs": [
        {
          "name": "consumer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "consumer.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "producer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "producer.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "admin.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "admin.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "tasks.max"
        },
        {
          "name": "azure.cosmos.account.endpoint"
        },
        {
          "name": "connect.cosmos.master.key"
        },
        {
          "name": "azure.cosmos.source.database.name"
        },
        {
          "name": "azure.cosmos.source.changeFeed.mode"
        },
        {
          "name": "azure.cosmos.source.containers.topicMap"
        },
        {
          "name": "connect.cosmos.offset.useLatest",
          "value": "true"
        },
        {
          "name": "azure.cosmos.source.messageKey.enabled"
        },
        {
          "name": "azure.cosmos.source.changeFeed.startFrom"
        },
        {
          "name": "azure.cosmos.source.messageKey.field"
        },
        {
          "name": "connect.cosmos.task.timeout"
        },
        {
          "name": "connect.cosmos.task.buffer.size"
        },
        {
          "name": "azure.cosmos.source.changeFeed.maxItemCountHint"
        },
        {
          "name": "azure.cosmos.source.metadata.poll.delay.ms"
        },
        {
          "name": "azure.cosmos.source.metadata.storage.type"
        },
        {
          "name": "connect.cosmos.task.poll.interval"
        },
        {
          "name": "azure.cosmos.source.containers.includeAll"
        },
        {
          "name": "azure.cosmos.source.containers.includedList"
        },
        {
          "name": "key.converter",
          "value": "org.apache.kafka.connect.storage.StringConverter"
        },
        {
          "name": "region.ignore",
          "switch": {
            "cloud.environment": {
              "private": "true",
              "DEFAULT": "${region.ignore}"
            }
          }
        },
        {
          "name": "connect.cosmos.provider.name",
          "value": "CONFLUENT_CLOUD"
        },
        {
          "name": "azure.cosmos.application.name",
          "value": "APN/2.0 Microsoft/2.0 ConfluentCloudKafkaConnectSource/"
        },
        {
          "name": "value.converter",
          "switch": {
            "output.data.format": {
              "AVRO": "io.confluent.connect.avro.AvroConverter",
              "JSON_SR": "io.confluent.connect.json.JsonSchemaConverter",
              "PROTOBUF": "io.confluent.connect.protobuf.ProtobufConverter"
            }
          }
        },
        {
          "name": "value.converter.schema.registry.url",
          "switch": {
            "output.data.format": {
              "AVRO": "${schema.registry.url}",
              "JSON_SR": "${schema.registry.url}",
              "PROTOBUF": "${schema.registry.url}"
            }
          }
        },
        {
          "name": "value.converter.basic.auth.credentials.source",
          "switch": {
            "output.data.format": {
              "AVRO": "USER_INFO",
              "JSON_SR": "USER_INFO",
              "PROTOBUF": "USER_INFO"
            }
          }
        },
        {
          "name": "value.converter.basic.auth.user.info",
          "switch": {
            "output.data.format": {
              "AVRO": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}",
              "JSON_SR": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}",
              "PROTOBUF": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}"
            }
          }
        },
        {
          "name": "value.converter.scrub.invalid.names",
          "switch": {
            "output.data.format": {
              "AVRO": "true",
              "PROTOBUF": "false"
            }
          }
        },
        {
          "name": "azure.cosmos.source.metadata.storage.name",
          "value": "${azure.cosmos.source.metadata.storage.name.prefix}.{{.logicalClusterId}}"
        },
        {
          "name": "connector.endpoint",
          "value": "${azure.cosmos.account.endpoint}"
        }
      ]
    },
    {
      "template_id": "common",
      "global_validators": [
        {
          "name": "required",
          "priority": "HIGHEST"
        },
        {
          "name": "recommended.values",
          "priority": "HIGHER"
        }
      ],
      "abstract": true,
      "config_defs": [
        {
          "name": "connector.class",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "How should we connect to your data?",
          "order_in_group": 1,
          "display_name": "Connector class"
        },
        {
          "name": "name",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "How should we connect to your data?",
          "order_in_group": 2,
          "display_name": "Connector name",
          "documentation": "Sets a name for your connector."
        },
        {
          "name": "tasks.max",
          "type": "INT",
          "required": true,
          "importance": "HIGH",
          "group": "Number of tasks for this connector",
          "order_in_group": 1,
          "display_name": "Tasks",
          "documentation": "Maximum number of tasks for the connector."
        },
        {
          "name": "kafka.auth.mode",
          "type": "STRING",
          "required": false,
          "default_value": "KAFKA_API_KEY",
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 1,
          "display_name": "Kafka Cluster Authentication mode",
          "documentation": "Kafka Authentication mode. It can be one of KAFKA_API_KEY or SERVICE_ACCOUNT. It defaults to KAFKA_API_KEY mode.",
          "recommended_values": [
            "SERVICE_ACCOUNT",
            "KAFKA_API_KEY"
          ]
        },
        {
          "name": "kafka.api.key",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 2,
          "display_name": "Kafka API Key",
          "documentation": "Kafka API Key. Required when kafka.auth.mode==KAFKA_API_KEY."
        }
      ],
      "connector_configs": [
        {
          "name": "tasks.max"
        },
        {
          "name": "confluent.topic.bootstrap.servers",
          "value": "Placeholder value to pass connector validations"
        },
        {
          "name": "errors.log.enable",
          "value": "true"
        },
        {
          "name": "errors.log.include.messages",
          "value": "false"
        },
        {
          "name": "errors.retry.timeout",
          "value": "300000"
        },
        {
          "name": "errors.retry.delay.max.ms",
          "value": "30000"
        },
        {
          "name": "value.converter.ignore.modern.dialects",
          "value": "true"
        }
      ]
    },
    {
      "template_id": "common-kafka-connectivity",
      "abstract": true,
      "config_defs": [],
      "connector_configs": [
        {
          "name": "consumer.override.bootstrap.servers",
          "switch": {
            "connect.metadata_property.kafka.itsl.bootstrap.servers": {
              "UNSET": "${kafka.endpoint}",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.bootstrap.servers}"
            }
          }
        },
        {
          "name": "producer.override.bootstrap.servers",
          "switch": {
            "connect.metadata_property.kafka.itsl.bootstrap.servers": {
              "UNSET": "${kafka.endpoint}",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.bootstrap.servers}"
            }
          }
        },
        {
          "name": "admin.override.bootstrap.servers",
          "switch": {
            "connect.metadata_property.kafka.itsl.bootstrap.servers": {
              "UNSET": "${kafka.endpoint}",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.bootstrap.servers}"
            }
          }
        },
        {
          "name": "admin.override.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "producer.override.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "consumer.override.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "admin.override.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "producer.override.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "consumer.override.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "admin.override.security.providers",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "io.confluent.kafka.security.fips.provider.BcFipsProviderCreator,io.confluent.kafka.security.fips.provider.BcFipsJsseProviderCreator,io.confluent.kafka.server.plugins.ssl.ConfluentTrustProviderCreator",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.security.providers",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "io.confluent.kafka.security.fips.provider.BcFipsProviderCreator,io.confluent.kafka.security.fips.provider.BcFipsJsseProviderCreator,io.confluent.kafka.server.plugins.ssl.ConfluentTrustProviderCreator",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "consumer.override.security.providers",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "io.confluent.kafka.security.fips.provider.BcFipsProviderCreator,io.confluent.kafka.security.fips.provider.BcFipsJsseProviderCreator,io.confluent.kafka.server.plugins.ssl.ConfluentTrustProviderCreator",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "admin.override.ssl.provider",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "BCJSSE",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.ssl.provider",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "BCJSSE",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "consumer.override.ssl.provider",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "BCJSSE",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "admin.override.ssl.cipher.suites",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CCM,TLS_ECDHE_ECDSA_WITH_AES_128_CCM,TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8,TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_128_CCM_SHA256,TLS_AES_128_CCM_8_SHA256",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.ssl.cipher.suites",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CCM,TLS_ECDHE_ECDSA_WITH_AES_128_CCM,TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8,TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_128_CCM_SHA256,TLS_AES_128_CCM_8_SHA256",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "consumer.override.ssl.cipher.suites",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CCM,TLS_ECDHE_ECDSA_WITH_AES_128_CCM,TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8,TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_128_CCM_SHA256,TLS_AES_128_CCM_8_SHA256",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "admin.override.ssl.enabled.protocols",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLSv1.2,TLSv1.3",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.ssl.enabled.protocols",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLSv1.2,TLSv1.3",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "consumer.override.ssl.enabled.protocols",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLSv1.2,TLSv1.3",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "consumer.override.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "admin.override.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "producer.override.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "producer.override.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        },
        {
          "name": "consumer.override.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "consumer.override.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        },
        {
          "name": "admin.override.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "admin.override.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        }
      ]
    },
    {
      "template_id": "common-source",
      "abstract": true,
      "config_defs": [
        {
          "name": "kafka.service.account.id",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 2,
          "display_name": "Kafka Service Account",
          "documentation": "The Service Account that will be used to generate the API keys to communicate with Kafka Cluster."
        },
        {
          "name": "kafka.api.secret",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 3,
          "display_name": "Kafka API Secret",
          "documentation": "Secret associated with Kafka API key. Required when kafka.auth.mode==KAFKA_API_KEY.",
          "dependents": [
            "kafka.api.key"
          ]
        },
        {
          "name": "datapreview.schemas.enable",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "default_value": "false",
          "display_name": "Show schemas in data preview request output",
          "group": "Kafka Cluster credentials",
          "order_in_group": 4,
          "documentation": "This config key only applies to data preview requests and governs whether the data preview output has record schema with it.\nThe visibility condition is set such that it can never be true.\nSo this key does not show in create connector UI."
        },
        {
          "name": "errors.tolerance",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Additional Configs",
          "default_value": "none",
          "display_name": "errors.tolerance",
          "documentation": "Use this property if you would like to configure the connector's error handling behavior. WARNING: This property should be used with CAUTION for SOURCE CONNECTORS as it may lead to dataloss. If you set this property to 'all', the connector will not fail on errant records, but will instead log them (and send to DLQ for Sink Connectors) and continue processing. If you set this property to 'none', the connector task will fail on errant records.",
          "recommended_values": [
            "none",
            "all"
          ]
        },
        {
          "name": "producer.override.linger.ms",
          "type": "LONG",
          "required": "false",
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "producer.override.linger.ms",
          "documentation": "The producer groups together any records that arrive in between request transmissions into a single batched request. More details can be found in the documentation: https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#linger-ms."
        }
      ],
      "connector_configs": [
        {
          "name": "topic.creation.default.replication.factor",
          "value": "3"
        },
        {
          "name": "topic.creation.default.partitions",
          "value": "1"
        },
        {
          "name": "errors.tolerance"
        },
        {
          "name": "producer.override.max.request.size",
          "switch": {
            "kafka.dedicated": {
              "true": "20971610",
              "false": "8388698"
            }
          }
        },
        {
          "name": "topic.creation.default.max.message.bytes",
          "switch": {
            "kafka.dedicated": {
              "true": "20971520",
              "false": "8388608"
            }
          }
        },
        {
          "name": "datapreview.schemas.enable"
        },
        {
          "name": "producer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "producer.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "admin.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "admin.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "producer.override.linger.ms"
        },
        {
          "name": "consumer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "consumer.override.sasl.mechanism",
          "value": "PLAIN"
        }
      ]
    },
    {
      "template_id": "schema-registry",
      "abstract": true,
      "config_defs": [
        {
          "name": "schema.context.name",
          "type": "STRING",
          "group": "Schema Config",
          "order_in_group": 1,
          "importance": "MEDIUM",
          "display_name": "Schema context",
          "documentation": "Add a schema context name. A schema context represents an independent scope in Schema Registry. It is a separate sub-schema tied to topics in different Kafka clusters that share the same Schema Registry instance. If not used, the connector uses the default schema configured for Schema Registry in your Confluent Cloud environment.",
          "default_value": "default",
          "dependents": [
            "schema.registry.url"
          ]
        }
      ],
      "connector_configs": []
    },
    {
      "template_id": "CosmosDbCommonV2",
      "abstract": true,
      "config_defs": [
        {
          "name": "azure.cosmos.account.environment",
          "type": "STRING",
          "default_value": "AZURE",
          "importance": "MEDIUM",
          "required": true,
          "group": "Account details",
          "order_in_group": 1,
          "display_name": "Azure environment of Cosmos DB account",
          "alias": "data.format",
          "documentation": "The azure environment of the Cosmos DB account: `Azure`, `AzureChina`, `AzureUsGovernment`, `AzureGermany`.",
          "recommended_values": [
            "AZURE",
            "AZURE_CHINA",
            "AZURE_CHINA",
            "AZURE_US_GOVERNMENT",
            "AZURE_GERMANY"
          ]
        },
        {
          "name": "azure.cosmos.account.tenantId",
          "type": "STRING",
          "default_value": "",
          "importance": "MEDIUM",
          "group": "Account details",
          "order_in_group": 7,
          "display_name": "TenantId of Cosmos DB account",
          "alias": "data.format",
          "documentation": "The tenantId of the Cosmos DB account. Required for `ServicePrincipal` authentication."
        },
        {
          "name": "azure.cosmos.auth.type",
          "type": "STRING",
          "importance": "HIGH",
          "required": true,
          "group": "Account details",
          "order_in_group": 3,
          "display_name": "Cosmos connection auth type",
          "documentation": "Cosmos connection auth type",
          "recommended_values": [
            "MasterKey",
            "ServicePrincipal"
          ],
          "default_value": "MasterKey"
        },
        {
          "name": "azure.cosmos.account.key",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Account details",
          "order_in_group": 4,
          "display_name": "Cosmos DB account key",
          "documentation": "Cosmos DB account key (only required in case of `auth.type` as `MasterKey`)."
        },
        {
          "name": "azure.cosmos.auth.aad.clientId",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Account details",
          "order_in_group": 5,
          "display_name": "ClientId/applicationId of service principal",
          "documentation": "The clientId/ApplicationId of the service principal. Required for `ServicePrincipal` authentication.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.auth.aad.clientSecret",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Account details",
          "order_in_group": 6,
          "display_name": "Client secret/password of service principal",
          "documentation": "The client secret/password of the service principal. Required for `ServicePrincipal` authentication."
        },
        {
          "name": "azure.cosmos.mode.gateway",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "Account details",
          "order_in_group": 2,
          "display_name": "Gateway mode",
          "documentation": "Flag to indicate whether to use gateway mode. By default it is false, means SDK uses direct mode. https://learn.microsoft.com/azure/cosmos-db/nosql/sdk-connection-modes"
        },
        {
          "name": "azure.cosmos.preferredRegionList",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Account details",
          "order_in_group": 3,
          "display_name": "Preferred regions list",
          "documentation": "Preferred regions list to be used for a multi region Cosmos DB account. This is a comma separated value (e.g., `[East US, West US]` or `East US, West US`) provided preferred regions will be used as hint. You should use a collocated kafka cluster with your Cosmos DB account and pass the kafka cluster region as preferred region. See list of azure regions - https://docs.microsoft.com/dotnet/api/microsoft.azure.documents.locationnames?view=azure-dotnet&preserve-view=true.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.throughputControl.enabled",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "Throughput control details",
          "order_in_group": 10,
          "display_name": "Enable throughput control",
          "documentation": "A flag to indicate whether throughput control is enabled."
        },
        {
          "name": "azure.cosmos.throughputControl.account.environment",
          "type": "STRING",
          "required": true,
          "importance": "LOW",
          "default_value": "AZURE",
          "group": "Throughput control details",
          "order_in_group": 15,
          "display_name": "Azure environment of Cosmos DB account",
          "documentation": "The azure environment of the Cosmos DB account: `Azure`, `AzureChina`, `AzureUsGovernment`, `AzureGermany`.",
          "recommended_values": [
            "AZURE",
            "AZURE_CHINA",
            "AZURE_US_GOVERNMENT",
            "AZURE_GERMANY"
          ]
        },
        {
          "name": "azure.cosmos.throughputControl.account.endpoint",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Throughput control details",
          "order_in_group": 16,
          "display_name": "Cosmos DB throughput control account endpoint uri",
          "documentation": "Cosmos DB throughput control account endpoint uri.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.throughputControl.auth.type",
          "type": "STRING",
          "required": true,
          "default_value": "MasterKey",
          "importance": "LOW",
          "group": "Throughput control details",
          "order_in_group": 11,
          "display_name": "Cosmos auth type",
          "documentation": "There are two auth types are supported currently: `MasterKey`(PrimaryReadWriteKeys, SecondReadWriteKeys, PrimaryReadOnlyKeys, SecondReadWriteKeys), `ServicePrincipal`",
          "recommended_values": [
            "MasterKey",
            "ServicePrincipal"
          ]
        },
        {
          "name": "azure.cosmos.throughputControl.account.key",
          "type": "PASSWORD",
          "required": false,
          "importance": "LOW",
          "group": "Throughput control details",
          "order_in_group": 12,
          "display_name": "Cosmos DB throughput control account key",
          "documentation": "Cosmos DB throughput control account key (only required in case of `throughputControl.auth.type` as `MasterKey`)"
        },
        {
          "name": "azure.cosmos.throughputControl.auth.aad.clientId",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Throughput control details",
          "order_in_group": 13,
          "display_name": "ClientId/applicationId of service principal",
          "documentation": "The clientId/applicationId of the service principal. Required for `ServicePrincipal` authentication.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.throughputControl.auth.aad.clientSecret",
          "type": "PASSWORD",
          "required": false,
          "importance": "LOW",
          "group": "Throughput control details",
          "order_in_group": 14,
          "display_name": "Client secret/password of service principal",
          "documentation": "The client secret/password of the service principal. Required for `ServicePrincipal` authentication."
        },
        {
          "name": "azure.cosmos.throughputControl.account.tenantId",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Throughput control details",
          "order_in_group": 15,
          "display_name": "TenantId of Cosmos DB account",
          "documentation": "The tenantId of the Cosmos DB account. Required for `ServicePrincipal` authentication.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.throughputControl.mode.gateway",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "Throughput control details",
          "order_in_group": 17,
          "display_name": "Gateway mode for throughput control",
          "documentation": "Flag to indicate whether to use gateway mode. By default it is false, means SDK uses direct mode. https://learn.microsoft.com/azure/cosmos-db/nosql/sdk-connection-modes"
        },
        {
          "name": "azure.cosmos.throughputControl.preferredRegionList",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Throughput control details",
          "order_in_group": 18,
          "display_name": "Preferred regions list for throughput control database account",
          "documentation": "Preferred regions list to be used for a multi region Cosmos DB account. This is a comma separated value (e.g., `[East US, West US]` or `East US, West US`) provided preferred regions will be used as hint. You should use a collocated kafka cluster with your Cosmos DB account and pass the kafka cluster region as preferred region. See list of azure regions - https://docs.microsoft.com/dotnet/api/microsoft.azure.documents.locationnames?view=azure-dotnet&preserve-view=true",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.throughputControl.group.name",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Throughput control details",
          "order_in_group": 19,
          "display_name": "Throughput control group name",
          "documentation": "Throughput control group name. Since customer is allowed to create many groups for a container, the name should be unique.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.throughputControl.targetThroughput",
          "type": "INT",
          "required": false,
          "importance": "MEDIUM",
          "group": "Throughput control details",
          "order_in_group": 20,
          "display_name": "Throughput control group target throughput",
          "documentation": "Throughput control group target throughput. The value should be larger than 0."
        },
        {
          "name": "azure.cosmos.throughputControl.targetThroughputThreshold",
          "type": "DOUBLE",
          "required": false,
          "importance": "MEDIUM",
          "group": "Throughput control details",
          "order_in_group": 21,
          "display_name": "Throughput control group target throughput threshold",
          "documentation": "Throughput control group target throughput threshold. The value should be between (0,1]."
        },
        {
          "name": "azure.cosmos.throughputControl.priorityLevel",
          "type": "STRING",
          "required": false,
          "default_value": "None",
          "importance": "MEDIUM",
          "group": "Throughput control details",
          "order_in_group": 22,
          "display_name": "Throughput control group priority level",
          "documentation": "Throughput control group priority level. The value can be None, High or Low.",
          "recommended_values": [
            "None",
            "High",
            "Low"
          ]
        },
        {
          "name": "azure.cosmos.throughputControl.globalControl.database.name",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Throughput control details",
          "order_in_group": 23,
          "display_name": "Database for throughput global control",
          "documentation": "Database which will be used for throughput global control.",
          "sanitizers": [
            {
              "name": "trim"
            }
          ]
        },
        {
          "name": "azure.cosmos.throughputControl.globalControl.container.name",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Throughput control details",
          "order_in_group": 24,
          "sanitizers": [
            {
              "name": "trim"
            }
          ],
          "display_name": "Container for throughput global control",
          "documentation": "Container which will be used for throughput global control."
        },
        {
          "name": "azure.cosmos.throughputControl.globalControl.renewIntervalInMS",
          "type": "INT",
          "required": false,
          "importance": "LOW",
          "default_value": 5000,
          "group": "Throughput control details",
          "order_in_group": 25,
          "display_name": "Throughput control client RU usage update interval",
          "documentation": "This controls how often the client is going to update the throughput usage of itself and adjust its own throughput share based on the throughput usage of other clients. Default is 5s, the allowed min value is 5s."
        },
        {
          "name": "azure.cosmos.throughputControl.globalControl.expireIntervalInMS",
          "type": "INT",
          "required": false,
          "importance": "LOW",
          "group": "Throughput control details",
          "order_in_group": 26,
          "display_name": "Throughput control client expire interval",
          "documentation": "This controls how quickly we will detect the client has been offline and hence allow its throughput share to be taken by other clients. Default is 11s, the allowed min value is 2 * renewIntervalInMS + 1"
        }
      ],
      "connector_configs": [
        {
          "name": "connector.endpoint",
          "value": "${azure.cosmos.account.endpoint}"
        },
        {
          "name": "azure.cosmos.account.endpoint"
        },
        {
          "name": "azure.cosmos.account.environment"
        },
        {
          "name": "azure.cosmos.account.tenantId"
        },
        {
          "name": "azure.cosmos.auth.type"
        },
        {
          "name": "azure.cosmos.account.key"
        },
        {
          "name": "azure.cosmos.auth.aad.clientId"
        },
        {
          "name": "azure.cosmos.auth.aad.clientSecret"
        },
        {
          "name": "azure.cosmos.mode.gateway"
        },
        {
          "name": "azure.cosmos.preferredRegionList"
        },
        {
          "name": "azure.cosmos.throughputControl.enabled"
        },
        {
          "name": "azure.cosmos.throughputControl.account.endpoint"
        },
        {
          "name": "azure.cosmos.throughputControl.account.environment"
        },
        {
          "name": "azure.cosmos.throughputControl.account.tenantId"
        },
        {
          "name": "azure.cosmos.throughputControl.auth.type"
        },
        {
          "name": "azure.cosmos.throughputControl.account.key"
        },
        {
          "name": "azure.cosmos.throughputControl.auth.aad.clientId"
        },
        {
          "name": "azure.cosmos.throughputControl.auth.aad.clientSecret"
        },
        {
          "name": "azure.cosmos.throughputControl.preferredRegionList"
        },
        {
          "name": "azure.cosmos.throughputControl.mode.gateway"
        },
        {
          "name": "azure.cosmos.throughputControl.group.name"
        },
        {
          "name": "azure.cosmos.throughputControl.targetThroughput"
        },
        {
          "name": "azure.cosmos.throughputControl.targetThroughputThreshold"
        },
        {
          "name": "azure.cosmos.throughputControl.priorityLevel"
        },
        {
          "name": "azure.cosmos.throughputControl.globalControl.database.name"
        },
        {
          "name": "azure.cosmos.throughputControl.globalControl.container.name"
        },
        {
          "name": "azure.cosmos.throughputControl.globalControl.renewIntervalInMS"
        },
        {
          "name": "azure.cosmos.throughputControl.globalControl.expireIntervalInMS"
        }
      ]
    },
    {
      "template_id": "source-connector-output-data-format",
      "abstract": true,
      "config_defs": [
        {
          "name": "output.data.format",
          "type": "STRING",
          "required": true,
          "default_value": "JSON",
          "importance": "HIGH",
          "group": "Output messages",
          "order_in_group": 1,
          "display_name": "Select output record value format",
          "alias": "data.format",
          "documentation": "Sets the output Kafka record value format. Valid entries are AVRO, JSON_SR, PROTOBUF, or JSON. Note that you need to have Confluent Cloud Schema Registry configured if using a schema-based message format like AVRO, JSON_SR, and PROTOBUF",
          "recommended_values": [
            "AVRO",
            "JSON_SR",
            "PROTOBUF",
            "JSON"
          ],
          "dependents": [
            "schema.registry.url"
          ]
        },
        {
          "name": "value.converter.schemas.enable",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "Additional Configs",
          "alias": "schemas.enable",
          "display_name": "value.converter.schemas.enable",
          "documentation": "Include schemas within each of the serialized values. Input messages must contain `schema` and `payload` fields and may not contain additional fields. For plain JSON data, set this to `false`. Applicable for JSON Converter."
        },
        {
          "name": "value.converter.replace.null.with.default",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "alias": "replace.null.with.default",
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "value.converter.replace.null.with.default",
          "documentation": "Whether to replace fields that have a default value and that are null to the default value. When set to true, the default value is used, otherwise null is used. Applicable for JSON Converter."
        },
        {
          "name": "value.converter.ignore.default.for.nullables",
          "alias": "ignore.default.for.nullables",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "value.converter.ignore.default.for.nullables",
          "documentation": "When set to true, this property ensures that the corresponding record in Kafka is NULL, instead of showing the default column value. Applicable for AVRO,PROTOBUF and JSON_SR Converters."
        },
        {
          "name": "value.converter.scrub.invalid.names",
          "type": "BOOLEAN",
          "documentation": "Whether to scrub invalid names by replacing invalid characters with valid characters. Applicable for Avro and Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.scrub.invalid.names"
        }
      ],
      "connector_configs": [
        {
          "name": "value.converter",
          "switch": {
            "output.data.format": {
              "AVRO": "io.confluent.connect.avro.AvroConverter",
              "JSON_SR": "io.confluent.connect.json.JsonSchemaConverter",
              "PROTOBUF": "io.confluent.connect.protobuf.ProtobufConverter",
              "JSON": "org.apache.kafka.connect.json.JsonConverter"
            }
          }
        },
        {
          "name": "value.converter.schemas.enable"
        },
        {
          "name": "value.converter.replace.null.with.default"
        },
        {
          "name": "value.converter.schema.registry.url",
          "switch": {
            "output.data.format": {
              "AVRO": "${schema.registry.url}",
              "JSON_SR": "${schema.registry.url}",
              "PROTOBUF": "${schema.registry.url}"
            }
          }
        },
        {
          "name": "value.converter.basic.auth.credentials.source",
          "switch": {
            "output.data.format": {
              "AVRO": "USER_INFO",
              "JSON_SR": "USER_INFO",
              "PROTOBUF": "USER_INFO"
            }
          }
        },
        {
          "name": "value.converter.basic.auth.user.info",
          "switch": {
            "output.data.format": {
              "AVRO": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}",
              "JSON_SR": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}",
              "PROTOBUF": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}"
            }
          }
        },
        {
          "name": "value.converter.ignore.default.for.nullables"
        },
        {
          "name": "value.converter.scrub.invalid.names",
          "dynamic.mapper": {
            "name": "value.converter.scrub.invalid.names.mapper"
          }
        }
      ]
    },
    {
      "template_id": "csfle-source",
      "abstract": true,
      "config_defs": [
        {
          "name": "csfle.enabled",
          "type": "BOOLEAN",
          "default_value": "false",
          "importance": "HIGH",
          "group": "CSFLE",
          "order_in_group": 1,
          "docs_hidden": true,
          "display_name": "Enable Client-Side Field Level Encryption",
          "documentation": "Determines whether the connector honours CSFLE rules or not",
          "conditional_metadata_provider": [
            {
              "name": "metadata.conditional.visible",
              "arguments": {
                "config": "csfle.configs.visible",
                "values": "false"
              },
              "metadata": {
                "visibility": "false"
              }
            }
          ]
        },
        {
          "name": "sr.service.account.id",
          "type": "STRING",
          "importance": "HIGH",
          "group": "CSFLE",
          "order_in_group": 2,
          "docs_hidden": true,
          "display_name": "Schema Registry Service Account",
          "documentation": "Select the service account that has appropriate permissions to schemas and encryption keys in the Schema Registry."
        }
      ],
      "connector_configs": [
        {
          "name": "csfle.enabled"
        },
        {
          "name": "value.converter.rule.executors._ENCRYPT_.disabled",
          "switch": {
            "csfle.enabled": {
              "true": "false",
              "false": "true"
            }
          }
        },
        {
          "name": "value.converter.rule.executors._ENCRYPT_.onFailure",
          "switch": {
            "csfle.enabled": {
              "true": "ERROR"
            }
          }
        },
        {
          "name": "value.converter.latest.cache.ttl.sec",
          "switch": {
            "csfle.enabled": {
              "true": "300"
            }
          }
        },
        {
          "name": "key.converter.rule.executors._ENCRYPT_.disabled",
          "switch": {
            "csfle.enabled": {
              "true": "false",
              "false": "true"
            }
          }
        },
        {
          "name": "key.converter.rule.executors._ENCRYPT_.onFailure",
          "switch": {
            "csfle.enabled": {
              "true": "ERROR"
            }
          }
        },
        {
          "name": "key.converter.auto.register.schemas",
          "switch": {
            "csfle.enabled": {
              "true": "false"
            }
          }
        },
        {
          "name": "key.converter.use.latest.version",
          "switch": {
            "csfle.enabled": {
              "true": "true"
            }
          }
        },
        {
          "name": "key.converter.latest.cache.ttl.sec",
          "switch": {
            "csfle.enabled": {
              "true": "300"
            }
          }
        }
      ]
    },
    {
      "template_id": "super",
      "abstract": true,
      "config_defs": [
        {
          "name": "auto.restart.on.user.error",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "Auto-restart policy",
          "order_in_group": 1,
          "display_name": "Enable Connector Auto-restart",
          "documentation": "Enable connector to automatically restart on user-actionable errors."
        },
        {
          "name": "value.converter.enhanced.avro.schema.support",
          "type": "BOOLEAN",
          "documentation": "Enable enhanced schema support to preserve package information and Enums. Applicable for Avro Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.enhanced.avro.schema.support"
        },
        {
          "name": "value.converter.connect.meta.data",
          "type": "BOOLEAN",
          "documentation": "Allow the Connect converter to add its metadata to the output schema. Applicable for Avro Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.connect.meta.data"
        },
        {
          "name": "value.converter.enhanced.protobuf.schema.support",
          "type": "BOOLEAN",
          "documentation": "Enable enhanced schema support to preserve package information. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.enhanced.protobuf.schema.support"
        },
        {
          "name": "value.converter.generate.index.for.unions",
          "type": "BOOLEAN",
          "documentation": "Whether to generate an index suffix for unions. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.generate.index.for.unions"
        },
        {
          "name": "value.converter.int.for.enums",
          "type": "BOOLEAN",
          "documentation": "Whether to represent enums as integers. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.int.for.enums"
        },
        {
          "name": "value.converter.optional.for.nullables",
          "type": "BOOLEAN",
          "documentation": "Whether nullable fields should be specified with an optional label. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.optional.for.nullables"
        },
        {
          "name": "value.converter.generate.struct.for.nulls",
          "type": "BOOLEAN",
          "documentation": "Whether to generate a struct variable for null values. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.generate.struct.for.nulls"
        },
        {
          "name": "value.converter.wrapper.for.nullables",
          "type": "BOOLEAN",
          "documentation": "Whether nullable fields should use primitive wrapper messages. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.wrapper.for.nullables"
        },
        {
          "name": "value.converter.wrapper.for.raw.primitives",
          "type": "BOOLEAN",
          "documentation": "Whether a wrapper message should be interpreted as a raw primitive at root level. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.wrapper.for.raw.primitives"
        },
        {
          "name": "value.converter.object.additional.properties",
          "type": "BOOLEAN",
          "documentation": "Whether to allow additional properties for object schemas. Applicable for JSON_SR Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.object.additional.properties"
        },
        {
          "name": "value.converter.use.optional.for.nonrequired",
          "type": "BOOLEAN",
          "documentation": "Whether to set non-required properties to be optional. Applicable for JSON_SR Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.use.optional.for.nonrequired"
        },
        {
          "name": "value.converter.decimal.format",
          "type": "STRING",
          "recommended_values": [
            "BASE64",
            "NUMERIC"
          ],
          "documentation": "Specify the JSON/JSON_SR serialization format for Connect DECIMAL logical type values with two allowed literals:\nBASE64 to serialize DECIMAL logical types as base64 encoded binary data and\nNUMERIC to serialize Connect DECIMAL logical type values in JSON/JSON_SR as a number representing the decimal value.",
          "group": "Additional Configs",
          "alias": "json.output.decimal.format",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.decimal.format",
          "default_value": "BASE64"
        },
        {
          "name": "value.converter.auto.register.schemas",
          "type": "BOOLEAN",
          "documentation": "Specify if the Serializer should attempt to register the Schema.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.auto.register.schemas"
        },
        {
          "name": "value.converter.use.latest.version",
          "type": "BOOLEAN",
          "documentation": "Use latest version of schema in subject for serialization when auto.register.schemas is false.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.use.latest.version"
        },
        {
          "name": "value.converter.latest.compatibility.strict",
          "type": "BOOLEAN",
          "documentation": "Verify latest subject version is backward compatible when `use.latest.version` is `true`.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.latest.compatibility.strict"
        },
        {
          "name": "key.converter.key.subject.name.strategy",
          "type": "STRING",
          "default_value": "TopicNameStrategy",
          "recommended_values": [
            "TopicNameStrategy",
            "RecordNameStrategy",
            "TopicRecordNameStrategy"
          ],
          "alias": "key.subject.name.strategy",
          "documentation": "How to construct the subject name for key schema registration.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "key.converter.key.subject.name.strategy"
        },
        {
          "name": "value.converter.value.subject.name.strategy",
          "type": "STRING",
          "recommended_values": [
            "TopicNameStrategy",
            "RecordNameStrategy",
            "TopicRecordNameStrategy"
          ],
          "default_value": "TopicNameStrategy",
          "alias": "subject.name.strategy,value.subject.name.strategy",
          "documentation": "Determines how to construct the subject name under which the value schema is registered with Schema Registry.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.value.subject.name.strategy"
        },
        {
          "name": "value.converter.reference.subject.name.strategy",
          "type": "STRING",
          "recommended_values": [
            "DefaultReferenceSubjectNameStrategy",
            "QualifiedReferenceSubjectNameStrategy"
          ],
          "default_value": "DefaultReferenceSubjectNameStrategy",
          "documentation": "Set the subject reference name strategy for value. Valid entries are DefaultReferenceSubjectNameStrategy or QualifiedReferenceSubjectNameStrategy. Note that the subject reference name strategy can be selected only for PROTOBUF format with the default strategy being DefaultReferenceSubjectNameStrategy.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.reference.subject.name.strategy"
        },
        {
          "name": "value.converter.allow.optional.map.keys",
          "type": "BOOLEAN",
          "documentation": "Allow optional string map key when converting from Connect Schema to Avro Schema. Applicable for Avro Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.allow.optional.map.keys"
        },
        {
          "name": "value.converter.flatten.singleton.unions",
          "type": "BOOLEAN",
          "default_value": "false",
          "documentation": "Whether to flatten singleton unions. Applicable for Avro and JSON_SR Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.flatten.singleton.unions"
        },
        {
          "name": "value.converter.optional.for.proto2",
          "type": "BOOLEAN",
          "documentation": "Whether proto2 optionals are supported. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.optional.for.proto2"
        },
        {
          "name": "value.converter.flatten.unions",
          "type": "BOOLEAN",
          "documentation": "Whether to flatten unions (oneofs). Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.flatten.unions"
        },
        {
          "name": "header.converter",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "header.converter",
          "documentation": "The converter class for the headers. This is used to serialize and deserialize the headers of the messages.",
          "recommended_values": [
            "org.apache.kafka.connect.converters.BooleanConverter",
            "org.apache.kafka.connect.converters.ByteArrayConverter",
            "org.apache.kafka.connect.converters.DoubleConverter",
            "org.apache.kafka.connect.converters.FloatConverter",
            "org.apache.kafka.connect.converters.IntegerConverter",
            "org.apache.kafka.connect.converters.LongConverter",
            "org.apache.kafka.connect.converters.ShortConverter",
            "org.apache.kafka.connect.json.JsonConverter",
            "org.apache.kafka.connect.storage.SimpleHeaderConverter",
            "org.apache.kafka.connect.storage.StringConverter"
          ]
        }
      ],
      "connector_configs": [
        {
          "name": "auto.restart.on.user.error"
        },
        {
          "name": "value.converter.enhanced.avro.schema.support"
        },
        {
          "name": "value.converter.connect.meta.data"
        },
        {
          "name": "value.converter.enhanced.protobuf.schema.support"
        },
        {
          "name": "value.converter.generate.index.for.unions"
        },
        {
          "name": "value.converter.int.for.enums"
        },
        {
          "name": "value.converter.optional.for.nullables"
        },
        {
          "name": "value.converter.generate.struct.for.nulls"
        },
        {
          "name": "value.converter.wrapper.for.nullables"
        },
        {
          "name": "value.converter.wrapper.for.raw.primitives"
        },
        {
          "name": "value.converter.object.additional.properties"
        },
        {
          "name": "value.converter.use.optional.for.nonrequired"
        },
        {
          "name": "value.converter.decimal.format"
        },
        {
          "name": "value.converter.auto.register.schemas",
          "dynamic.mapper": {
            "name": "value.converter.auto.register.schemas.mapper"
          }
        },
        {
          "name": "value.converter.use.latest.version",
          "dynamic.mapper": {
            "name": "value.converter.use.latest.version.mapper"
          }
        },
        {
          "name": "value.converter.latest.compatibility.strict"
        },
        {
          "name": "value.converter.value.subject.name.strategy",
          "dynamic.mapper": {
            "name": "value.converter.value.subject.name.strategy.mapper"
          }
        },
        {
          "name": "key.converter.key.subject.name.strategy",
          "dynamic.mapper": {
            "name": "value.converter.value.subject.name.strategy.mapper"
          }
        },
        {
          "name": "value.converter.reference.subject.name.strategy",
          "dynamic.mapper": {
            "name": "value.converter.reference.subject.name.strategy.mapper"
          }
        },
        {
          "name": "value.converter.allow.optional.map.keys"
        },
        {
          "name": "value.converter.flatten.singleton.unions"
        },
        {
          "name": "value.converter.optional.for.proto2"
        },
        {
          "name": "value.converter.flatten.unions"
        },
        {
          "name": "header.converter"
        },
        {
          "name": "key.converter.use.apache.http.client"
        },
        {
          "name": "value.converter.use.apache.http.client"
        }
      ]
    },
    {
      "template_id": "super-source",
      "abstract": true,
      "config_defs": [
        {
          "name": "producer.override.compression.type",
          "type": "STRING",
          "recommended_values": [
            "none",
            "gzip",
            "snappy",
            "lz4",
            "zstd"
          ],
          "documentation": "The compression type for all data generated by the producer. Valid values are none, gzip, snappy, lz4, and zstd.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "producer.override.compression.type"
        }
      ],
      "connector_configs": [
        {
          "name": "producer.override.compression.type"
        }
      ]
    }
  ]
}