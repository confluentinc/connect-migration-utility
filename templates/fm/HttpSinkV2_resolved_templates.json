{
  "templates": [
    {
      "template_id": "HttpSinkV2",
      "connector_type": "SINK",
      "connector.class": "io.confluent.connect.http.sink.GenericHttpSinkConnector",
      "config_defs": [
        {
          "name": "tasks.max",
          "type": "INT",
          "required": true,
          "importance": "HIGH",
          "group": "Number of tasks for this connector",
          "order_in_group": 1,
          "display_name": "Tasks",
          "documentation": "Maximum number of tasks for the connector."
        },
        {
          "name": "https.host.verifier.enabled",
          "type": "STRING",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 26,
          "display_name": "Enable host verification",
          "documentation": "True if SSL host verification should be enabled",
          "recommended_values": [
            "true",
            "false"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "success.topic.name",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Reporter",
          "order_in_group": 1,
          "default_value": "success-${connector}",
          "display_name": "Success Topic Name",
          "documentation": "Name of the success topic",
          "docs_hidden": true
        },
        {
          "name": "dlq.topic.name",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "DLQ Topic",
          "order_in_group": 1,
          "default_value": "dlq-{{.logicalClusterId}}",
          "display_name": "DLQ Topic Name",
          "documentation": "Name of the dlq topic",
          "docs_hidden": true
        },
        {
          "name": "api1.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ]
        },
        {
          "name": "api1.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ]
        },
        {
          "name": "api1.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``."
        },
        {
          "name": "api1.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-1 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ]
        },
        {
          "name": "api1.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ]
        },
        {
          "name": "api1.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here"
        },
        {
          "name": "api1.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size."
        },
        {
          "name": "api1.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records"
        },
        {
          "name": "api1.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records"
        },
        {
          "name": "api1.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api1.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1."
        },
        {
          "name": "api1.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api1.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api1.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api1.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api1.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record."
        },
        {
          "name": "api1.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**."
        },
        {
          "name": "api2.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-2 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api2.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api2.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api2.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api2.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api2.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api2.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api2.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-3 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api3.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api3.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api3.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api3.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api3.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api3.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api3.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-4 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api4.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api4.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api4.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api4.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api4.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api4.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api4.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-5 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api5.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api5.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api5.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api5.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api5.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api5.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api5.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-6 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api6.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api6.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api6.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api6.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api6.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api6.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api6.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-7 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api7.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api7.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api7.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api7.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api7.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api7.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api7.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-8 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api8.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api8.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api8.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api8.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api8.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api8.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api8.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-9 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api9.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api9.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api9.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api9.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api9.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api9.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api9.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-10 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api10.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api10.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api10.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api10.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api10.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api10.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api10.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-11 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api11.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api11.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api11.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api11.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api11.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api11.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api11.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-12 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api12.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api12.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api12.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api12.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api12.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api12.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api12.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-13 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api13.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api13.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api13.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api13.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api13.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api13.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api13.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-14 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api14.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api14.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api14.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api14.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api14.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api14.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api14.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.topics",
          "type": "LIST",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 1,
          "display_name": "Topics for the API",
          "documentation": "List of topics for this API",
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "POST",
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "recommended_values": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "dependents": [
            "http.api.base.url"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.behavior.on.null.values",
          "type": "STRING",
          "required": false,
          "default_value": "IGNORE",
          "importance": "LOW",
          "group": "API-15 Configs",
          "order_in_group": 4,
          "display_name": "Behavior for null valued records",
          "documentation": "How to handle records with a non-null key and a null value (i.e. Kafka tombstone records). Valid options are ``IGNORE``, ``DELETE`` and ``FAIL``",
          "recommended_values": [
            "IGNORE",
            "DELETE",
            "FAIL"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api15.request.body.format",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 5,
          "display_name": "Request Body Format",
          "default_value": "JSON",
          "documentation": "Used to produce request body in either JSON or String format. The default value is JSON.",
          "recommended_values": [
            "STRING",
            "JSON"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api15.batch.key.pattern",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 6,
          "display_name": "Batch key pattern",
          "documentation": "Pattern used to build the key for a given batch. ${key} and ${topic} can be used to include message attributes here",
          "docs_hidden": "true"
        },
        {
          "name": "api15.max.batch.size",
          "type": "INT",
          "required": false,
          "default_value": 1,
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 7,
          "display_name": "Batch max size",
          "documentation": "The number of records accumulated in a batch before the HTTP API is invoked. Note that Basic and Standard Clusters may experience throughput limitations, even with a higher batch size.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.batch.prefix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 8,
          "display_name": "Batch prefix",
          "documentation": "Prefix added to record batches. This is applied once at the beginning of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api15.batch.suffix",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 9,
          "display_name": "Batch suffix",
          "documentation": "Suffix added to record batches. This is applied once at the end of the batch of records",
          "docs_hidden": "true"
        },
        {
          "name": "api15.batch.separator",
          "type": "STRING",
          "required": false,
          "default_value": ",",
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 10,
          "display_name": "Batch separator",
          "documentation": "Separator for records in a batch",
          "docs_hidden": "true"
        },
        {
          "name": "api15.batch.json.as.array",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 11,
          "display_name": "Batch json as array",
          "documentation": "Whether or not to use an array to bundle json records. Only used when request.body.format is set to json. This can be disabled only when max.batch.size is set to 1.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.regex.patterns",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 12,
          "display_name": "Regular expression patterns",
          "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but must be separated by ``regex.separator``",
          "docs_hidden": "true"
        },
        {
          "name": "api15.regex.replacements",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 13,
          "display_name": "Regular expression replacements",
          "documentation": "Regex replacements to use with the patterns in ``regex.patterns``.  Multiple replacements can be specified, but must be separated by ``regex.separator``. ``${key}`` and ``${topic}`` can be used here.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.regex.separator",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 14,
          "display_name": "Regular expression separator",
          "documentation": "Separator character used in ``regex.patterns`` and ``regex.replacements`` property.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.allow.get.request.body",
          "type": "BOOLEAN",
          "required": false,
          "default_value": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 15,
          "display_name": "Allow GET Request Body",
          "documentation": "Allow Request Body in case of GET call",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 16,
          "display_name": "HTTP Request Body",
          "documentation": "The custom payload that will be send to the destination instead of record. The value can be templated with key, topic and any other record key (for example: ``search_after: ${key}``) where ``${key}`` will be substituted with the key obtained from the record.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.report.only.status.code.to.success.topic",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 17,
          "display_name": "Report only status code to success topic",
          "documentation": "Whether to report only the status code to the success topic. If the API response payload is huge, it is recommended to set this to true, for better throughput. Please note that this is a **CLI only feature**.",
          "docs_hidden": "true"
        }
      ],
      "connector_configs": [
        {
          "name": "consumer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "consumer.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "producer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "producer.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "admin.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "admin.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "topics"
        },
        {
          "name": "tasks.max"
        },
        {
          "name": "csfle.enabled"
        },
        {
          "name": "schema.cache.size",
          "value": "1000"
        },
        {
          "name": "key.converter.schemas.enable",
          "value": "false"
        },
        {
          "name": "key.converter",
          "value": "org.apache.kafka.connect.storage.StringConverter"
        },
        {
          "name": "enhanced.avro.schema.support",
          "value": "true"
        },
        {
          "name": "transforms",
          "value": "requireTimestampTransform"
        },
        {
          "name": "connect.meta.data",
          "value": "false"
        },
        {
          "name": "transforms.requireTimestampTransform.type",
          "value": "io.confluent.cctransforms.RequireTimestampTransform"
        },
        {
          "name": "https.ssl.endpoint.identification.algorithm",
          "value": "https"
        },
        {
          "name": "reporter.result.topic.name",
          "value": "success-${connector}"
        },
        {
          "name": "regex.timeout.ms",
          "value": 100
        },
        {
          "name": "api1.topics"
        },
        {
          "name": "api1.http.request.method"
        },
        {
          "name": "api1.http.request.parameters"
        },
        {
          "name": "api1.request.body.format"
        },
        {
          "name": "api1.batch.key.pattern"
        },
        {
          "name": "api1.max.batch.size"
        },
        {
          "name": "api1.batch.prefix"
        },
        {
          "name": "api1.batch.suffix"
        },
        {
          "name": "api1.batch.json.as.array"
        },
        {
          "name": "api1.behavior.on.null.values"
        },
        {
          "name": "api1.http.request.body"
        },
        {
          "name": "api1.report.only.status.code.to.success.topic"
        },
        {
          "name": "api2.topics"
        },
        {
          "name": "api2.http.request.method"
        },
        {
          "name": "api2.http.request.parameters"
        },
        {
          "name": "api2.request.body.format"
        },
        {
          "name": "api2.batch.key.pattern"
        },
        {
          "name": "api2.max.batch.size"
        },
        {
          "name": "api2.batch.prefix"
        },
        {
          "name": "api2.batch.suffix"
        },
        {
          "name": "api2.batch.json.as.array"
        },
        {
          "name": "api2.behavior.on.null.values"
        },
        {
          "name": "api2.http.request.body"
        },
        {
          "name": "api2.report.only.status.code.to.success.topic"
        },
        {
          "name": "api3.topics"
        },
        {
          "name": "api3.http.request.method"
        },
        {
          "name": "api3.http.request.parameters"
        },
        {
          "name": "api3.request.body.format"
        },
        {
          "name": "api3.batch.key.pattern"
        },
        {
          "name": "api3.max.batch.size"
        },
        {
          "name": "api3.batch.prefix"
        },
        {
          "name": "api3.batch.suffix"
        },
        {
          "name": "api3.batch.json.as.array"
        },
        {
          "name": "api3.behavior.on.null.values"
        },
        {
          "name": "api3.http.request.body"
        },
        {
          "name": "api3.report.only.status.code.to.success.topic"
        },
        {
          "name": "api4.topics"
        },
        {
          "name": "api4.http.request.method"
        },
        {
          "name": "api4.http.request.parameters"
        },
        {
          "name": "api4.request.body.format"
        },
        {
          "name": "api4.batch.key.pattern"
        },
        {
          "name": "api4.max.batch.size"
        },
        {
          "name": "api4.batch.prefix"
        },
        {
          "name": "api4.batch.suffix"
        },
        {
          "name": "api4.batch.json.as.array"
        },
        {
          "name": "api4.behavior.on.null.values"
        },
        {
          "name": "api4.http.request.body"
        },
        {
          "name": "api4.report.only.status.code.to.success.topic"
        },
        {
          "name": "api5.topics"
        },
        {
          "name": "api5.http.request.method"
        },
        {
          "name": "api5.http.request.parameters"
        },
        {
          "name": "api5.request.body.format"
        },
        {
          "name": "api5.batch.key.pattern"
        },
        {
          "name": "api5.max.batch.size"
        },
        {
          "name": "api5.batch.prefix"
        },
        {
          "name": "api5.batch.suffix"
        },
        {
          "name": "api5.batch.json.as.array"
        },
        {
          "name": "api5.behavior.on.null.values"
        },
        {
          "name": "api5.http.request.body"
        },
        {
          "name": "api5.report.only.status.code.to.success.topic"
        },
        {
          "name": "api6.topics"
        },
        {
          "name": "api6.http.request.method"
        },
        {
          "name": "api6.http.request.parameters"
        },
        {
          "name": "api6.request.body.format"
        },
        {
          "name": "api6.batch.key.pattern"
        },
        {
          "name": "api6.max.batch.size"
        },
        {
          "name": "api6.batch.prefix"
        },
        {
          "name": "api6.batch.suffix"
        },
        {
          "name": "api6.batch.json.as.array"
        },
        {
          "name": "api6.behavior.on.null.values"
        },
        {
          "name": "api6.http.request.body"
        },
        {
          "name": "api6.report.only.status.code.to.success.topic"
        },
        {
          "name": "api7.topics"
        },
        {
          "name": "api7.http.request.method"
        },
        {
          "name": "api7.http.request.parameters"
        },
        {
          "name": "api7.request.body.format"
        },
        {
          "name": "api7.batch.key.pattern"
        },
        {
          "name": "api7.max.batch.size"
        },
        {
          "name": "api7.batch.prefix"
        },
        {
          "name": "api7.batch.suffix"
        },
        {
          "name": "api7.batch.json.as.array"
        },
        {
          "name": "api7.behavior.on.null.values"
        },
        {
          "name": "api7.http.request.body"
        },
        {
          "name": "api7.report.only.status.code.to.success.topic"
        },
        {
          "name": "api8.topics"
        },
        {
          "name": "api8.http.request.method"
        },
        {
          "name": "api8.http.request.parameters"
        },
        {
          "name": "api8.request.body.format"
        },
        {
          "name": "api8.batch.key.pattern"
        },
        {
          "name": "api8.max.batch.size"
        },
        {
          "name": "api8.batch.prefix"
        },
        {
          "name": "api8.batch.suffix"
        },
        {
          "name": "api8.batch.json.as.array"
        },
        {
          "name": "api8.behavior.on.null.values"
        },
        {
          "name": "api8.http.request.body"
        },
        {
          "name": "api8.report.only.status.code.to.success.topic"
        },
        {
          "name": "api9.topics"
        },
        {
          "name": "api9.http.request.method"
        },
        {
          "name": "api9.http.request.parameters"
        },
        {
          "name": "api9.request.body.format"
        },
        {
          "name": "api9.batch.key.pattern"
        },
        {
          "name": "api9.max.batch.size"
        },
        {
          "name": "api9.batch.prefix"
        },
        {
          "name": "api9.batch.suffix"
        },
        {
          "name": "api9.batch.json.as.array"
        },
        {
          "name": "api9.behavior.on.null.values"
        },
        {
          "name": "api9.http.request.body"
        },
        {
          "name": "api9.report.only.status.code.to.success.topic"
        },
        {
          "name": "api10.topics"
        },
        {
          "name": "api10.http.request.method"
        },
        {
          "name": "api10.http.request.parameters"
        },
        {
          "name": "api10.request.body.format"
        },
        {
          "name": "api10.batch.key.pattern"
        },
        {
          "name": "api10.max.batch.size"
        },
        {
          "name": "api10.batch.prefix"
        },
        {
          "name": "api10.batch.suffix"
        },
        {
          "name": "api10.batch.json.as.array"
        },
        {
          "name": "api10.behavior.on.null.values"
        },
        {
          "name": "api10.http.request.body"
        },
        {
          "name": "api10.report.only.status.code.to.success.topic"
        },
        {
          "name": "api11.topics"
        },
        {
          "name": "api11.http.request.method"
        },
        {
          "name": "api11.http.request.parameters"
        },
        {
          "name": "api11.request.body.format"
        },
        {
          "name": "api11.batch.key.pattern"
        },
        {
          "name": "api11.max.batch.size"
        },
        {
          "name": "api11.batch.prefix"
        },
        {
          "name": "api11.batch.suffix"
        },
        {
          "name": "api11.batch.json.as.array"
        },
        {
          "name": "api11.behavior.on.null.values"
        },
        {
          "name": "api11.http.request.body"
        },
        {
          "name": "api11.report.only.status.code.to.success.topic"
        },
        {
          "name": "api12.topics"
        },
        {
          "name": "api12.http.request.method"
        },
        {
          "name": "api12.http.request.parameters"
        },
        {
          "name": "api12.request.body.format"
        },
        {
          "name": "api12.batch.key.pattern"
        },
        {
          "name": "api12.max.batch.size"
        },
        {
          "name": "api12.batch.prefix"
        },
        {
          "name": "api12.batch.suffix"
        },
        {
          "name": "api12.batch.json.as.array"
        },
        {
          "name": "api12.behavior.on.null.values"
        },
        {
          "name": "api12.http.request.body"
        },
        {
          "name": "api12.report.only.status.code.to.success.topic"
        },
        {
          "name": "api13.topics"
        },
        {
          "name": "api13.http.request.method"
        },
        {
          "name": "api13.http.request.parameters"
        },
        {
          "name": "api13.request.body.format"
        },
        {
          "name": "api13.batch.key.pattern"
        },
        {
          "name": "api13.max.batch.size"
        },
        {
          "name": "api13.batch.prefix"
        },
        {
          "name": "api13.batch.suffix"
        },
        {
          "name": "api13.batch.json.as.array"
        },
        {
          "name": "api13.behavior.on.null.values"
        },
        {
          "name": "api13.http.request.body"
        },
        {
          "name": "api13.report.only.status.code.to.success.topic"
        },
        {
          "name": "api14.topics"
        },
        {
          "name": "api14.http.request.method"
        },
        {
          "name": "api14.http.request.parameters"
        },
        {
          "name": "api14.request.body.format"
        },
        {
          "name": "api14.batch.key.pattern"
        },
        {
          "name": "api14.max.batch.size"
        },
        {
          "name": "api14.batch.prefix"
        },
        {
          "name": "api14.batch.suffix"
        },
        {
          "name": "api14.batch.json.as.array"
        },
        {
          "name": "api14.behavior.on.null.values"
        },
        {
          "name": "api14.http.request.body"
        },
        {
          "name": "api14.report.only.status.code.to.success.topic"
        },
        {
          "name": "api15.topics"
        },
        {
          "name": "api15.http.request.method"
        },
        {
          "name": "api15.http.request.parameters"
        },
        {
          "name": "api15.request.body.format"
        },
        {
          "name": "api15.batch.key.pattern"
        },
        {
          "name": "api15.max.batch.size"
        },
        {
          "name": "api15.batch.prefix"
        },
        {
          "name": "api15.batch.suffix"
        },
        {
          "name": "api15.batch.json.as.array"
        },
        {
          "name": "api15.behavior.on.null.values"
        },
        {
          "name": "api15.http.request.body"
        },
        {
          "name": "api15.report.only.status.code.to.success.topic"
        }
      ]
    },
    {
      "template_id": "common",
      "global_validators": [
        {
          "name": "required",
          "priority": "HIGHEST"
        },
        {
          "name": "recommended.values",
          "priority": "HIGHER"
        }
      ],
      "abstract": true,
      "config_defs": [
        {
          "name": "connector.class",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "How should we connect to your data?",
          "order_in_group": 1,
          "display_name": "Connector class"
        },
        {
          "name": "name",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "How should we connect to your data?",
          "order_in_group": 2,
          "display_name": "Connector name",
          "documentation": "Sets a name for your connector."
        },
        {
          "name": "tasks.max",
          "type": "INT",
          "required": true,
          "importance": "HIGH",
          "group": "Number of tasks for this connector",
          "order_in_group": 1,
          "display_name": "Tasks",
          "documentation": "Maximum number of tasks for the connector."
        },
        {
          "name": "kafka.auth.mode",
          "type": "STRING",
          "required": false,
          "default_value": "KAFKA_API_KEY",
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 1,
          "display_name": "Kafka Cluster Authentication mode",
          "documentation": "Kafka Authentication mode. It can be one of KAFKA_API_KEY or SERVICE_ACCOUNT. It defaults to KAFKA_API_KEY mode.",
          "recommended_values": [
            "SERVICE_ACCOUNT",
            "KAFKA_API_KEY"
          ]
        },
        {
          "name": "kafka.api.key",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 2,
          "display_name": "Kafka API Key",
          "documentation": "Kafka API Key. Required when kafka.auth.mode==KAFKA_API_KEY."
        }
      ],
      "connector_configs": [
        {
          "name": "tasks.max"
        },
        {
          "name": "confluent.topic.bootstrap.servers",
          "value": "Placeholder value to pass connector validations"
        },
        {
          "name": "errors.log.enable",
          "value": "true"
        },
        {
          "name": "errors.log.include.messages",
          "value": "false"
        },
        {
          "name": "errors.retry.timeout",
          "value": "300000"
        },
        {
          "name": "errors.retry.delay.max.ms",
          "value": "30000"
        },
        {
          "name": "value.converter.ignore.modern.dialects",
          "value": "true"
        }
      ]
    },
    {
      "template_id": "common-kafka-connectivity",
      "abstract": true,
      "config_defs": [],
      "connector_configs": []
    },
    {
      "template_id": "common-sink",
      "abstract": true,
      "config_defs": [
        {
          "name": "kafka.service.account.id",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 2,
          "display_name": "Kafka Service Account",
          "documentation": "The Service Account that will be used to generate the API keys to communicate with Kafka Cluster."
        },
        {
          "name": "kafka.api.secret",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 3,
          "display_name": "Kafka API Secret",
          "documentation": "Secret associated with Kafka API key. Required when kafka.auth.mode==KAFKA_API_KEY.",
          "dependents": [
            "kafka.api.key"
          ]
        },
        {
          "name": "topics",
          "type": "LIST",
          "required": true,
          "importance": "HIGH",
          "group": "Which topics do you want to get data from?",
          "order_in_group": 1,
          "display_name": "Topic names",
          "documentation": "Identifies the topic name or a comma-separated list of topic names.",
          "dependents": [
            "kafka.api.secret"
          ],
          "sanitizers": [
            {
              "name": "trim.list"
            }
          ]
        },
        {
          "name": "max.poll.interval.ms",
          "type": "LONG",
          "required": false,
          "importance": "LOW",
          "group": "Consumer configuration",
          "order_in_group": 1,
          "display_name": "Max poll interval(ms)",
          "default_value": "300000",
          "documentation": "The maximum delay between subsequent consume requests to Kafka. This configuration property may be used to improve the performance of the connector, if the connector cannot send records to the sink system. Defaults to 300000 milliseconds (5 minutes)."
        },
        {
          "name": "max.poll.records",
          "type": "LONG",
          "required": false,
          "importance": "LOW",
          "group": "Consumer configuration",
          "order_in_group": 2,
          "display_name": "Max poll records",
          "default_value": "500",
          "documentation": "The maximum number of records to consume from Kafka in a single request. This configuration property may be used to improve the performance of the connector, if the connector cannot send records to the sink system. Defaults to 500 records."
        },
        {
          "name": "errors.tolerance",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Additional Configs",
          "default_value": "all",
          "display_name": "errors.tolerance",
          "documentation": "Use this property if you would like to configure the connector's error handling behavior. WARNING: This property should be used with CAUTION for SOURCE CONNECTORS as it may lead to dataloss. If you set this property to 'all', the connector will not fail on errant records, but will instead log them (and send to DLQ for Sink Connectors) and continue processing. If you set this property to 'none', the connector task will fail on errant records.",
          "recommended_values": [
            "none",
            "all"
          ]
        }
      ],
      "connector_configs": [
        {
          "name": "topics"
        },
        {
          "name": "errors.tolerance"
        },
        {
          "name": "errors.deadletterqueue.topic.replication.factor",
          "value": "3"
        },
        {
          "name": "errors.deadletterqueue.context.headers.enable",
          "value": "true"
        },
        {
          "name": "consumer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "consumer.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "consumer.override.max.poll.interval.ms",
          "value": "${max.poll.interval.ms}"
        },
        {
          "name": "consumer.override.max.poll.records",
          "value": "${max.poll.records}"
        },
        {
          "name": "producer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "producer.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "admin.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "admin.override.sasl.mechanism",
          "value": "PLAIN"
        }
      ]
    },
    {
      "template_id": "csfle-sink",
      "abstract": true,
      "config_defs": [
        {
          "name": "csfle.enabled",
          "type": "BOOLEAN",
          "default_value": "false",
          "importance": "HIGH",
          "group": "CSFLE",
          "order_in_group": 1,
          "docs_hidden": true,
          "display_name": "Enable Client-Side Field Level Encryption",
          "documentation": "Determines whether the connector honours CSFLE rules or not",
          "conditional_metadata_provider": [
            {
              "name": "metadata.conditional.visible",
              "arguments": {
                "config": "csfle.configs.visible",
                "values": "false"
              }
            }
          ]
        },
        {
          "name": "csfle.onFailure",
          "type": "STRING",
          "required": false,
          "default_value": "ERROR",
          "importance": "MEDIUM",
          "group": "CSFLE",
          "order_in_group": 3,
          "docs_hidden": true,
          "display_name": "Connector behaviour on data decryption failure",
          "documentation": "Configures the behavior for decryption failures. If set to ERROR, the connector will behave as configured for error behaviour. If set to NONE, the connector will ignore the decryption failure and proceed to write the data in its encrypted form.",
          "recommended_values": [
            "ERROR",
            "NONE"
          ]
        },
        {
          "name": "sr.service.account.id",
          "type": "STRING",
          "importance": "HIGH",
          "group": "CSFLE",
          "order_in_group": 2,
          "docs_hidden": true,
          "display_name": "Schema Registry Service Account",
          "documentation": "Select the service account that has appropriate permissions to schemas and encryption keys in the Schema Registry."
        }
      ],
      "connector_configs": [
        {
          "name": "csfle.enabled"
        },
        {
          "name": "value.converter.rule.executors._ENCRYPT_.disabled",
          "switch": {
            "csfle.enabled": {
              "true": "false",
              "false": "true"
            }
          }
        },
        {
          "name": "value.converter.rule.executors._ENCRYPT_.onFailure",
          "switch": {
            "csfle.onFailure": {
              "ERROR": "ERROR",
              "NONE": "NONE"
            }
          }
        },
        {
          "name": "value.converter.latest.cache.ttl.sec",
          "switch": {
            "csfle.enabled": {
              "true": "300"
            }
          }
        },
        {
          "name": "key.converter.rule.executors._ENCRYPT_.disabled",
          "switch": {
            "csfle.enabled": {
              "true": "false",
              "false": "true"
            }
          }
        },
        {
          "name": "key.converter.rule.executors._ENCRYPT_.onFailure",
          "switch": {
            "csfle.onFailure": {
              "ERROR": "ERROR",
              "NONE": "NONE"
            }
          }
        },
        {
          "name": "key.converter.auto.register.schemas",
          "switch": {
            "csfle.enabled": {
              "true": "false"
            }
          }
        },
        {
          "name": "key.converter.use.latest.version",
          "switch": {
            "csfle.enabled": {
              "true": "true"
            }
          }
        },
        {
          "name": "key.converter.latest.cache.ttl.sec",
          "switch": {
            "csfle.enabled": {
              "true": "300"
            }
          }
        }
      ]
    },
    {
      "template_id": "common-http-v2",
      "abstract": true,
      "config_defs": [
        {
          "name": "error.topic.name",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Reporter",
          "order_in_group": 1,
          "default_value": "error-${connector}",
          "display_name": "Error Topic Name",
          "documentation": "Name of the error topic",
          "docs_hidden": true
        },
        {
          "name": "report.errors.as",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Reporter",
          "order_in_group": 2,
          "default_value": "Error string",
          "display_name": "Error record format",
          "documentation": "Dictates the content of records produced to the error topic. If set to ``Error string`` the value would be a human readable string describing the failure. The value will include some or all of the following information if available: http response code, reason phrase, submitted payload, url, response content, exception and error message. If set to http_response, the value would be the plain response content for the request which failed to write the record. In both modes, any information about the failure will also be included in the error records headers.",
          "recommended_values": [
            "Error string",
            "Http response"
          ]
        },
        {
          "name": "http.api.base.url",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 1,
          "display_name": "API Base URL",
          "documentation": "The HTTP API Base URL. For example: `http://example.com/absenceManagement/v1`."
        },
        {
          "name": "auth.type",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 2,
          "display_name": "Endpoint Authentication Type",
          "documentation": "Authentication type of the endpoint. Valid values are ``NONE``, ``BASIC``, ``OAUTH2``, ``BEARER``",
          "recommended_values": [
            "NONE",
            "BASIC",
            "OAUTH2",
            "BEARER"
          ]
        },
        {
          "name": "connection.user",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 3,
          "display_name": "Auth Username",
          "documentation": "The username to be used with an endpoint requiring basic authentication."
        },
        {
          "name": "connection.password",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 4,
          "display_name": "Auth Password",
          "documentation": "The password to be used with an endpoint requiring basic authentication."
        },
        {
          "name": "bearer.token",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 5,
          "display_name": "Bearer Token",
          "documentation": "The bearer authentication token to be used with an endpoint requiring bearer token based authentication."
        },
        {
          "name": "oauth2.flow.type",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 6,
          "display_name": "OAuth2 Flow Type",
          "documentation": "OAuth flow type to use for authenticating to the API endpoint",
          "default_value": "CLIENT_CREDENTIALS_FLOW",
          "recommended_values": [
            "CLIENT_CREDENTIALS_FLOW",
            "CODE_GRANT_FLOW"
          ]
        },
        {
          "name": "oauth2.auth.endpoint",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 7,
          "display_name": "OAuth2 Auth Endpoint",
          "documentation": "The URL used to obtain an authorization code during the OAuth code grant flow"
        },
        {
          "name": "oauth2.token.url",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 8,
          "display_name": "OAuth2 Token URL",
          "documentation": "The URL to be used for fetching the OAuth2 Access & Refresh Tokens."
        },
        {
          "name": "oauth2.client.id",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 9,
          "display_name": "OAuth2 Client ID",
          "documentation": "The client id used when fetching the OAuth2 token."
        },
        {
          "name": "oauth2.client.secret",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 10,
          "display_name": "OAuth2 Client Secret",
          "documentation": "The client secret used when fetching the OAuth2 token."
        },
        {
          "name": "oauth2.token.property",
          "type": "STRING",
          "required": false,
          "default_value": "access_token",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 11,
          "display_name": "OAuth2 Token Property Name",
          "documentation": "The name of the property containing the OAuth2 token returned by the OAuth2 token URL (defaults to `access_token`)."
        },
        {
          "name": "oauth2.client.scope",
          "type": "STRING",
          "required": false,
          "default_value": "any",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 12,
          "display_name": "OAuth2 Client Scope",
          "documentation": "The scope parameter sent to the service when fetching the OAuth2 token."
        },
        {
          "name": "oauth2.client.auth.mode",
          "type": "STRING",
          "required": false,
          "default_value": "header",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 13,
          "display_name": "OAuth2 Client Mode",
          "documentation": "Specifies how to encode ``client_id`` and ``client_secret`` in the OAuth2 authorization request. If set to ``header``, the credentials are encoded as an `'Authorization: Basic <base-64 encoded client_id:client_secret>'` HTTP header. If set to 'url', then ``client_id`` and ``client_secret`` are sent as URL encoded parameters. If set to 'request_body', then ``client_id`` and ``client_secret`` are sent in the request body",
          "recommended_values": [
            "header",
            "url",
            "request_body"
          ]
        },
        {
          "name": "oauth2.client.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "LOW",
          "group": "Authentication",
          "order_in_group": 14,
          "display_name": "OAuth2 Client Headers",
          "documentation": "HTTP headers to be included in the OAuth2 client endpoint. Individual headers should be separated by `|`"
        },
        {
          "name": "oauth2.client.header.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "LOW",
          "group": "Authentication",
          "order_in_group": 15,
          "display_name": "OAuth2 Client Headers Separator",
          "documentation": "Separator character used in OAuth2 Client Headers",
          "docs_hidden": "true"
        },
        {
          "name": "oauth2.query.params",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 16,
          "display_name": "OAuth query parameters",
          "documentation": "OAuth query parameters."
        },
        {
          "name": "oauth2.auth.button",
          "type": "STRING",
          "required": false,
          "queryable_internal": true,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 17,
          "display_name": "Authorize Connector",
          "documentation": "Initiates the OAuth authentication flow."
        },
        {
          "name": "oauth2.refresh.token",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 18,
          "display_name": "Refresh Token",
          "documentation": "OAuth 2.0 refresh token."
        },
        {
          "name": "oauth2.session.id",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "queryable_internal": true,
          "group": "Authentication",
          "order_in_group": 19,
          "display_name": "Connect OAuth Session ID",
          "documentation": "Connect OAuth Session ID."
        },
        {
          "name": "oauth.config.map",
          "type": "STRING",
          "required": false,
          "default_value": "auth_endpoint:oauth2.auth.endpoint,token_endpoint:oauth2.token.url,client_id:oauth2.client.id,client_secret:oauth2.client.secret,client_auth_mode:oauth2.client.auth.mode,scopes:oauth2.client.scope,query_params:oauth2.query.params,oauth_session_id:oauth2.session.id,refresh_token:oauth2.refresh.token,connector_class:connector.class,auth_button:oauth2.auth.button",
          "importance": "HIGH",
          "queryable_internal": true,
          "group": "Authentication",
          "order_in_group": 20,
          "display_name": "Connect OAuth Config Map",
          "documentation": "Connect OAuth Config Map to map OAuth API parameters to ConfigDefs."
        },
        {
          "name": "gcp.credentials.json",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 21,
          "display_name": "GCP credentials file",
          "documentation": "GCP service account JSON file.",
          "sanitizers": [
            {
              "name": "gcp.credentials.sanitize"
            }
          ],
          "docs_hidden": true
        },
        {
          "name": "oauth2.jwt.enabled",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 22,
          "display_name": "Add JWT token",
          "documentation": "Whether to generate and add JWT token to request. If selected, JWT token will be added as 'jwt_token' request param",
          "docs_hidden": true
        },
        {
          "name": "oauth2.jwt.keystore.path",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 23,
          "display_name": "JWT keystore",
          "documentation": "Keystore containing private key to use to sign JWT.",
          "docs_hidden": true
        },
        {
          "name": "oauth2.jwt.keystore.password",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 24,
          "display_name": "JWT keystore password",
          "documentation": "Password to access keystore",
          "docs_hidden": true
        },
        {
          "name": "oauth2.jwt.keystore.type",
          "type": "STRING",
          "required": false,
          "default_value": "JKS",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 25,
          "display_name": "JWT keystore type",
          "documentation": "JWT keystore type",
          "docs_hidden": true,
          "recommended_values": [
            "JKS",
            "PKCS12"
          ]
        },
        {
          "name": "oauth2.jwt.claimset",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 26,
          "display_name": "JWT JSON claims",
          "documentation": "JSON containing JWT claims",
          "docs_hidden": true
        },
        {
          "name": "https.ssl.enabled",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 27,
          "display_name": "SSL Enabled",
          "documentation": "Controls whether to enforce TLSv1.3 for HTTPS connections. If false, the connector uses the JVM default TLS configuration (typically TLSv1.2). If true, TLSv1.3 is enforced. Note that, even when disabled, HTTPS connections still use TLS. This setting only controls TLS version enforcement."
        },
        {
          "name": "https.ssl.keystorefile",
          "type": "PASSWORD",
          "required": false,
          "default_value": "",
          "importance": "LOW",
          "group": "Authentication",
          "order_in_group": 28,
          "display_name": "Key Store",
          "documentation": "The key store containing the server certificate."
        },
        {
          "name": "https.ssl.keystore.password",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 29,
          "display_name": "Keystore Password",
          "documentation": "The store password for the key store file."
        },
        {
          "name": "https.ssl.key.password",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 30,
          "display_name": "Key Password",
          "documentation": "The password for the private key in the key store file."
        },
        {
          "name": "https.ssl.truststorefile",
          "type": "PASSWORD",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 31,
          "display_name": "Trust Store",
          "documentation": "The trust store containing a server CA certificate."
        },
        {
          "name": "https.ssl.truststore.password",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 32,
          "display_name": "Trust Store Password",
          "documentation": "The trust store password containing a server CA certificate."
        },
        {
          "name": "apis.num",
          "type": "INT",
          "required": true,
          "default_value": 1,
          "importance": "HIGH",
          "group": "APIs",
          "order_in_group": 1,
          "display_name": "Number of http(s) APIs.",
          "documentation": "The number of http(s) APIs to configure. This value should be less than or equal to 15"
        },
        {
          "name": "behavior.on.error",
          "type": "STRING",
          "required": false,
          "default_value": "FAIL",
          "importance": "LOW",
          "group": "Behavior on error",
          "order_in_group": 1,
          "display_name": "Behavior On Errors",
          "documentation": "Error handling behavior setting for handling error response from HTTP requests. ",
          "recommended_values": [
            "FAIL",
            "IGNORE"
          ]
        },
        {
          "name": "https.ssl.protocol",
          "type": "STRING",
          "required": false,
          "default_value": "TLSv1.3",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 25,
          "display_name": "SSL Protocol",
          "documentation": "The protocol to use for SSL connections"
        },
        {
          "name": "api1.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset')."
        },
        {
          "name": "api1.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`."
        },
        {
          "name": "api1.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established"
        },
        {
          "name": "api1.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server"
        },
        {
          "name": "api1.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task."
        },
        {
          "name": "api1.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ]
        },
        {
          "name": "api1.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries."
        },
        {
          "name": "api1.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests."
        },
        {
          "name": "api1.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api1.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api1.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record."
        },
        {
          "name": "api1.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api1.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-1 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api1.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api2.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api2.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api2.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api2.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-2 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api3.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api3.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api3.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api3.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-3 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api4.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api4.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api4.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api4.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-4 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api5.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api5.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api5.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api5.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-5 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api6.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api6.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api6.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api6.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-6 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api7.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api7.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api7.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api7.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-7 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api8.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api8.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api8.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api8.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-8 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api9.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api9.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api9.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api9.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-9 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api10.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api10.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api10.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api10.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-10 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api11.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api11.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api11.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api11.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-11 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api12.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api12.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api12.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api12.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-12 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api13.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api13.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api13.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api13.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-13 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api14.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api14.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api14.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api14.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-14 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api15.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api15.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api15.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers in the config 'http.request.headers'.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters in the config 'http.request.parameters'.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${key}``, ``${topic}``, ``${offset}`` or other field references from kafka record.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 12,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters in the config `http.path.parameters`",
          "docs_hidden": "true"
        },
        {
          "name": "api15.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-15 Configs",
          "order_in_group": 13,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 17,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        }
      ],
      "connector_configs": [
        {
          "name": "apis.num"
        },
        {
          "name": "max.apis.num",
          "value": "15"
        },
        {
          "name": "http.api.base.url"
        },
        {
          "name": "max.execution.timeout.ms"
        },
        {
          "name": "auth.type"
        },
        {
          "name": "connection.user"
        },
        {
          "name": "connection.password"
        },
        {
          "name": "bearer.token"
        },
        {
          "name": "oauth2.flow.type"
        },
        {
          "name": "oauth2.token.url"
        },
        {
          "name": "oauth2.client.id"
        },
        {
          "name": "oauth2.client.secret"
        },
        {
          "name": "oauth2.token.property"
        },
        {
          "name": "oauth2.client.headers"
        },
        {
          "name": "oauth2.client.header.separator"
        },
        {
          "name": "oauth2.client.scope"
        },
        {
          "name": "oauth2.client.auth.mode"
        },
        {
          "name": "oauth2.jwt.enabled"
        },
        {
          "name": "oauth2.jwt.keystore.path"
        },
        {
          "name": "oauth2.jwt.keystore.password"
        },
        {
          "name": "oauth2.jwt.keystore.type"
        },
        {
          "name": "oauth2.jwt.claimset"
        },
        {
          "name": "https.ssl.enabled"
        },
        {
          "name": "https.ssl.keystore.location",
          "value": "${https.ssl.keystorefile}"
        },
        {
          "name": "https.ssl.keystore.password"
        },
        {
          "name": "https.ssl.key.password"
        },
        {
          "name": "behavior.on.error"
        },
        {
          "name": "send.multiple.http.requests.per.api"
        },
        {
          "name": "https.ssl.truststore.location",
          "value": "${https.ssl.truststorefile}"
        },
        {
          "name": "https.ssl.truststore.password"
        },
        {
          "name": "https.ssl.protocol"
        },
        {
          "name": "connector.endpoint",
          "value": "${http.api.base.url}"
        },
        {
          "name": "reporter.error.topic.name",
          "value": "error-${connector}"
        },
        {
          "name": "report.errors.as",
          "switch": {
            "report.errors.as": {
              "Error string": "ERROR_STRING",
              "Http response": "HTTP_RESPONSE"
            }
          }
        },
        {
          "name": "add.error.to.trace",
          "value": "true"
        },
        {
          "name": "sensitive.headers.list"
        },
        {
          "name": "sensitive.headers.validation.enabled"
        },
        {
          "name": "api1.http.api.path"
        },
        {
          "name": "api1.http.request.headers"
        },
        {
          "name": "api1.http.request.sensitive.headers"
        },
        {
          "name": "api1.http.path.parameters"
        },
        {
          "name": "api1.http.connect.timeout.ms"
        },
        {
          "name": "api1.http.request.timeout.ms"
        },
        {
          "name": "api1.max.retries"
        },
        {
          "name": "api1.retry.backoff.ms"
        },
        {
          "name": "api1.retry.backoff.policy"
        },
        {
          "name": "api1.retry.on.status.codes"
        },
        {
          "name": "api1.test.api"
        },
        {
          "name": "api1.test.api.http.request.body"
        },
        {
          "name": "api1.test.api.topic"
        },
        {
          "name": "api1.test.api.offset"
        },
        {
          "name": "api2.http.api.path"
        },
        {
          "name": "api2.http.request.headers"
        },
        {
          "name": "api2.http.request.sensitive.headers"
        },
        {
          "name": "api2.http.path.parameters"
        },
        {
          "name": "api2.http.connect.timeout.ms"
        },
        {
          "name": "api2.http.request.timeout.ms"
        },
        {
          "name": "api2.max.retries"
        },
        {
          "name": "api2.retry.backoff.ms"
        },
        {
          "name": "api2.retry.backoff.policy"
        },
        {
          "name": "api2.retry.on.status.codes"
        },
        {
          "name": "api2.test.api"
        },
        {
          "name": "api2.test.api.http.request.body"
        },
        {
          "name": "api2.test.api.topic"
        },
        {
          "name": "api2.test.api.offset"
        },
        {
          "name": "api3.http.api.path"
        },
        {
          "name": "api3.http.request.headers"
        },
        {
          "name": "api3.http.request.sensitive.headers"
        },
        {
          "name": "api3.http.path.parameters"
        },
        {
          "name": "api3.http.connect.timeout.ms"
        },
        {
          "name": "api3.http.request.timeout.ms"
        },
        {
          "name": "api3.max.retries"
        },
        {
          "name": "api3.retry.backoff.ms"
        },
        {
          "name": "api3.retry.backoff.policy"
        },
        {
          "name": "api3.retry.on.status.codes"
        },
        {
          "name": "api3.test.api"
        },
        {
          "name": "api3.test.api.http.request.body"
        },
        {
          "name": "api3.test.api.topic"
        },
        {
          "name": "api3.test.api.offset"
        },
        {
          "name": "api4.http.api.path"
        },
        {
          "name": "api4.http.request.headers"
        },
        {
          "name": "api4.http.request.sensitive.headers"
        },
        {
          "name": "api4.http.path.parameters"
        },
        {
          "name": "api4.http.connect.timeout.ms"
        },
        {
          "name": "api4.http.request.timeout.ms"
        },
        {
          "name": "api4.max.retries"
        },
        {
          "name": "api4.retry.backoff.ms"
        },
        {
          "name": "api4.retry.backoff.policy"
        },
        {
          "name": "api4.retry.on.status.codes"
        },
        {
          "name": "api4.test.api"
        },
        {
          "name": "api4.test.api.http.request.body"
        },
        {
          "name": "api4.test.api.topic"
        },
        {
          "name": "api4.test.api.offset"
        },
        {
          "name": "api5.http.api.path"
        },
        {
          "name": "api5.http.request.headers"
        },
        {
          "name": "api5.http.request.sensitive.headers"
        },
        {
          "name": "api5.http.path.parameters"
        },
        {
          "name": "api5.http.connect.timeout.ms"
        },
        {
          "name": "api5.http.request.timeout.ms"
        },
        {
          "name": "api5.max.retries"
        },
        {
          "name": "api5.retry.backoff.ms"
        },
        {
          "name": "api5.retry.backoff.policy"
        },
        {
          "name": "api5.retry.on.status.codes"
        },
        {
          "name": "api5.test.api"
        },
        {
          "name": "api5.test.api.http.request.body"
        },
        {
          "name": "api5.test.api.topic"
        },
        {
          "name": "api5.test.api.offset"
        },
        {
          "name": "api6.http.api.path"
        },
        {
          "name": "api6.http.request.headers"
        },
        {
          "name": "api6.http.request.sensitive.headers"
        },
        {
          "name": "api6.http.path.parameters"
        },
        {
          "name": "api6.http.connect.timeout.ms"
        },
        {
          "name": "api6.http.request.timeout.ms"
        },
        {
          "name": "api6.max.retries"
        },
        {
          "name": "api6.retry.backoff.ms"
        },
        {
          "name": "api6.retry.backoff.policy"
        },
        {
          "name": "api6.retry.on.status.codes"
        },
        {
          "name": "api6.test.api"
        },
        {
          "name": "api6.test.api.http.request.body"
        },
        {
          "name": "api6.test.api.topic"
        },
        {
          "name": "api6.test.api.offset"
        },
        {
          "name": "api7.http.api.path"
        },
        {
          "name": "api7.http.request.headers"
        },
        {
          "name": "api7.http.request.sensitive.headers"
        },
        {
          "name": "api7.http.path.parameters"
        },
        {
          "name": "api7.http.connect.timeout.ms"
        },
        {
          "name": "api7.http.request.timeout.ms"
        },
        {
          "name": "api7.max.retries"
        },
        {
          "name": "api7.retry.backoff.ms"
        },
        {
          "name": "api7.retry.backoff.policy"
        },
        {
          "name": "api7.retry.on.status.codes"
        },
        {
          "name": "api7.test.api"
        },
        {
          "name": "api7.test.api.http.request.body"
        },
        {
          "name": "api7.test.api.topic"
        },
        {
          "name": "api7.test.api.offset"
        },
        {
          "name": "api8.http.api.path"
        },
        {
          "name": "api8.http.request.headers"
        },
        {
          "name": "api8.http.request.sensitive.headers"
        },
        {
          "name": "api8.http.path.parameters"
        },
        {
          "name": "api8.http.connect.timeout.ms"
        },
        {
          "name": "api8.http.request.timeout.ms"
        },
        {
          "name": "api8.max.retries"
        },
        {
          "name": "api8.retry.backoff.ms"
        },
        {
          "name": "api8.retry.backoff.policy"
        },
        {
          "name": "api8.retry.on.status.codes"
        },
        {
          "name": "api8.test.api"
        },
        {
          "name": "api8.test.api.http.request.body"
        },
        {
          "name": "api8.test.api.topic"
        },
        {
          "name": "api8.test.api.offset"
        },
        {
          "name": "api9.http.api.path"
        },
        {
          "name": "api9.http.request.headers"
        },
        {
          "name": "api9.http.request.sensitive.headers"
        },
        {
          "name": "api9.http.path.parameters"
        },
        {
          "name": "api9.http.connect.timeout.ms"
        },
        {
          "name": "api9.http.request.timeout.ms"
        },
        {
          "name": "api9.max.retries"
        },
        {
          "name": "api9.retry.backoff.ms"
        },
        {
          "name": "api9.retry.backoff.policy"
        },
        {
          "name": "api9.retry.on.status.codes"
        },
        {
          "name": "api9.test.api"
        },
        {
          "name": "api9.test.api.http.request.body"
        },
        {
          "name": "api9.test.api.topic"
        },
        {
          "name": "api9.test.api.offset"
        },
        {
          "name": "api10.http.api.path"
        },
        {
          "name": "api10.http.request.headers"
        },
        {
          "name": "api10.http.request.sensitive.headers"
        },
        {
          "name": "api10.http.path.parameters"
        },
        {
          "name": "api10.http.connect.timeout.ms"
        },
        {
          "name": "api10.http.request.timeout.ms"
        },
        {
          "name": "api10.max.retries"
        },
        {
          "name": "api10.retry.backoff.ms"
        },
        {
          "name": "api10.retry.backoff.policy"
        },
        {
          "name": "api10.retry.on.status.codes"
        },
        {
          "name": "api10.test.api"
        },
        {
          "name": "api10.test.api.http.request.body"
        },
        {
          "name": "api10.test.api.topic"
        },
        {
          "name": "api10.test.api.offset"
        },
        {
          "name": "api11.http.api.path"
        },
        {
          "name": "api11.http.request.headers"
        },
        {
          "name": "api11.http.request.sensitive.headers"
        },
        {
          "name": "api11.http.path.parameters"
        },
        {
          "name": "api11.http.connect.timeout.ms"
        },
        {
          "name": "api11.http.request.timeout.ms"
        },
        {
          "name": "api11.max.retries"
        },
        {
          "name": "api11.retry.backoff.ms"
        },
        {
          "name": "api11.retry.backoff.policy"
        },
        {
          "name": "api11.retry.on.status.codes"
        },
        {
          "name": "api11.test.api"
        },
        {
          "name": "api11.test.api.http.request.body"
        },
        {
          "name": "api11.test.api.topic"
        },
        {
          "name": "api11.test.api.offset"
        },
        {
          "name": "api12.http.api.path"
        },
        {
          "name": "api12.http.request.headers"
        },
        {
          "name": "api12.http.request.sensitive.headers"
        },
        {
          "name": "api12.http.path.parameters"
        },
        {
          "name": "api12.http.connect.timeout.ms"
        },
        {
          "name": "api12.http.request.timeout.ms"
        },
        {
          "name": "api12.max.retries"
        },
        {
          "name": "api12.retry.backoff.ms"
        },
        {
          "name": "api12.retry.backoff.policy"
        },
        {
          "name": "api12.retry.on.status.codes"
        },
        {
          "name": "api12.test.api"
        },
        {
          "name": "api12.test.api.http.request.body"
        },
        {
          "name": "api12.test.api.topic"
        },
        {
          "name": "api12.test.api.offset"
        },
        {
          "name": "api13.http.api.path"
        },
        {
          "name": "api13.http.request.headers"
        },
        {
          "name": "api13.http.request.sensitive.headers"
        },
        {
          "name": "api13.http.path.parameters"
        },
        {
          "name": "api13.http.connect.timeout.ms"
        },
        {
          "name": "api13.http.request.timeout.ms"
        },
        {
          "name": "api13.max.retries"
        },
        {
          "name": "api13.retry.backoff.ms"
        },
        {
          "name": "api13.retry.backoff.policy"
        },
        {
          "name": "api13.retry.on.status.codes"
        },
        {
          "name": "api13.test.api"
        },
        {
          "name": "api13.test.api.http.request.body"
        },
        {
          "name": "api13.test.api.topic"
        },
        {
          "name": "api13.test.api.offset"
        },
        {
          "name": "api14.http.api.path"
        },
        {
          "name": "api14.http.request.headers"
        },
        {
          "name": "api14.http.request.sensitive.headers"
        },
        {
          "name": "api14.http.path.parameters"
        },
        {
          "name": "api14.http.connect.timeout.ms"
        },
        {
          "name": "api14.http.request.timeout.ms"
        },
        {
          "name": "api14.max.retries"
        },
        {
          "name": "api14.retry.backoff.ms"
        },
        {
          "name": "api14.retry.backoff.policy"
        },
        {
          "name": "api14.retry.on.status.codes"
        },
        {
          "name": "api14.test.api"
        },
        {
          "name": "api14.test.api.http.request.body"
        },
        {
          "name": "api14.test.api.topic"
        },
        {
          "name": "api14.test.api.offset"
        },
        {
          "name": "api15.http.api.path"
        },
        {
          "name": "api15.http.request.headers"
        },
        {
          "name": "api15.http.request.sensitive.headers"
        },
        {
          "name": "api15.http.path.parameters"
        },
        {
          "name": "api15.http.connect.timeout.ms"
        },
        {
          "name": "api15.http.request.timeout.ms"
        },
        {
          "name": "api15.max.retries"
        },
        {
          "name": "api15.retry.backoff.ms"
        },
        {
          "name": "api15.retry.backoff.policy"
        },
        {
          "name": "api15.retry.on.status.codes"
        },
        {
          "name": "api15.test.api"
        },
        {
          "name": "api15.test.api.http.request.body"
        },
        {
          "name": "api15.test.api.topic"
        },
        {
          "name": "api15.test.api.offset"
        }
      ]
    },
    {
      "template_id": "http-network-restrictions-common",
      "abstract": true,
      "config_defs": [],
      "connector_configs": [
        {
          "name": "connection.disallow.class.e.ips",
          "value": "true"
        },
        {
          "name": "connection.disallow.local.ips",
          "value": "true"
        },
        {
          "name": "connection.disallow.private.ips"
        },
        {
          "name": "connection.disallow.cidr.ranges"
        },
        {
          "name": "connection.allow.cidr.ranges"
        }
      ]
    },
    {
      "template_id": "schema-registry",
      "abstract": true,
      "config_defs": [
        {
          "name": "schema.context.name",
          "type": "STRING",
          "group": "Schema Config",
          "order_in_group": 1,
          "importance": "MEDIUM",
          "display_name": "Schema context",
          "documentation": "Add a schema context name. A schema context represents an independent scope in Schema Registry. It is a separate sub-schema tied to topics in different Kafka clusters that share the same Schema Registry instance. If not used, the connector uses the default schema configured for Schema Registry in your Confluent Cloud environment.",
          "default_value": "default",
          "dependents": [
            "schema.registry.url"
          ]
        }
      ],
      "connector_configs": []
    },
    {
      "template_id": "reporter",
      "abstract": true,
      "config_defs": [],
      "connector_configs": [
        {
          "name": "reporter.bootstrap.servers",
          "switch": {
            "connect.metadata_property.kafka.itsl.bootstrap.servers": {
              "UNSET": "${kafka.endpoint}",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.bootstrap.servers}"
            }
          }
        },
        {
          "name": "reporter.producer.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "reporter.producer.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "reporter.admin.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "reporter.admin.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "reporter.result.topic.name",
          "value": "success-${connector}"
        },
        {
          "name": "reporter.error.topic.name",
          "value": "error-${connector}"
        },
        {
          "name": "reporter.admin.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "reporter.producer.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "reporter.admin.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "reporter.producer.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "reporter.admin.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "reporter.producer.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "reporter.producer.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        },
        {
          "name": "reporter.admin.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        },
        {
          "name": "reporter.producer.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "reporter.admin.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        }
      ]
    },
    {
      "template_id": "input-data-format",
      "abstract": true,
      "config_defs": [
        {
          "name": "input.data.format",
          "type": "STRING",
          "required": true,
          "default_value": "JSON",
          "importance": "HIGH",
          "alias": "data.format",
          "group": "Input messages",
          "order_in_group": 1,
          "display_name": "Input Kafka record value format",
          "documentation": "Sets the input Kafka record value format. Valid entries are AVRO, JSON_SR, PROTOBUF, JSON or BYTES. Note that you need to have Confluent Cloud Schema Registry configured if using a schema-based message format like AVRO, JSON_SR, and PROTOBUF.",
          "recommended_values": [
            "AVRO",
            "JSON_SR",
            "PROTOBUF",
            "JSON",
            "BYTES"
          ],
          "dependents": [
            "schema.registry.url"
          ]
        },
        {
          "name": "value.converter.schemas.enable",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "Additional Configs",
          "alias": "schemas.enable",
          "display_name": "value.converter.schemas.enable",
          "documentation": "Include schemas within each of the serialized values. Input messages must contain `schema` and `payload` fields and may not contain additional fields. For plain JSON data, set this to `false`. Applicable for JSON Converter."
        },
        {
          "name": "value.converter.replace.null.with.default",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "alias": "replace.null.with.default",
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "value.converter.replace.null.with.default",
          "documentation": "Whether to replace fields that have a default value and that are null to the default value. When set to true, the default value is used, otherwise null is used. Applicable for JSON Converter."
        },
        {
          "name": "value.converter.ignore.default.for.nullables",
          "alias": "ignore.default.for.nullables",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "value.converter.ignore.default.for.nullables",
          "documentation": "When set to true, this property ensures that the corresponding record in Kafka is NULL, instead of showing the default column value. Applicable for AVRO,PROTOBUF and JSON_SR Converters."
        },
        {
          "name": "value.converter.scrub.invalid.names",
          "type": "BOOLEAN",
          "documentation": "Whether to scrub invalid names by replacing invalid characters with valid characters. Applicable for Avro and Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.scrub.invalid.names"
        }
      ],
      "connector_configs": [
        {
          "name": "value.converter",
          "switch": {
            "input.data.format": {
              "AVRO": "io.confluent.connect.avro.AvroConverter",
              "JSON_SR": "io.confluent.connect.json.JsonSchemaConverter",
              "PROTOBUF": "io.confluent.connect.protobuf.ProtobufConverter",
              "BYTES": "org.apache.kafka.connect.converters.ByteArrayConverter",
              "JSON": "org.apache.kafka.connect.json.JsonConverter"
            }
          }
        },
        {
          "name": "value.converter.schemas.enable"
        },
        {
          "name": "value.converter.replace.null.with.default"
        },
        {
          "name": "value.converter.schema.registry.url",
          "switch": {
            "input.data.format": {
              "AVRO": "${schema.registry.url}",
              "JSON_SR": "${schema.registry.url}",
              "PROTOBUF": "${schema.registry.url}"
            }
          }
        },
        {
          "name": "value.converter.basic.auth.credentials.source",
          "switch": {
            "input.data.format": {
              "AVRO": "USER_INFO",
              "JSON_SR": "USER_INFO",
              "PROTOBUF": "USER_INFO"
            }
          }
        },
        {
          "name": "value.converter.ignore.default.for.nullables"
        },
        {
          "name": "value.converter.scrub.invalid.names",
          "dynamic.mapper": {
            "name": "value.converter.scrub.invalid.names.mapper"
          }
        }
      ]
    },
    {
      "template_id": "super",
      "abstract": true,
      "config_defs": [
        {
          "name": "auto.restart.on.user.error",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "Auto-restart policy",
          "order_in_group": 1,
          "display_name": "Enable Connector Auto-restart",
          "documentation": "Enable connector to automatically restart on user-actionable errors."
        },
        {
          "name": "value.converter.enhanced.avro.schema.support",
          "type": "BOOLEAN",
          "documentation": "Enable enhanced schema support to preserve package information and Enums. Applicable for Avro Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.enhanced.avro.schema.support"
        },
        {
          "name": "value.converter.connect.meta.data",
          "type": "BOOLEAN",
          "documentation": "Allow the Connect converter to add its metadata to the output schema. Applicable for Avro Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.connect.meta.data"
        },
        {
          "name": "value.converter.enhanced.protobuf.schema.support",
          "type": "BOOLEAN",
          "documentation": "Enable enhanced schema support to preserve package information. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.enhanced.protobuf.schema.support"
        },
        {
          "name": "value.converter.generate.index.for.unions",
          "type": "BOOLEAN",
          "documentation": "Whether to generate an index suffix for unions. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.generate.index.for.unions"
        },
        {
          "name": "value.converter.int.for.enums",
          "type": "BOOLEAN",
          "documentation": "Whether to represent enums as integers. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.int.for.enums"
        },
        {
          "name": "value.converter.optional.for.nullables",
          "type": "BOOLEAN",
          "documentation": "Whether nullable fields should be specified with an optional label. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.optional.for.nullables"
        },
        {
          "name": "value.converter.generate.struct.for.nulls",
          "type": "BOOLEAN",
          "documentation": "Whether to generate a struct variable for null values. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.generate.struct.for.nulls"
        },
        {
          "name": "value.converter.wrapper.for.nullables",
          "type": "BOOLEAN",
          "documentation": "Whether nullable fields should use primitive wrapper messages. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.wrapper.for.nullables"
        },
        {
          "name": "value.converter.wrapper.for.raw.primitives",
          "type": "BOOLEAN",
          "documentation": "Whether a wrapper message should be interpreted as a raw primitive at root level. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.wrapper.for.raw.primitives"
        },
        {
          "name": "value.converter.object.additional.properties",
          "type": "BOOLEAN",
          "documentation": "Whether to allow additional properties for object schemas. Applicable for JSON_SR Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.object.additional.properties"
        },
        {
          "name": "value.converter.use.optional.for.nonrequired",
          "type": "BOOLEAN",
          "documentation": "Whether to set non-required properties to be optional. Applicable for JSON_SR Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.use.optional.for.nonrequired"
        },
        {
          "name": "value.converter.decimal.format",
          "type": "STRING",
          "recommended_values": [
            "BASE64",
            "NUMERIC"
          ],
          "documentation": "Specify the JSON/JSON_SR serialization format for Connect DECIMAL logical type values with two allowed literals:\nBASE64 to serialize DECIMAL logical types as base64 encoded binary data and\nNUMERIC to serialize Connect DECIMAL logical type values in JSON/JSON_SR as a number representing the decimal value.",
          "group": "Additional Configs",
          "alias": "json.output.decimal.format",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.decimal.format",
          "default_value": "BASE64"
        },
        {
          "name": "value.converter.auto.register.schemas",
          "type": "BOOLEAN",
          "documentation": "Specify if the Serializer should attempt to register the Schema.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.auto.register.schemas"
        },
        {
          "name": "value.converter.use.latest.version",
          "type": "BOOLEAN",
          "documentation": "Use latest version of schema in subject for serialization when auto.register.schemas is false.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.use.latest.version"
        },
        {
          "name": "value.converter.latest.compatibility.strict",
          "type": "BOOLEAN",
          "documentation": "Verify latest subject version is backward compatible when `use.latest.version` is `true`.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.latest.compatibility.strict"
        },
        {
          "name": "key.converter.key.subject.name.strategy",
          "type": "STRING",
          "default_value": "TopicNameStrategy",
          "recommended_values": [
            "TopicNameStrategy",
            "RecordNameStrategy",
            "TopicRecordNameStrategy"
          ],
          "alias": "key.subject.name.strategy",
          "documentation": "How to construct the subject name for key schema registration.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "key.converter.key.subject.name.strategy"
        },
        {
          "name": "value.converter.value.subject.name.strategy",
          "type": "STRING",
          "recommended_values": [
            "TopicNameStrategy",
            "RecordNameStrategy",
            "TopicRecordNameStrategy"
          ],
          "default_value": "TopicNameStrategy",
          "alias": "subject.name.strategy,value.subject.name.strategy",
          "documentation": "Determines how to construct the subject name under which the value schema is registered with Schema Registry.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.value.subject.name.strategy"
        },
        {
          "name": "value.converter.reference.subject.name.strategy",
          "type": "STRING",
          "recommended_values": [
            "DefaultReferenceSubjectNameStrategy",
            "QualifiedReferenceSubjectNameStrategy"
          ],
          "default_value": "DefaultReferenceSubjectNameStrategy",
          "documentation": "Set the subject reference name strategy for value. Valid entries are DefaultReferenceSubjectNameStrategy or QualifiedReferenceSubjectNameStrategy. Note that the subject reference name strategy can be selected only for PROTOBUF format with the default strategy being DefaultReferenceSubjectNameStrategy.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.reference.subject.name.strategy"
        },
        {
          "name": "value.converter.allow.optional.map.keys",
          "type": "BOOLEAN",
          "documentation": "Allow optional string map key when converting from Connect Schema to Avro Schema. Applicable for Avro Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.allow.optional.map.keys"
        },
        {
          "name": "value.converter.flatten.singleton.unions",
          "type": "BOOLEAN",
          "default_value": "false",
          "documentation": "Whether to flatten singleton unions. Applicable for Avro and JSON_SR Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.flatten.singleton.unions"
        },
        {
          "name": "value.converter.optional.for.proto2",
          "type": "BOOLEAN",
          "documentation": "Whether proto2 optionals are supported. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.optional.for.proto2"
        },
        {
          "name": "value.converter.flatten.unions",
          "type": "BOOLEAN",
          "documentation": "Whether to flatten unions (oneofs). Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.flatten.unions"
        },
        {
          "name": "header.converter",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "header.converter",
          "documentation": "The converter class for the headers. This is used to serialize and deserialize the headers of the messages.",
          "recommended_values": [
            "org.apache.kafka.connect.storage.SimpleHeaderConverter",
            "org.apache.kafka.connect.storage.StringConverter",
            "org.apache.kafka.connect.json.JsonConverter",
            "org.apache.kafka.connect.converters.BooleanConverter",
            "org.apache.kafka.connect.converters.DoubleConverter",
            "org.apache.kafka.connect.converters.FloatConverter",
            "org.apache.kafka.connect.converters.IntegerConverter",
            "org.apache.kafka.connect.converters.LongConverter",
            "org.apache.kafka.connect.converters.ShortConverter"
          ]
        }
      ],
      "connector_configs": [
        {
          "name": "auto.restart.on.user.error"
        },
        {
          "name": "value.converter.enhanced.avro.schema.support"
        },
        {
          "name": "value.converter.connect.meta.data"
        },
        {
          "name": "value.converter.enhanced.protobuf.schema.support"
        },
        {
          "name": "value.converter.generate.index.for.unions"
        },
        {
          "name": "value.converter.int.for.enums"
        },
        {
          "name": "value.converter.optional.for.nullables"
        },
        {
          "name": "value.converter.generate.struct.for.nulls"
        },
        {
          "name": "value.converter.wrapper.for.nullables"
        },
        {
          "name": "value.converter.wrapper.for.raw.primitives"
        },
        {
          "name": "value.converter.object.additional.properties"
        },
        {
          "name": "value.converter.use.optional.for.nonrequired"
        },
        {
          "name": "value.converter.decimal.format"
        },
        {
          "name": "value.converter.auto.register.schemas",
          "dynamic.mapper": {
            "name": "value.converter.auto.register.schemas.mapper"
          }
        },
        {
          "name": "value.converter.use.latest.version",
          "dynamic.mapper": {
            "name": "value.converter.use.latest.version.mapper"
          }
        },
        {
          "name": "value.converter.latest.compatibility.strict"
        },
        {
          "name": "value.converter.value.subject.name.strategy",
          "dynamic.mapper": {
            "name": "value.converter.value.subject.name.strategy.mapper"
          }
        },
        {
          "name": "key.converter.key.subject.name.strategy",
          "dynamic.mapper": {
            "name": "value.converter.value.subject.name.strategy.mapper"
          }
        },
        {
          "name": "value.converter.reference.subject.name.strategy",
          "dynamic.mapper": {
            "name": "value.converter.reference.subject.name.strategy.mapper"
          }
        },
        {
          "name": "value.converter.allow.optional.map.keys"
        },
        {
          "name": "value.converter.flatten.singleton.unions"
        },
        {
          "name": "value.converter.optional.for.proto2"
        },
        {
          "name": "value.converter.flatten.unions"
        },
        {
          "name": "header.converter"
        }
      ]
    }
  ]
}