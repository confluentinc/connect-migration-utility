{
  "templates": [
    {
      "template_id": "HttpSourceV2",
      "connector_type": "SOURCE",
      "connector.class": "io.confluent.connect.http.source.GenericHttpSourceConnector",
      "config_defs": [
        {
          "name": "tasks.max",
          "type": "INT",
          "required": true,
          "importance": "HIGH",
          "group": "Number of tasks for this connector",
          "order_in_group": 1,
          "display_name": "Tasks",
          "documentation": "Maximum number of tasks for the connector."
        },
        {
          "name": "output.data.format",
          "type": "STRING",
          "required": true,
          "default_value": "JSON_SR",
          "importance": "HIGH",
          "group": "Output messages",
          "order_in_group": 1,
          "display_name": "Select output record value format",
          "alias": "data.format",
          "documentation": "Sets the output Kafka record value format. Valid entries are AVRO, JSON_SR, or PROTOBUF. Please configure Confluent Cloud Schema Registry.",
          "recommended_values": [
            "AVRO",
            "JSON_SR",
            "PROTOBUF"
          ],
          "dependents": [
            "schema.registry.url"
          ]
        },
        {
          "name": "api.chaining.parent.child.relationship",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "default_value": "",
          "group": "APIs",
          "order_in_group": 10,
          "display_name": "API Chaining Parent Child Relationship",
          "documentation": "Comma separated list of parent-child relationship in case of API Chaining. For ex - If api1 is the parent API, and api2,api3 are the child APIs of api1, then the value will be set to ``api1::api2,api1::api3``."
        },
        {
          "name": "api1.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to."
        },
        {
          "name": "api1.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ]
        },
        {
          "name": "api1.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`."
        },
        {
          "name": "api1.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`."
        },
        {
          "name": "api1.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ]
        },
        {
          "name": "api1.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``."
        },
        {
          "name": "api1.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record)."
        },
        {
          "name": "api1.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``."
        },
        {
          "name": "api1.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``."
        },
        {
          "name": "api1.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests."
        },
        {
          "name": "api1.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true"
        },
        {
          "name": "api1.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode."
        },
        {
          "name": "api1.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls."
        },
        {
          "name": "api1.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``."
        },
        {
          "name": "api1.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token."
        },
        {
          "name": "api1.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``."
        },
        {
          "name": "api1.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ]
        },
        {
          "name": "api1.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ]
        },
        {
          "name": "api1.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time."
        },
        {
          "name": "api1.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination."
        },
        {
          "name": "api1.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not."
        },
        {
          "name": "api1.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``."
        },
        {
          "name": "api1.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only."
        },
        {
          "name": "api1.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ]
        },
        {
          "name": "api1.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode."
        },
        {
          "name": "api1.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ]
        },
        {
          "name": "api1.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``."
        },
        {
          "name": "api1.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``."
        },
        {
          "name": "api2.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api2.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api2.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api2.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api3.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api3.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api3.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api4.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api4.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api4.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api5.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api5.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api5.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api6.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api6.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api6.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api7.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api7.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api7.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api8.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api8.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api8.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api9.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api9.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api9.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api10.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api10.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api10.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api11.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api11.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api11.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api12.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api12.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api12.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api13.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api13.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api13.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api14.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api14.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api14.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.topics",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 1,
          "display_name": "Topics",
          "documentation": "The name of the Kafka topics to publish data to.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.method",
          "type": "STRING",
          "required": false,
          "default_value": "GET",
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Method",
          "documentation": "HTTP Request Method. Valid options are `GET` and `POST`.",
          "recommended_values": [
            "GET",
            "POST"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 3,
          "display_name": "HTTP Request Parameters",
          "documentation": "HTTP parameters to be added to each request. Parameter names and values should be separated by ``=``. Distinct parameters should be separated by ``&``. Parameter values can be templated with offset information (for example: ``search_after=${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The parameters are only set if 'http.request.method' = `GET`.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.body",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 4,
          "display_name": "HTTP Request Body",
          "documentation": "The payload to be sent along with each HTTP request. The value can be templated with offset (for example: ``search_after: ${offset}``) where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset'). The body is only set if 'http.request.method' = `POST`.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.offset.mode",
          "type": "STRING",
          "required": true,
          "default_value": "SIMPLE_INCREMENTING",
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 5,
          "display_name": "HTTP Offset Mode",
          "documentation": "This config indicates how offsets are computed and how requests are generated. If set to ``SIMPLE_INCREMENTING``, the ${offset} used to generate requests is simply the previous offset (or ``http.initial.offset``) incremented by 1 per sourced record. In this mode, ``http.initial.offset`` needs to be set to an integer value. If set to ``CHAINING``, the config 'http.offset.json.pointer' needs to be set, and the offset for a record is set to the value for the configured key in the response data. If the value is ``CURSOR_PAGINATION``, then the config 'http.next.page.json.pointer' needs to be set and the offset for the last record in each page will be set to the next page value. If set to ``SNAPSHOT_PAGINATION``, only the config 'http.offset.json.pointer' needs to be set.",
          "recommended_values": [
            "SIMPLE_INCREMENTING",
            "CHAINING",
            "CURSOR_PAGINATION",
            "SNAPSHOT_PAGINATION"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.initial.offset",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 6,
          "display_name": "HTTP Initial Offset",
          "documentation": "The initial offset to be used to generate the first request. This needs to be set if either one or more of the configs - 'url', 'http.request.parameters', or 'http.request.body' contain the template variable ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.response.data.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 7,
          "display_name": "HTTP Response Data JSON Pointer",
          "documentation": "The JSON Pointer to the entity in the JSON response containing the actual data that should be written to Kafka as records. The entity can be an array (multiple records in a single response) or an object / scalar value (single record).",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.offset.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 8,
          "display_name": "HTTP Offset JSON Pointer",
          "documentation": "The JSON Pointer to the value in each record that corresponds to the offset for that record (it is relative to 'http.response.data.json.pointer'). The offset will be available to the subsequent request as ${offset} and it will also be used for checkpointing and recovery in case of connector failures or restarts. This config should only be set if 'http.offset.mode' is set to ``CHAINING``.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.next.page.json.pointer",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Next Page JSON Pointer",
          "documentation": "The JSON pointer to the value in the response which corresponds to the next page reference (either a page token, a full URL or a URL fragment). This will be stored as the offset and will be available to the subsequent request via the template variable ${offset}. This config should only be set if 'http.offset.mode' is set to ``CURSOR_PAGINATION``.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.request.interval.ms",
          "type": "INT",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 10,
          "display_name": "Request Interval (ms)",
          "documentation": "The time in milliseconds to wait between consecutive requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.response.schema",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 11,
          "display_name": "HTTP Response schema",
          "documentation": "HTTP response schema parsed from the swagger spec.",
          "internal": "true",
          "docs_hidden": "true"
        },
        {
          "name": "api15.enable.cursor.pagination.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 12,
          "display_name": "Cursor pagination with timestamp mode",
          "documentation": "Whether to use cursor pagination with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.timestamp.json.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 13,
          "display_name": "JSON pointer to the timestamp field in the response.",
          "documentation": "JSON pointer to the timestamp field in the response. It is used to construct time related parameters for the subsequent API calls.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.initial.start.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 14,
          "display_name": "Initial start timestamp value",
          "documentation": "The initial start timestamp to be used to generate the first request. This needs to be set when using ``cursor.pagination.with.timestamp.mode`` or when ``chaining.with.timestamp.mode.record.ordering`` is set to ``Global``.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.cursor.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 15,
          "display_name": "Name of the cursor pagination request parameter",
          "documentation": "Name of the request parameter which holds the next page token.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.initial.end.timestamp.value",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 16,
          "display_name": "Initial end timestamp value",
          "documentation": "Sets the initial end timestamp to generate the first request when using ``enable.cursor.pagination.with.timestamp.mode``.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.timestamp.format",
          "type": "STRING",
          "required": false,
          "default_value": "Unix Timestamp Milliseconds",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 17,
          "display_name": "Timestamp format",
          "documentation": "Timestamp format used in the time related request parameters. It should match the format of initial.start.timestamp.value and initial.end.timestamp.value",
          "recommended_values": [
            "Unix Timestamp Milliseconds",
            "Simple Date Format",
            "Unix Timestamp Seconds"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api15.timestamp.interval.format",
          "type": "STRING",
          "required": false,
          "default_value": "Seconds",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 18,
          "display_name": "Timestamp interval format",
          "documentation": "Format of the timestamp interval provided.",
          "recommended_values": [
            "Seconds",
            "Days"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.timestamp.interval",
          "type": "LONG",
          "required": false,
          "default_value": "86400",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 19,
          "display_name": "Timestamp interval (in seconds)",
          "documentation": "Timestamp interval between start time and end time.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.time.range.request.delay",
          "type": "LONG",
          "required": false,
          "default_value": "60000",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 20,
          "display_name": "Time range request delay",
          "documentation": "The time in milliseconds to wait between consecutive time range requests in timestamp mode with cursor pagination.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.is.next.page.token.absolute.url",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 21,
          "display_name": "Next page token absolute URL",
          "documentation": "Whether next page token is an absolute url or not.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.path.parameters",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 22,
          "display_name": "HTTP Path Parameters",
          "documentation": "HTTP path parameters to be added to the request. Parameter names and values should be separated by ``:``. Distinct parameters should be separated by ``|``. Parameter values can be templated with different template values like ``${offset}``.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.path.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 23,
          "display_name": "HTTP Path Parameters Separator",
          "documentation": "The character that separates multiple distinct path parameters within ``http.path.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.response.schema.enforce",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 24,
          "display_name": "HTTP Response Schema Enforcement",
          "documentation": "Controls how strictly the connector enforces the HTTP response schema. When set to ``STRICT``, the connector validates that the response conforms to the defined OpenAPI response schema. For both missing non-optional and new fields, the connector handles the error (fail or ignore) based on the ``behavior.on.error`` setting. When set to ``NONE``, the connector does not enforce the OpenAPI schema and incase non-optional field is missing, connector deduces the schema for the response dynamically otherwise connector registers new fields as optional strings.",
          "recommended_values": [
            "STRICT",
            "NONE"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api15.chaining.with.timestamp.mode",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 25,
          "display_name": "Chaining with timestamp mode",
          "documentation": "Whether to use chaining with timestamp mode.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.chaining.with.timestamp.mode.record.ordering",
          "type": "STRING",
          "required": false,
          "default_value": "Relative",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 26,
          "display_name": "Chaining Timestamp Record Ordering",
          "documentation": "Specifies how records are ordered during chaining when using timestamp mode. Use 'Relative' when the source API provides ordering only within a time window, where the order may vary across queries. Use 'Global' when the source API guarantees a consistent ordering across all queries.",
          "recommended_values": [
            "Relative",
            "Global"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.chaining.pagination.parameter.name",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 27,
          "display_name": "Chaining pagination request parameter name",
          "documentation": "Specifies the name of the query parameter used in the request for chaining with time window pagination. This is typically used when fetching the next page of results using values like ``starting_after``.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.offset.json.primary.key.pointer",
          "type": "STRING",
          "required": false,
          "default_value": "",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 28,
          "display_name": "HTTP Offset JSON Primary Key Pointer",
          "documentation": "Defines the JSON Pointer to the offset value within each record (relative to ``http.response.data.json.pointer``).  This offset becomes ``${primary_key}`` for subsequent requests and enables checkpointing and recovery if the connector fails or restarts. Only applicable when ``http.offset.mode`` is set to ``CHAINING``.",
          "docs_hidden": "true"
        }
      ],
      "connector_configs": [
        {
          "name": "admin.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "admin.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "producer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "producer.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "reporter.result.topic.name",
          "value": ""
        },
        {
          "name": "api.chaining.parent.child.relationship"
        },
        {
          "name": "workqueue.topic.bootstrap.servers",
          "switch": {
            "connect.metadata_property.kafka.itsl.bootstrap.servers": {
              "UNSET": "${kafka.endpoint}",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.bootstrap.servers}"
            }
          }
        },
        {
          "name": "workqueue.topic.replication.factor",
          "value": "3"
        },
        {
          "name": "workqueue.topic.internal.consumer.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "workqueue.topic.internal.producer.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "workqueue.topic.internal.consumer.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "workqueue.topic.internal.producer.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "workqueue.topic.internal.consumer.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "workqueue.topic.internal.producer.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "workqueue.topic.internal.consumer.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        },
        {
          "name": "workqueue.topic.internal.producer.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        },
        {
          "name": "workqueue.topic.internal.consumer.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "workqueue.topic.internal.producer.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "workqueue.topic.internal.producer.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "workqueue.topic.internal.producer.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "workqueue.topic.internal.consumer.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "workqueue.topic.internal.consumer.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "workqueue.topic.partition.count",
          "value": "15"
        },
        {
          "name": "api1.topics"
        },
        {
          "name": "api1.http.request.method"
        },
        {
          "name": "api1.http.request.parameters"
        },
        {
          "name": "api1.http.request.body"
        },
        {
          "name": "api1.http.initial.offset"
        },
        {
          "name": "api1.http.offset.mode"
        },
        {
          "name": "api1.http.response.data.json.pointer"
        },
        {
          "name": "api1.http.offset.json.pointer"
        },
        {
          "name": "api1.http.next.page.json.pointer"
        },
        {
          "name": "api1.request.interval.ms"
        },
        {
          "name": "api1.http.response.schema"
        },
        {
          "name": "api1.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api1.is.next.page.token.absolute.url"
        },
        {
          "name": "api1.http.timestamp.json.pointer"
        },
        {
          "name": "api1.initial.start.timestamp.value"
        },
        {
          "name": "api1.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api1.initial.end.timestamp.value"
        },
        {
          "name": "api1.http.timestamp.format",
          "switch": {
            "api1.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api1.http.timestamp.interval.format",
          "switch": {
            "api1.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api1.http.timestamp.interval"
        },
        {
          "name": "api1.time.range.request.delay"
        },
        {
          "name": "api1.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api1.http.response.schema.enforce"
        },
        {
          "name": "api1.chaining.with.timestamp.mode"
        },
        {
          "name": "api1.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api1.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api1.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api1.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api2.topics"
        },
        {
          "name": "api2.http.request.method"
        },
        {
          "name": "api2.http.request.parameters"
        },
        {
          "name": "api2.http.request.body"
        },
        {
          "name": "api2.http.initial.offset"
        },
        {
          "name": "api2.http.offset.mode"
        },
        {
          "name": "api2.http.response.data.json.pointer"
        },
        {
          "name": "api2.http.offset.json.pointer"
        },
        {
          "name": "api2.http.next.page.json.pointer"
        },
        {
          "name": "api2.request.interval.ms"
        },
        {
          "name": "api2.http.response.schema"
        },
        {
          "name": "api2.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api2.is.next.page.token.absolute.url"
        },
        {
          "name": "api2.http.timestamp.json.pointer"
        },
        {
          "name": "api2.initial.start.timestamp.value"
        },
        {
          "name": "api2.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api2.initial.end.timestamp.value"
        },
        {
          "name": "api2.http.timestamp.format",
          "switch": {
            "api2.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api2.http.timestamp.interval.format",
          "switch": {
            "api2.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api2.http.timestamp.interval"
        },
        {
          "name": "api2.time.range.request.delay"
        },
        {
          "name": "api2.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api2.http.response.schema.enforce"
        },
        {
          "name": "api2.chaining.with.timestamp.mode"
        },
        {
          "name": "api2.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api2.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api2.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api2.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api3.topics"
        },
        {
          "name": "api3.http.request.method"
        },
        {
          "name": "api3.http.request.parameters"
        },
        {
          "name": "api3.http.request.body"
        },
        {
          "name": "api3.http.initial.offset"
        },
        {
          "name": "api3.http.offset.mode"
        },
        {
          "name": "api3.http.response.data.json.pointer"
        },
        {
          "name": "api3.http.offset.json.pointer"
        },
        {
          "name": "api3.http.next.page.json.pointer"
        },
        {
          "name": "api3.request.interval.ms"
        },
        {
          "name": "api3.http.response.schema"
        },
        {
          "name": "api3.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api3.is.next.page.token.absolute.url"
        },
        {
          "name": "api3.http.timestamp.json.pointer"
        },
        {
          "name": "api3.initial.start.timestamp.value"
        },
        {
          "name": "api3.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api3.initial.end.timestamp.value"
        },
        {
          "name": "api3.http.timestamp.format",
          "switch": {
            "api3.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api3.http.timestamp.interval.format",
          "switch": {
            "api3.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api3.http.timestamp.interval"
        },
        {
          "name": "api3.time.range.request.delay"
        },
        {
          "name": "api3.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api3.http.response.schema.enforce"
        },
        {
          "name": "api3.chaining.with.timestamp.mode"
        },
        {
          "name": "api3.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api3.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api3.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api3.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api4.topics"
        },
        {
          "name": "api4.http.request.method"
        },
        {
          "name": "api4.http.request.parameters"
        },
        {
          "name": "api4.http.request.body"
        },
        {
          "name": "api4.http.initial.offset"
        },
        {
          "name": "api4.http.offset.mode"
        },
        {
          "name": "api4.http.response.data.json.pointer"
        },
        {
          "name": "api4.http.offset.json.pointer"
        },
        {
          "name": "api4.http.next.page.json.pointer"
        },
        {
          "name": "api4.request.interval.ms"
        },
        {
          "name": "api4.http.response.schema"
        },
        {
          "name": "api4.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api4.is.next.page.token.absolute.url"
        },
        {
          "name": "api4.http.timestamp.json.pointer"
        },
        {
          "name": "api4.initial.start.timestamp.value"
        },
        {
          "name": "api4.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api4.initial.end.timestamp.value"
        },
        {
          "name": "api4.http.timestamp.format",
          "switch": {
            "api4.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api4.http.timestamp.interval.format",
          "switch": {
            "api4.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api4.http.timestamp.interval"
        },
        {
          "name": "api4.time.range.request.delay"
        },
        {
          "name": "api4.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api4.http.response.schema.enforce"
        },
        {
          "name": "api4.chaining.with.timestamp.mode"
        },
        {
          "name": "api4.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api4.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api4.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api4.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api5.topics"
        },
        {
          "name": "api5.http.request.method"
        },
        {
          "name": "api5.http.request.parameters"
        },
        {
          "name": "api5.http.request.body"
        },
        {
          "name": "api5.http.initial.offset"
        },
        {
          "name": "api5.http.offset.mode"
        },
        {
          "name": "api5.http.response.data.json.pointer"
        },
        {
          "name": "api5.http.offset.json.pointer"
        },
        {
          "name": "api5.http.next.page.json.pointer"
        },
        {
          "name": "api5.request.interval.ms"
        },
        {
          "name": "api5.http.response.schema"
        },
        {
          "name": "api5.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api5.is.next.page.token.absolute.url"
        },
        {
          "name": "api5.http.timestamp.json.pointer"
        },
        {
          "name": "api5.initial.start.timestamp.value"
        },
        {
          "name": "api5.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api5.initial.end.timestamp.value"
        },
        {
          "name": "api5.http.timestamp.format",
          "switch": {
            "api5.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api5.http.timestamp.interval.format",
          "switch": {
            "api5.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api5.http.timestamp.interval"
        },
        {
          "name": "api5.time.range.request.delay"
        },
        {
          "name": "api5.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api5.http.response.schema.enforce"
        },
        {
          "name": "api5.chaining.with.timestamp.mode"
        },
        {
          "name": "api5.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api5.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api5.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api5.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api6.topics"
        },
        {
          "name": "api6.http.request.method"
        },
        {
          "name": "api6.http.request.parameters"
        },
        {
          "name": "api6.http.request.body"
        },
        {
          "name": "api6.http.initial.offset"
        },
        {
          "name": "api6.http.offset.mode"
        },
        {
          "name": "api6.http.response.data.json.pointer"
        },
        {
          "name": "api6.http.offset.json.pointer"
        },
        {
          "name": "api6.http.next.page.json.pointer"
        },
        {
          "name": "api6.request.interval.ms"
        },
        {
          "name": "api6.http.response.schema"
        },
        {
          "name": "api6.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api6.is.next.page.token.absolute.url"
        },
        {
          "name": "api6.http.timestamp.json.pointer"
        },
        {
          "name": "api6.initial.start.timestamp.value"
        },
        {
          "name": "api6.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api6.initial.end.timestamp.value"
        },
        {
          "name": "api6.http.timestamp.format",
          "switch": {
            "api6.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api6.http.timestamp.interval.format",
          "switch": {
            "api6.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api6.http.timestamp.interval"
        },
        {
          "name": "api6.time.range.request.delay"
        },
        {
          "name": "api6.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api6.http.response.schema.enforce"
        },
        {
          "name": "api6.chaining.with.timestamp.mode"
        },
        {
          "name": "api6.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api6.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api6.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api6.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api7.topics"
        },
        {
          "name": "api7.http.request.method"
        },
        {
          "name": "api7.http.request.parameters"
        },
        {
          "name": "api7.http.request.body"
        },
        {
          "name": "api7.http.initial.offset"
        },
        {
          "name": "api7.http.offset.mode"
        },
        {
          "name": "api7.http.response.data.json.pointer"
        },
        {
          "name": "api7.http.offset.json.pointer"
        },
        {
          "name": "api7.http.next.page.json.pointer"
        },
        {
          "name": "api7.request.interval.ms"
        },
        {
          "name": "api7.http.response.schema"
        },
        {
          "name": "api7.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api7.is.next.page.token.absolute.url"
        },
        {
          "name": "api7.http.timestamp.json.pointer"
        },
        {
          "name": "api7.initial.start.timestamp.value"
        },
        {
          "name": "api7.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api7.initial.end.timestamp.value"
        },
        {
          "name": "api7.http.timestamp.format",
          "switch": {
            "api7.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api7.http.timestamp.interval.format",
          "switch": {
            "api7.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api7.http.timestamp.interval"
        },
        {
          "name": "api7.time.range.request.delay"
        },
        {
          "name": "api7.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api7.http.response.schema.enforce"
        },
        {
          "name": "api7.chaining.with.timestamp.mode"
        },
        {
          "name": "api7.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api7.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api7.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api7.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api8.topics"
        },
        {
          "name": "api8.http.request.method"
        },
        {
          "name": "api8.http.request.parameters"
        },
        {
          "name": "api8.http.request.body"
        },
        {
          "name": "api8.http.initial.offset"
        },
        {
          "name": "api8.http.offset.mode"
        },
        {
          "name": "api8.http.response.data.json.pointer"
        },
        {
          "name": "api8.http.offset.json.pointer"
        },
        {
          "name": "api8.http.next.page.json.pointer"
        },
        {
          "name": "api8.request.interval.ms"
        },
        {
          "name": "api8.http.response.schema"
        },
        {
          "name": "api8.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api8.is.next.page.token.absolute.url"
        },
        {
          "name": "api8.http.timestamp.json.pointer"
        },
        {
          "name": "api8.initial.start.timestamp.value"
        },
        {
          "name": "api8.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api8.initial.end.timestamp.value"
        },
        {
          "name": "api8.http.timestamp.format",
          "switch": {
            "api8.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api8.http.timestamp.interval.format",
          "switch": {
            "api8.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api8.http.timestamp.interval"
        },
        {
          "name": "api8.time.range.request.delay"
        },
        {
          "name": "api8.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api8.http.response.schema.enforce"
        },
        {
          "name": "api8.chaining.with.timestamp.mode"
        },
        {
          "name": "api8.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api8.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api8.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api8.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api9.topics"
        },
        {
          "name": "api9.http.request.method"
        },
        {
          "name": "api9.http.request.parameters"
        },
        {
          "name": "api9.http.request.body"
        },
        {
          "name": "api9.http.initial.offset"
        },
        {
          "name": "api9.http.offset.mode"
        },
        {
          "name": "api9.http.response.data.json.pointer"
        },
        {
          "name": "api9.http.offset.json.pointer"
        },
        {
          "name": "api9.http.next.page.json.pointer"
        },
        {
          "name": "api9.request.interval.ms"
        },
        {
          "name": "api9.http.response.schema"
        },
        {
          "name": "api9.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api9.is.next.page.token.absolute.url"
        },
        {
          "name": "api9.http.timestamp.json.pointer"
        },
        {
          "name": "api9.initial.start.timestamp.value"
        },
        {
          "name": "api9.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api9.initial.end.timestamp.value"
        },
        {
          "name": "api9.http.timestamp.format",
          "switch": {
            "api9.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api9.http.timestamp.interval.format",
          "switch": {
            "api9.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api9.http.timestamp.interval"
        },
        {
          "name": "api9.time.range.request.delay"
        },
        {
          "name": "api9.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api9.http.response.schema.enforce"
        },
        {
          "name": "api9.chaining.with.timestamp.mode"
        },
        {
          "name": "api9.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api9.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api9.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api9.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api10.topics"
        },
        {
          "name": "api10.http.request.method"
        },
        {
          "name": "api10.http.request.parameters"
        },
        {
          "name": "api10.http.request.body"
        },
        {
          "name": "api10.http.initial.offset"
        },
        {
          "name": "api10.http.offset.mode"
        },
        {
          "name": "api10.http.response.data.json.pointer"
        },
        {
          "name": "api10.http.offset.json.pointer"
        },
        {
          "name": "api10.http.next.page.json.pointer"
        },
        {
          "name": "api10.request.interval.ms"
        },
        {
          "name": "api10.http.response.schema"
        },
        {
          "name": "api10.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api10.is.next.page.token.absolute.url"
        },
        {
          "name": "api10.http.timestamp.json.pointer"
        },
        {
          "name": "api10.initial.start.timestamp.value"
        },
        {
          "name": "api10.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api10.initial.end.timestamp.value"
        },
        {
          "name": "api10.http.timestamp.format",
          "switch": {
            "api10.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api10.http.timestamp.interval.format",
          "switch": {
            "api10.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api10.http.timestamp.interval"
        },
        {
          "name": "api10.time.range.request.delay"
        },
        {
          "name": "api10.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api10.http.response.schema.enforce"
        },
        {
          "name": "api10.chaining.with.timestamp.mode"
        },
        {
          "name": "api10.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api10.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api10.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api10.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api11.topics"
        },
        {
          "name": "api11.http.request.method"
        },
        {
          "name": "api11.http.request.parameters"
        },
        {
          "name": "api11.http.request.body"
        },
        {
          "name": "api11.http.initial.offset"
        },
        {
          "name": "api11.http.offset.mode"
        },
        {
          "name": "api11.http.response.data.json.pointer"
        },
        {
          "name": "api11.http.offset.json.pointer"
        },
        {
          "name": "api11.http.next.page.json.pointer"
        },
        {
          "name": "api11.request.interval.ms"
        },
        {
          "name": "api11.http.response.schema"
        },
        {
          "name": "api11.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api11.is.next.page.token.absolute.url"
        },
        {
          "name": "api11.http.timestamp.json.pointer"
        },
        {
          "name": "api11.initial.start.timestamp.value"
        },
        {
          "name": "api11.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api11.initial.end.timestamp.value"
        },
        {
          "name": "api11.http.timestamp.format",
          "switch": {
            "api11.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api11.http.timestamp.interval.format",
          "switch": {
            "api11.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api11.http.timestamp.interval"
        },
        {
          "name": "api11.time.range.request.delay"
        },
        {
          "name": "api11.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api11.http.response.schema.enforce"
        },
        {
          "name": "api11.chaining.with.timestamp.mode"
        },
        {
          "name": "api11.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api11.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api11.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api11.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api12.topics"
        },
        {
          "name": "api12.http.request.method"
        },
        {
          "name": "api12.http.request.parameters"
        },
        {
          "name": "api12.http.request.body"
        },
        {
          "name": "api12.http.initial.offset"
        },
        {
          "name": "api12.http.offset.mode"
        },
        {
          "name": "api12.http.response.data.json.pointer"
        },
        {
          "name": "api12.http.offset.json.pointer"
        },
        {
          "name": "api12.http.next.page.json.pointer"
        },
        {
          "name": "api12.request.interval.ms"
        },
        {
          "name": "api12.http.response.schema"
        },
        {
          "name": "api12.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api12.is.next.page.token.absolute.url"
        },
        {
          "name": "api12.http.timestamp.json.pointer"
        },
        {
          "name": "api12.initial.start.timestamp.value"
        },
        {
          "name": "api12.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api12.initial.end.timestamp.value"
        },
        {
          "name": "api12.http.timestamp.format",
          "switch": {
            "api12.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api12.http.timestamp.interval.format",
          "switch": {
            "api12.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api12.http.timestamp.interval"
        },
        {
          "name": "api12.time.range.request.delay"
        },
        {
          "name": "api12.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api12.http.response.schema.enforce"
        },
        {
          "name": "api12.chaining.with.timestamp.mode"
        },
        {
          "name": "api12.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api12.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api12.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api12.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api13.topics"
        },
        {
          "name": "api13.http.request.method"
        },
        {
          "name": "api13.http.request.parameters"
        },
        {
          "name": "api13.http.request.body"
        },
        {
          "name": "api13.http.initial.offset"
        },
        {
          "name": "api13.http.offset.mode"
        },
        {
          "name": "api13.http.response.data.json.pointer"
        },
        {
          "name": "api13.http.offset.json.pointer"
        },
        {
          "name": "api13.http.next.page.json.pointer"
        },
        {
          "name": "api13.request.interval.ms"
        },
        {
          "name": "api13.http.response.schema"
        },
        {
          "name": "api13.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api13.is.next.page.token.absolute.url"
        },
        {
          "name": "api13.http.timestamp.json.pointer"
        },
        {
          "name": "api13.initial.start.timestamp.value"
        },
        {
          "name": "api13.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api13.initial.end.timestamp.value"
        },
        {
          "name": "api13.http.timestamp.format",
          "switch": {
            "api13.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api13.http.timestamp.interval.format",
          "switch": {
            "api13.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api13.http.timestamp.interval"
        },
        {
          "name": "api13.time.range.request.delay"
        },
        {
          "name": "api13.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api13.http.response.schema.enforce"
        },
        {
          "name": "api13.chaining.with.timestamp.mode"
        },
        {
          "name": "api13.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api13.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api13.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api13.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api14.topics"
        },
        {
          "name": "api14.http.request.method"
        },
        {
          "name": "api14.http.request.parameters"
        },
        {
          "name": "api14.http.request.body"
        },
        {
          "name": "api14.http.initial.offset"
        },
        {
          "name": "api14.http.offset.mode"
        },
        {
          "name": "api14.http.response.data.json.pointer"
        },
        {
          "name": "api14.http.offset.json.pointer"
        },
        {
          "name": "api14.http.next.page.json.pointer"
        },
        {
          "name": "api14.request.interval.ms"
        },
        {
          "name": "api14.http.response.schema"
        },
        {
          "name": "api14.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api14.is.next.page.token.absolute.url"
        },
        {
          "name": "api14.http.timestamp.json.pointer"
        },
        {
          "name": "api14.initial.start.timestamp.value"
        },
        {
          "name": "api14.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api14.initial.end.timestamp.value"
        },
        {
          "name": "api14.http.timestamp.format",
          "switch": {
            "api14.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api14.http.timestamp.interval.format",
          "switch": {
            "api14.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api14.http.timestamp.interval"
        },
        {
          "name": "api14.time.range.request.delay"
        },
        {
          "name": "api14.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api14.http.response.schema.enforce"
        },
        {
          "name": "api14.chaining.with.timestamp.mode"
        },
        {
          "name": "api14.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api14.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api14.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api14.http.offset.json.primary.key.pointer"
        },
        {
          "name": "api15.topics"
        },
        {
          "name": "api15.http.request.method"
        },
        {
          "name": "api15.http.request.parameters"
        },
        {
          "name": "api15.http.request.body"
        },
        {
          "name": "api15.http.initial.offset"
        },
        {
          "name": "api15.http.offset.mode"
        },
        {
          "name": "api15.http.response.data.json.pointer"
        },
        {
          "name": "api15.http.offset.json.pointer"
        },
        {
          "name": "api15.http.next.page.json.pointer"
        },
        {
          "name": "api15.request.interval.ms"
        },
        {
          "name": "api15.http.response.schema"
        },
        {
          "name": "api15.enable.cursor.pagination.with.timestamp.mode"
        },
        {
          "name": "api15.is.next.page.token.absolute.url"
        },
        {
          "name": "api15.http.timestamp.json.pointer"
        },
        {
          "name": "api15.initial.start.timestamp.value"
        },
        {
          "name": "api15.http.cursor.pagination.parameter.name"
        },
        {
          "name": "api15.initial.end.timestamp.value"
        },
        {
          "name": "api15.http.timestamp.format",
          "switch": {
            "api15.timestamp.format": {
              "Unix Timestamp Milliseconds": "UNIX_TIMESTAMP_MILLISECONDS",
              "Simple Date Format": "SIMPLE_DATE_FORMAT",
              "Unix Timestamp Seconds": "UNIX_TIMESTAMP_SECONDS"
            }
          }
        },
        {
          "name": "api15.http.timestamp.interval.format",
          "switch": {
            "api15.timestamp.interval.format": {
              "Seconds": "SECONDS",
              "Days": "DAYS"
            }
          }
        },
        {
          "name": "api15.http.timestamp.interval"
        },
        {
          "name": "api15.time.range.request.delay"
        },
        {
          "name": "api15.should.add.start.delay",
          "switch": {
            "api.chaining.parent.child.relationship": {
              "": "false",
              "DEFAULT": "true"
            }
          }
        },
        {
          "name": "api15.http.response.schema.enforce"
        },
        {
          "name": "api15.chaining.with.timestamp.mode"
        },
        {
          "name": "api15.chaining.with.timestamp.mode.record.ordering",
          "switch": {
            "api15.chaining.with.timestamp.mode.record.ordering": {
              "Relative": "RELATIVE",
              "Global": "GLOBAL"
            }
          }
        },
        {
          "name": "api15.http.chaining.pagination.parameter.name"
        },
        {
          "name": "api15.http.offset.json.primary.key.pointer"
        }
      ]
    },
    {
      "template_id": "common",
      "global_validators": [
        {
          "name": "required",
          "priority": "HIGHEST"
        },
        {
          "name": "recommended.values",
          "priority": "HIGHER"
        }
      ],
      "abstract": true,
      "config_defs": [
        {
          "name": "connector.class",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "How should we connect to your data?",
          "order_in_group": 1,
          "display_name": "Connector class"
        },
        {
          "name": "name",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "How should we connect to your data?",
          "order_in_group": 2,
          "display_name": "Connector name",
          "documentation": "Sets a name for your connector."
        },
        {
          "name": "tasks.max",
          "type": "INT",
          "required": true,
          "importance": "HIGH",
          "group": "Number of tasks for this connector",
          "order_in_group": 1,
          "display_name": "Tasks",
          "documentation": "Maximum number of tasks for the connector."
        },
        {
          "name": "kafka.auth.mode",
          "type": "STRING",
          "required": false,
          "default_value": "KAFKA_API_KEY",
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 1,
          "display_name": "Kafka Cluster Authentication mode",
          "documentation": "Kafka Authentication mode. It can be one of KAFKA_API_KEY or SERVICE_ACCOUNT. It defaults to KAFKA_API_KEY mode.",
          "recommended_values": [
            "SERVICE_ACCOUNT",
            "KAFKA_API_KEY"
          ]
        },
        {
          "name": "kafka.api.key",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 2,
          "display_name": "Kafka API Key",
          "documentation": "Kafka API Key. Required when kafka.auth.mode==KAFKA_API_KEY."
        }
      ],
      "connector_configs": [
        {
          "name": "tasks.max"
        },
        {
          "name": "confluent.topic.bootstrap.servers",
          "value": "Placeholder value to pass connector validations"
        },
        {
          "name": "errors.log.enable",
          "value": "true"
        },
        {
          "name": "errors.log.include.messages",
          "value": "false"
        },
        {
          "name": "errors.retry.timeout",
          "value": "300000"
        },
        {
          "name": "errors.retry.delay.max.ms",
          "value": "30000"
        },
        {
          "name": "value.converter.ignore.modern.dialects",
          "value": "true"
        }
      ]
    },
    {
      "template_id": "common-kafka-connectivity",
      "abstract": true,
      "config_defs": [],
      "connector_configs": [
        {
          "name": "consumer.override.bootstrap.servers",
          "switch": {
            "connect.metadata_property.kafka.itsl.bootstrap.servers": {
              "UNSET": "${kafka.endpoint}",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.bootstrap.servers}"
            }
          }
        },
        {
          "name": "producer.override.bootstrap.servers",
          "switch": {
            "connect.metadata_property.kafka.itsl.bootstrap.servers": {
              "UNSET": "${kafka.endpoint}",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.bootstrap.servers}"
            }
          }
        },
        {
          "name": "admin.override.bootstrap.servers",
          "switch": {
            "connect.metadata_property.kafka.itsl.bootstrap.servers": {
              "UNSET": "${kafka.endpoint}",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.bootstrap.servers}"
            }
          }
        },
        {
          "name": "admin.override.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "producer.override.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "consumer.override.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "admin.override.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "producer.override.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "consumer.override.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "admin.override.security.providers",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "io.confluent.kafka.security.fips.provider.BcFipsProviderCreator,io.confluent.kafka.security.fips.provider.BcFipsJsseProviderCreator,io.confluent.kafka.server.plugins.ssl.ConfluentTrustProviderCreator",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.security.providers",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "io.confluent.kafka.security.fips.provider.BcFipsProviderCreator,io.confluent.kafka.security.fips.provider.BcFipsJsseProviderCreator,io.confluent.kafka.server.plugins.ssl.ConfluentTrustProviderCreator",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "consumer.override.security.providers",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "io.confluent.kafka.security.fips.provider.BcFipsProviderCreator,io.confluent.kafka.security.fips.provider.BcFipsJsseProviderCreator,io.confluent.kafka.server.plugins.ssl.ConfluentTrustProviderCreator",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "admin.override.ssl.provider",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "BCJSSE",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.ssl.provider",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "BCJSSE",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "consumer.override.ssl.provider",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "BCJSSE",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "admin.override.ssl.cipher.suites",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CCM,TLS_ECDHE_ECDSA_WITH_AES_128_CCM,TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8,TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_128_CCM_SHA256,TLS_AES_128_CCM_8_SHA256",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.ssl.cipher.suites",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CCM,TLS_ECDHE_ECDSA_WITH_AES_128_CCM,TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8,TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_128_CCM_SHA256,TLS_AES_128_CCM_8_SHA256",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "consumer.override.ssl.cipher.suites",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CCM,TLS_ECDHE_ECDSA_WITH_AES_128_CCM,TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8,TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_128_CCM_SHA256,TLS_AES_128_CCM_8_SHA256",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "admin.override.ssl.enabled.protocols",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLSv1.2,TLSv1.3",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.ssl.enabled.protocols",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLSv1.2,TLSv1.3",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "consumer.override.ssl.enabled.protocols",
          "switch": {
            "connect.fips.provider": {
              "BCJSSE": "TLSv1.2,TLSv1.3",
              "DEFAULT": null
            }
          }
        },
        {
          "name": "producer.override.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "consumer.override.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "admin.override.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "producer.override.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "producer.override.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        },
        {
          "name": "consumer.override.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "consumer.override.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        },
        {
          "name": "admin.override.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "admin.override.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        }
      ]
    },
    {
      "template_id": "common-http-v2",
      "abstract": true,
      "config_defs": [
        {
          "name": "report.errors.as",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Reporter",
          "order_in_group": 2,
          "default_value": "Error string",
          "display_name": "Error record format",
          "documentation": "Dictates the content of records produced to the error topic. If set to ``Error string`` the value would be a human readable string describing the failure. The value will include some or all of the following information if available: http response code, reason phrase, submitted payload, url, response content, exception and error message. If set to http_response, the value would be the plain response content for the request which failed to write the record. In both modes, any information about the failure will also be included in the error records headers.",
          "recommended_values": [
            "Error string",
            "Http response"
          ]
        },
        {
          "name": "http.api.base.url",
          "type": "STRING",
          "required": true,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 1,
          "display_name": "API Base URL",
          "documentation": "The HTTP API Base URL. For example: `http://example.com/absenceManagement/v1`."
        },
        {
          "name": "auth.type",
          "type": "STRING",
          "required": false,
          "default_value": "NONE",
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 2,
          "display_name": "Endpoint Authentication Type",
          "documentation": "Authentication type of the endpoint. Valid values are ``NONE``, ``BASIC``, ``OAUTH2``, ``BEARER``, ``API_KEY``",
          "recommended_values": [
            "NONE",
            "BASIC",
            "OAUTH2",
            "BEARER",
            "API_KEY"
          ]
        },
        {
          "name": "connection.user",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 3,
          "display_name": "Auth Username",
          "documentation": "The username to be used with an endpoint requiring basic authentication."
        },
        {
          "name": "connection.password",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 4,
          "display_name": "Auth Password",
          "documentation": "The password to be used with an endpoint requiring basic authentication."
        },
        {
          "name": "bearer.token",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 5,
          "display_name": "Bearer Token",
          "documentation": "The bearer authentication token to be used with an endpoint requiring bearer token based authentication."
        },
        {
          "name": "oauth2.flow.type",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 6,
          "display_name": "OAuth2 Flow Type",
          "documentation": "OAuth flow type to use for authenticating to the API endpoint",
          "default_value": "CLIENT_CREDENTIALS_FLOW",
          "recommended_values": [
            "CLIENT_CREDENTIALS_FLOW",
            "CODE_GRANT_FLOW"
          ]
        },
        {
          "name": "oauth2.auth.endpoint",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 7,
          "display_name": "OAuth2 Auth Endpoint",
          "documentation": "The URL used to obtain an authorization code during the OAuth code grant flow"
        },
        {
          "name": "oauth2.token.url",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 8,
          "display_name": "OAuth2 Token URL",
          "documentation": "The URL to be used for fetching the OAuth2 Access & Refresh Tokens."
        },
        {
          "name": "oauth2.client.id",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 9,
          "display_name": "OAuth2 Client ID",
          "documentation": "The client id used when fetching the OAuth2 token."
        },
        {
          "name": "oauth2.client.secret",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 10,
          "display_name": "OAuth2 Client Secret",
          "documentation": "The client secret used when fetching the OAuth2 token."
        },
        {
          "name": "oauth2.token.property",
          "type": "STRING",
          "required": false,
          "default_value": "access_token",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 11,
          "display_name": "OAuth2 Token Property Name",
          "documentation": "The name of the property containing the OAuth2 token returned by the OAuth2 token URL (defaults to `access_token`)."
        },
        {
          "name": "oauth2.client.scope",
          "type": "STRING",
          "required": false,
          "default_value": "any",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 12,
          "display_name": "OAuth2 Client Scope",
          "documentation": "The scope parameter sent to the service when fetching the OAuth2 token."
        },
        {
          "name": "oauth2.client.auth.mode",
          "type": "STRING",
          "required": false,
          "default_value": "header",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 13,
          "display_name": "OAuth2 Client Mode",
          "documentation": "Specifies how to encode ``client_id`` and ``client_secret`` in the OAuth2 authorization request. If set to ``header``, the credentials are encoded as an `'Authorization: Basic <base-64 encoded client_id:client_secret>'` HTTP header. If set to 'url', then ``client_id`` and ``client_secret`` are sent as URL encoded parameters. If set to 'request_body', then ``client_id`` and ``client_secret`` are sent in the request body",
          "recommended_values": [
            "header",
            "url",
            "request_body"
          ]
        },
        {
          "name": "oauth2.client.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "LOW",
          "group": "Authentication",
          "order_in_group": 14,
          "display_name": "OAuth2 Client Headers",
          "documentation": "HTTP headers to be included in the OAuth2 client endpoint. Individual headers should be separated by ``|``. This configuration can be set via CLI only."
        },
        {
          "name": "oauth2.client.header.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "LOW",
          "group": "Authentication",
          "order_in_group": 15,
          "display_name": "OAuth2 Client Headers Separator",
          "documentation": "Separator character used in OAuth2 Client Headers. This configuration can be set via CLI only."
        },
        {
          "name": "oauth2.query.params",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 16,
          "display_name": "OAuth query parameters",
          "documentation": "OAuth query parameters."
        },
        {
          "name": "oauth2.auth.button",
          "type": "STRING",
          "required": false,
          "queryable_internal": true,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 17,
          "display_name": "Authorize Connector",
          "documentation": "Initiates the OAuth authentication flow."
        },
        {
          "name": "oauth2.refresh.token",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 18,
          "display_name": "Refresh Token",
          "documentation": "OAuth 2.0 refresh token."
        },
        {
          "name": "oauth2.session.id",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "queryable_internal": true,
          "group": "Authentication",
          "order_in_group": 19,
          "display_name": "Connect OAuth Session ID",
          "documentation": "Connect OAuth Session ID."
        },
        {
          "name": "oauth.config.map",
          "type": "STRING",
          "required": false,
          "default_value": "auth_endpoint:oauth2.auth.endpoint,token_endpoint:oauth2.token.url,client_id:oauth2.client.id,client_secret:oauth2.client.secret,client_auth_mode:oauth2.client.auth.mode,scopes:oauth2.client.scope,query_params:oauth2.query.params,oauth_session_id:oauth2.session.id,refresh_token:oauth2.refresh.token,connector_class:connector.class,auth_button:oauth2.auth.button",
          "importance": "HIGH",
          "queryable_internal": true,
          "group": "Authentication",
          "order_in_group": 20,
          "display_name": "Connect OAuth Config Map",
          "documentation": "Connect OAuth Config Map to map OAuth API parameters to ConfigDefs."
        },
        {
          "name": "gcp.credentials.json",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 21,
          "display_name": "GCP credentials file",
          "documentation": "GCP service account JSON file.",
          "sanitizers": [
            {
              "name": "gcp.credentials.sanitize"
            }
          ],
          "docs_hidden": true
        },
        {
          "name": "oauth2.jwt.enabled",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 22,
          "display_name": "Add JWT token",
          "documentation": "Whether to generate and add JWT token to request. If selected, JWT token will be added as ``jwt_token`` request param.",
          "docs_hidden": true
        },
        {
          "name": "oauth2.jwt.keystore.path",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 23,
          "display_name": "JWT keystore",
          "documentation": "Keystore containing private key to use to sign JWT.",
          "docs_hidden": true
        },
        {
          "name": "oauth2.jwt.keystore.password",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 24,
          "display_name": "JWT keystore password",
          "documentation": "Password to access keystore.",
          "docs_hidden": true
        },
        {
          "name": "oauth2.jwt.keystore.type",
          "type": "STRING",
          "required": false,
          "default_value": "JKS",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 25,
          "display_name": "JWT keystore type",
          "documentation": "JWT keystore type",
          "docs_hidden": true,
          "recommended_values": [
            "JKS",
            "PKCS12"
          ]
        },
        {
          "name": "oauth2.jwt.claimset",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 26,
          "display_name": "JWT JSON claims",
          "documentation": "JSON containing JWT claims",
          "docs_hidden": true
        },
        {
          "name": "https.ssl.enabled",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 27,
          "display_name": "SSL Enabled",
          "documentation": "Controls whether to enforce TLSv1.3 for HTTPS connections. If false, the connector uses the JVM default TLS configuration (typically TLSv1.2). If true, TLSv1.3 is enforced. Note that, even when disabled, HTTPS connections still use TLS. This setting only controls TLS version enforcement."
        },
        {
          "name": "https.ssl.keystorefile",
          "type": "PASSWORD",
          "required": false,
          "default_value": "",
          "importance": "LOW",
          "group": "Authentication",
          "order_in_group": 28,
          "display_name": "Key Store",
          "documentation": "The key store containing the server certificate. Should be in JKS format."
        },
        {
          "name": "https.ssl.keystore.password",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 29,
          "display_name": "Keystore Password",
          "documentation": "The store password for the key store file."
        },
        {
          "name": "https.ssl.key.password",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 30,
          "display_name": "Key Password",
          "documentation": "The password for the private key in the key store file."
        },
        {
          "name": "https.ssl.truststorefile",
          "type": "PASSWORD",
          "required": false,
          "default_value": "",
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 31,
          "display_name": "Trust Store",
          "documentation": "The trust store containing a server CA certificate. Should be in JKS format."
        },
        {
          "name": "https.ssl.truststore.password",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Authentication",
          "order_in_group": 32,
          "display_name": "Trust Store Password",
          "documentation": "The trust store password containing a server CA certificate."
        },
        {
          "name": "apis.num",
          "type": "INT",
          "required": true,
          "default_value": 1,
          "importance": "HIGH",
          "group": "APIs",
          "order_in_group": 1,
          "display_name": "Number of http(s) APIs.",
          "documentation": "The number of http(s) APIs to configure. This value should be less than or equal to 15"
        },
        {
          "name": "behavior.on.error",
          "type": "STRING",
          "required": false,
          "default_value": "FAIL",
          "importance": "LOW",
          "group": "Behavior on error",
          "order_in_group": 1,
          "display_name": "Behavior On Errors",
          "documentation": "Error handling behavior setting for handling error response from HTTP requests. ",
          "recommended_values": [
            "FAIL",
            "IGNORE"
          ]
        },
        {
          "name": "https.ssl.protocol",
          "type": "STRING",
          "required": false,
          "default_value": "TLSv1.3",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 25,
          "display_name": "SSL Protocol",
          "documentation": "The protocol to use for SSL connections"
        },
        {
          "name": "api.key.location",
          "type": "STRING",
          "required": false,
          "default_value": "HEADER",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 26,
          "display_name": "API Key location",
          "documentation": "Specifies where the API key is included in the HTTP request. Choose ``HEADER`` to send the API key as an HTTP header (for example, ``X-API-KEY: your-api-key``), or ``QUERY`` to include it as a query parameter in the URL (for example, ``?api_key=your-api-key``). The default is ``HEADER`` which is the most common and secure approach.",
          "recommended_values": [
            "HEADER",
            "QUERY"
          ]
        },
        {
          "name": "api.key.name",
          "type": "STRING",
          "required": false,
          "default_value": "X-API-KEY",
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 27,
          "display_name": "API Key Name",
          "documentation": "The identifier for the API key used in authentication. The format depends on the ``api.key.location`` configuration. If location is ``HEADER``, use the HTTP header name (for example, ``X-API-KEY``). If location is ``QUERY``, use the query parameter name (for example, ``api_key``, ``app_id``). The default value ``X-API-KEY`` is commonly used for header-based authentication."
        },
        {
          "name": "api.key.value",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 28,
          "display_name": "API Key Value",
          "documentation": "The API key to be used with an endpoint that requires API key-based authentication"
        },
        {
          "name": "http.proxy.host",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 29,
          "display_name": "Proxy Host",
          "documentation": "The host or IP address of the HTTP proxy."
        },
        {
          "name": "http.proxy.port",
          "type": "INT",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 30,
          "display_name": "Proxy Port",
          "documentation": "The port number of the HTTP proxy."
        },
        {
          "name": "http.proxy.user",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 31,
          "display_name": "Proxy Username",
          "documentation": "The username to be used for proxy authentication."
        },
        {
          "name": "http.proxy.password",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "Authentication",
          "order_in_group": 32,
          "display_name": "Proxy Password",
          "documentation": "The password to be used for proxy authentication."
        },
        {
          "name": "api1.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-1 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset')."
        },
        {
          "name": "api1.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`."
        },
        {
          "name": "api1.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established"
        },
        {
          "name": "api1.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server"
        },
        {
          "name": "api1.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task."
        },
        {
          "name": "api1.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ]
        },
        {
          "name": "api1.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries."
        },
        {
          "name": "api1.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests."
        },
        {
          "name": "api1.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only."
        },
        {
          "name": "api1.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only."
        },
        {
          "name": "api1.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-1 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api1.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-1 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api2.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-2 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api2.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api2.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api2.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-2 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api2.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-2 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api3.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-3 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api3.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api3.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api3.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-3 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api3.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-3 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api4.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-4 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api4.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api4.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api4.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-4 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api4.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-4 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api5.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-5 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api5.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api5.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api5.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-5 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api5.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-5 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api6.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-6 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api6.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api6.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api6.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-6 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api6.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-6 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api7.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-7 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api7.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api7.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api7.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-7 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api7.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-7 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api8.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-8 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api8.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api8.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api8.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-8 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api8.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-8 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api9.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-9 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api9.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api9.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api9.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-9 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api9.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-9 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api10.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-10 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api10.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api10.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api10.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-10 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api10.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-10 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api11.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-11 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api11.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api11.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api11.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-11 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api11.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-11 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api12.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-12 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api12.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api12.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api12.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-12 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api12.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-12 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api13.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-13 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api13.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api13.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api13.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-13 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api13.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-13 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api14.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-14 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api14.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api14.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api14.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-14 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api14.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-14 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        },
        {
          "name": "api15.http.api.path",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "API-15 Configs",
          "order_in_group": 1,
          "display_name": "API Path",
          "documentation": "The HTTP API path together with the 'http.api.base.url' will form the complete HTTP(S) URL. This path can be templated with offset information. For example: ``/resource1/${offset}`` where ``${offset}`` will be substituted with the offset generated from the previous request's response (or if it's the first request, from 'http.initial.offset').",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.headers",
          "type": "STRING",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 2,
          "display_name": "HTTP Request Headers",
          "documentation": "HTTP headers to be included in each request. Header names and values should be separated by `:`. Distinct headers should be separated by `|`. For example: `From:abcxyz@confluent.io|Content-Length:348`.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.connect.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 3,
          "display_name": "Connect timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a connection to be established",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.timeout.ms",
          "type": "INT",
          "required": false,
          "default_value": 30000,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 4,
          "display_name": "Request timeout (milliseconds)",
          "documentation": "The time in milliseconds to wait for a request response from the server",
          "docs_hidden": "true"
        },
        {
          "name": "api15.max.retries",
          "type": "INT",
          "required": false,
          "default_value": 5,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 5,
          "display_name": "Maximum Retries",
          "documentation": "The maximum number of times to retry on errors before failing the task.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.retry.backoff.policy",
          "type": "STRING",
          "required": false,
          "default_value": "EXPONENTIAL_WITH_JITTER",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 6,
          "display_name": "Retry Backoff Policy",
          "documentation": "The backoff policy to use in terms of retry - CONSTANT_VALUE or EXPONENTIAL_WITH_JITTER",
          "recommended_values": [
            "CONSTANT_VALUE",
            "EXPONENTIAL_WITH_JITTER"
          ],
          "docs_hidden": "true"
        },
        {
          "name": "api15.retry.backoff.ms",
          "type": "INT",
          "required": false,
          "default_value": 3000,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 7,
          "display_name": "Retry Backoff (ms)",
          "documentation": "The initial duration in milliseconds to wait following an error before a retry attempt is made. Subsequent backoff attempts can be a constant value or exponential with jitter (can be configured using api*.retry.backoff.policy parameter). Jitter adds randomness to the exponential backoff algorithm to prevent synchronized retries.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.retry.on.status.codes",
          "type": "STRING",
          "required": false,
          "default_value": "400-",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 8,
          "display_name": "Retry HTTP Status Codes",
          "documentation": "Comma-separated list of HTTP status codes or range of codes to retry on. Ranges are specified with start and optional end code. Range boundaries are inclusive. For instance, 400- includes all codes greater than or equal to 400. 400-500 includes codes from 400 to 500, including 500. Multiple ranges and single codes can be specified together to achieve fine-grained control over retry behavior. For example, 404,408,500- will retry on 404 NOT FOUND, 408 REQUEST TIMEOUT, and all 5xx error codes. Note that some status codes will always be retried, such as unauthorized, timeouts and too many requests.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.headers.separator",
          "type": "STRING",
          "required": false,
          "default_value": "|",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 9,
          "display_name": "HTTP Request Headers Separator",
          "documentation": "The character that separates multiple distinct headers within ``http.request.headers``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.parameters.separator",
          "type": "STRING",
          "required": false,
          "default_value": "&",
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 10,
          "display_name": "HTTP Request Parameters Separator",
          "documentation": "The character that separates multiple distinct request parameters within ``http.request.parameters``. This configuration can be set via CLI only.",
          "docs_hidden": "true"
        },
        {
          "name": "api15.test.api",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "API-15 Configs",
          "order_in_group": 11,
          "display_name": "Test api",
          "documentation": "Flag to determine if the api needs to be tested",
          "internal": false,
          "docs_hidden": "true"
        },
        {
          "name": "api15.http.request.sensitive.headers",
          "type": "PASSWORD",
          "required": false,
          "importance": "MEDIUM",
          "group": "API-15 Configs",
          "order_in_group": 15,
          "display_name": "Sensitive HTTP Request Headers",
          "docs_hidden": "true",
          "documentation": "Sensitive HTTP headers to include in each request. Sensitive header names and values should be separated by ``:``. Distinct headers should be separated by ``|``. For example: ``From:abcxyz@confluent.io|Content-Length:348``. If a key is present in both regular and sensitive headers, the value in sensitive headers takes priority. This is a **CLI-only feature**."
        }
      ],
      "connector_configs": [
        {
          "name": "apis.num"
        },
        {
          "name": "max.apis.num",
          "value": "15"
        },
        {
          "name": "http.api.base.url"
        },
        {
          "name": "max.execution.timeout.ms"
        },
        {
          "name": "auth.type"
        },
        {
          "name": "connection.user"
        },
        {
          "name": "connection.password"
        },
        {
          "name": "bearer.token"
        },
        {
          "name": "oauth2.flow.type"
        },
        {
          "name": "oauth2.token.url"
        },
        {
          "name": "oauth2.client.id"
        },
        {
          "name": "oauth2.client.secret"
        },
        {
          "name": "oauth2.refresh.token",
          "value": "${file:/mnt/secrets/connect-external-secrets-{{.logicalClusterId}}.properties:oauth2.refresh.token}"
        },
        {
          "name": "oauth2.token.property"
        },
        {
          "name": "oauth2.client.headers"
        },
        {
          "name": "oauth2.client.header.separator"
        },
        {
          "name": "oauth2.client.scope"
        },
        {
          "name": "oauth2.client.auth.mode"
        },
        {
          "name": "oauth2.jwt.enabled"
        },
        {
          "name": "oauth2.jwt.keystore.path"
        },
        {
          "name": "oauth2.jwt.keystore.password"
        },
        {
          "name": "oauth2.jwt.keystore.type"
        },
        {
          "name": "oauth2.jwt.claimset"
        },
        {
          "name": "https.ssl.enabled"
        },
        {
          "name": "https.ssl.keystore.location",
          "value": "${https.ssl.keystorefile}"
        },
        {
          "name": "https.ssl.keystore.password"
        },
        {
          "name": "https.ssl.key.password"
        },
        {
          "name": "behavior.on.error"
        },
        {
          "name": "send.multiple.http.requests.per.api"
        },
        {
          "name": "https.ssl.truststore.location",
          "value": "${https.ssl.truststorefile}"
        },
        {
          "name": "https.ssl.truststore.password"
        },
        {
          "name": "https.ssl.protocol"
        },
        {
          "name": "api.key.location"
        },
        {
          "name": "api.key.name"
        },
        {
          "name": "api.key.value"
        },
        {
          "name": "http.proxy.host"
        },
        {
          "name": "http.proxy.port"
        },
        {
          "name": "http.proxy.user"
        },
        {
          "name": "http.proxy.password"
        },
        {
          "name": "connector.endpoint",
          "value": "${http.api.base.url}"
        },
        {
          "name": "report.errors.as",
          "switch": {
            "report.errors.as": {
              "Error string": "ERROR_STRING",
              "Http response": "HTTP_RESPONSE"
            }
          }
        },
        {
          "name": "add.error.to.trace",
          "value": "true"
        },
        {
          "name": "sensitive.headers.list"
        },
        {
          "name": "sensitive.headers.validation.enabled"
        },
        {
          "name": "max.in.flight.requests"
        },
        {
          "name": "api1.http.api.path"
        },
        {
          "name": "api1.http.request.headers"
        },
        {
          "name": "api1.http.request.sensitive.headers"
        },
        {
          "name": "api1.http.path.parameters"
        },
        {
          "name": "api1.http.connect.timeout.ms"
        },
        {
          "name": "api1.http.request.timeout.ms"
        },
        {
          "name": "api1.max.retries"
        },
        {
          "name": "api1.retry.backoff.ms"
        },
        {
          "name": "api1.retry.backoff.policy"
        },
        {
          "name": "api1.retry.on.status.codes"
        },
        {
          "name": "api1.test.api"
        },
        {
          "name": "api1.test.api.http.request.body"
        },
        {
          "name": "api1.test.api.topic"
        },
        {
          "name": "api1.test.api.offset"
        },
        {
          "name": "api2.http.api.path"
        },
        {
          "name": "api2.http.request.headers"
        },
        {
          "name": "api2.http.request.sensitive.headers"
        },
        {
          "name": "api2.http.path.parameters"
        },
        {
          "name": "api2.http.connect.timeout.ms"
        },
        {
          "name": "api2.http.request.timeout.ms"
        },
        {
          "name": "api2.max.retries"
        },
        {
          "name": "api2.retry.backoff.ms"
        },
        {
          "name": "api2.retry.backoff.policy"
        },
        {
          "name": "api2.retry.on.status.codes"
        },
        {
          "name": "api2.test.api"
        },
        {
          "name": "api2.test.api.http.request.body"
        },
        {
          "name": "api2.test.api.topic"
        },
        {
          "name": "api2.test.api.offset"
        },
        {
          "name": "api3.http.api.path"
        },
        {
          "name": "api3.http.request.headers"
        },
        {
          "name": "api3.http.request.sensitive.headers"
        },
        {
          "name": "api3.http.path.parameters"
        },
        {
          "name": "api3.http.connect.timeout.ms"
        },
        {
          "name": "api3.http.request.timeout.ms"
        },
        {
          "name": "api3.max.retries"
        },
        {
          "name": "api3.retry.backoff.ms"
        },
        {
          "name": "api3.retry.backoff.policy"
        },
        {
          "name": "api3.retry.on.status.codes"
        },
        {
          "name": "api3.test.api"
        },
        {
          "name": "api3.test.api.http.request.body"
        },
        {
          "name": "api3.test.api.topic"
        },
        {
          "name": "api3.test.api.offset"
        },
        {
          "name": "api4.http.api.path"
        },
        {
          "name": "api4.http.request.headers"
        },
        {
          "name": "api4.http.request.sensitive.headers"
        },
        {
          "name": "api4.http.path.parameters"
        },
        {
          "name": "api4.http.connect.timeout.ms"
        },
        {
          "name": "api4.http.request.timeout.ms"
        },
        {
          "name": "api4.max.retries"
        },
        {
          "name": "api4.retry.backoff.ms"
        },
        {
          "name": "api4.retry.backoff.policy"
        },
        {
          "name": "api4.retry.on.status.codes"
        },
        {
          "name": "api4.test.api"
        },
        {
          "name": "api4.test.api.http.request.body"
        },
        {
          "name": "api4.test.api.topic"
        },
        {
          "name": "api4.test.api.offset"
        },
        {
          "name": "api5.http.api.path"
        },
        {
          "name": "api5.http.request.headers"
        },
        {
          "name": "api5.http.request.sensitive.headers"
        },
        {
          "name": "api5.http.path.parameters"
        },
        {
          "name": "api5.http.connect.timeout.ms"
        },
        {
          "name": "api5.http.request.timeout.ms"
        },
        {
          "name": "api5.max.retries"
        },
        {
          "name": "api5.retry.backoff.ms"
        },
        {
          "name": "api5.retry.backoff.policy"
        },
        {
          "name": "api5.retry.on.status.codes"
        },
        {
          "name": "api5.test.api"
        },
        {
          "name": "api5.test.api.http.request.body"
        },
        {
          "name": "api5.test.api.topic"
        },
        {
          "name": "api5.test.api.offset"
        },
        {
          "name": "api6.http.api.path"
        },
        {
          "name": "api6.http.request.headers"
        },
        {
          "name": "api6.http.request.sensitive.headers"
        },
        {
          "name": "api6.http.path.parameters"
        },
        {
          "name": "api6.http.connect.timeout.ms"
        },
        {
          "name": "api6.http.request.timeout.ms"
        },
        {
          "name": "api6.max.retries"
        },
        {
          "name": "api6.retry.backoff.ms"
        },
        {
          "name": "api6.retry.backoff.policy"
        },
        {
          "name": "api6.retry.on.status.codes"
        },
        {
          "name": "api6.test.api"
        },
        {
          "name": "api6.test.api.http.request.body"
        },
        {
          "name": "api6.test.api.topic"
        },
        {
          "name": "api6.test.api.offset"
        },
        {
          "name": "api7.http.api.path"
        },
        {
          "name": "api7.http.request.headers"
        },
        {
          "name": "api7.http.request.sensitive.headers"
        },
        {
          "name": "api7.http.path.parameters"
        },
        {
          "name": "api7.http.connect.timeout.ms"
        },
        {
          "name": "api7.http.request.timeout.ms"
        },
        {
          "name": "api7.max.retries"
        },
        {
          "name": "api7.retry.backoff.ms"
        },
        {
          "name": "api7.retry.backoff.policy"
        },
        {
          "name": "api7.retry.on.status.codes"
        },
        {
          "name": "api7.test.api"
        },
        {
          "name": "api7.test.api.http.request.body"
        },
        {
          "name": "api7.test.api.topic"
        },
        {
          "name": "api7.test.api.offset"
        },
        {
          "name": "api8.http.api.path"
        },
        {
          "name": "api8.http.request.headers"
        },
        {
          "name": "api8.http.request.sensitive.headers"
        },
        {
          "name": "api8.http.path.parameters"
        },
        {
          "name": "api8.http.connect.timeout.ms"
        },
        {
          "name": "api8.http.request.timeout.ms"
        },
        {
          "name": "api8.max.retries"
        },
        {
          "name": "api8.retry.backoff.ms"
        },
        {
          "name": "api8.retry.backoff.policy"
        },
        {
          "name": "api8.retry.on.status.codes"
        },
        {
          "name": "api8.test.api"
        },
        {
          "name": "api8.test.api.http.request.body"
        },
        {
          "name": "api8.test.api.topic"
        },
        {
          "name": "api8.test.api.offset"
        },
        {
          "name": "api9.http.api.path"
        },
        {
          "name": "api9.http.request.headers"
        },
        {
          "name": "api9.http.request.sensitive.headers"
        },
        {
          "name": "api9.http.path.parameters"
        },
        {
          "name": "api9.http.connect.timeout.ms"
        },
        {
          "name": "api9.http.request.timeout.ms"
        },
        {
          "name": "api9.max.retries"
        },
        {
          "name": "api9.retry.backoff.ms"
        },
        {
          "name": "api9.retry.backoff.policy"
        },
        {
          "name": "api9.retry.on.status.codes"
        },
        {
          "name": "api9.test.api"
        },
        {
          "name": "api9.test.api.http.request.body"
        },
        {
          "name": "api9.test.api.topic"
        },
        {
          "name": "api9.test.api.offset"
        },
        {
          "name": "api10.http.api.path"
        },
        {
          "name": "api10.http.request.headers"
        },
        {
          "name": "api10.http.request.sensitive.headers"
        },
        {
          "name": "api10.http.path.parameters"
        },
        {
          "name": "api10.http.connect.timeout.ms"
        },
        {
          "name": "api10.http.request.timeout.ms"
        },
        {
          "name": "api10.max.retries"
        },
        {
          "name": "api10.retry.backoff.ms"
        },
        {
          "name": "api10.retry.backoff.policy"
        },
        {
          "name": "api10.retry.on.status.codes"
        },
        {
          "name": "api10.test.api"
        },
        {
          "name": "api10.test.api.http.request.body"
        },
        {
          "name": "api10.test.api.topic"
        },
        {
          "name": "api10.test.api.offset"
        },
        {
          "name": "api11.http.api.path"
        },
        {
          "name": "api11.http.request.headers"
        },
        {
          "name": "api11.http.request.sensitive.headers"
        },
        {
          "name": "api11.http.path.parameters"
        },
        {
          "name": "api11.http.connect.timeout.ms"
        },
        {
          "name": "api11.http.request.timeout.ms"
        },
        {
          "name": "api11.max.retries"
        },
        {
          "name": "api11.retry.backoff.ms"
        },
        {
          "name": "api11.retry.backoff.policy"
        },
        {
          "name": "api11.retry.on.status.codes"
        },
        {
          "name": "api11.test.api"
        },
        {
          "name": "api11.test.api.http.request.body"
        },
        {
          "name": "api11.test.api.topic"
        },
        {
          "name": "api11.test.api.offset"
        },
        {
          "name": "api12.http.api.path"
        },
        {
          "name": "api12.http.request.headers"
        },
        {
          "name": "api12.http.request.sensitive.headers"
        },
        {
          "name": "api12.http.path.parameters"
        },
        {
          "name": "api12.http.connect.timeout.ms"
        },
        {
          "name": "api12.http.request.timeout.ms"
        },
        {
          "name": "api12.max.retries"
        },
        {
          "name": "api12.retry.backoff.ms"
        },
        {
          "name": "api12.retry.backoff.policy"
        },
        {
          "name": "api12.retry.on.status.codes"
        },
        {
          "name": "api12.test.api"
        },
        {
          "name": "api12.test.api.http.request.body"
        },
        {
          "name": "api12.test.api.topic"
        },
        {
          "name": "api12.test.api.offset"
        },
        {
          "name": "api13.http.api.path"
        },
        {
          "name": "api13.http.request.headers"
        },
        {
          "name": "api13.http.request.sensitive.headers"
        },
        {
          "name": "api13.http.path.parameters"
        },
        {
          "name": "api13.http.connect.timeout.ms"
        },
        {
          "name": "api13.http.request.timeout.ms"
        },
        {
          "name": "api13.max.retries"
        },
        {
          "name": "api13.retry.backoff.ms"
        },
        {
          "name": "api13.retry.backoff.policy"
        },
        {
          "name": "api13.retry.on.status.codes"
        },
        {
          "name": "api13.test.api"
        },
        {
          "name": "api13.test.api.http.request.body"
        },
        {
          "name": "api13.test.api.topic"
        },
        {
          "name": "api13.test.api.offset"
        },
        {
          "name": "api14.http.api.path"
        },
        {
          "name": "api14.http.request.headers"
        },
        {
          "name": "api14.http.request.sensitive.headers"
        },
        {
          "name": "api14.http.path.parameters"
        },
        {
          "name": "api14.http.connect.timeout.ms"
        },
        {
          "name": "api14.http.request.timeout.ms"
        },
        {
          "name": "api14.max.retries"
        },
        {
          "name": "api14.retry.backoff.ms"
        },
        {
          "name": "api14.retry.backoff.policy"
        },
        {
          "name": "api14.retry.on.status.codes"
        },
        {
          "name": "api14.test.api"
        },
        {
          "name": "api14.test.api.http.request.body"
        },
        {
          "name": "api14.test.api.topic"
        },
        {
          "name": "api14.test.api.offset"
        },
        {
          "name": "api15.http.api.path"
        },
        {
          "name": "api15.http.request.headers"
        },
        {
          "name": "api15.http.request.sensitive.headers"
        },
        {
          "name": "api15.http.path.parameters"
        },
        {
          "name": "api15.http.connect.timeout.ms"
        },
        {
          "name": "api15.http.request.timeout.ms"
        },
        {
          "name": "api15.max.retries"
        },
        {
          "name": "api15.retry.backoff.ms"
        },
        {
          "name": "api15.retry.backoff.policy"
        },
        {
          "name": "api15.retry.on.status.codes"
        },
        {
          "name": "api15.test.api"
        },
        {
          "name": "api15.test.api.http.request.body"
        },
        {
          "name": "api15.test.api.topic"
        },
        {
          "name": "api15.test.api.offset"
        }
      ]
    },
    {
      "template_id": "common-source",
      "abstract": true,
      "config_defs": [
        {
          "name": "kafka.service.account.id",
          "type": "STRING",
          "required": false,
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 2,
          "display_name": "Kafka Service Account",
          "documentation": "The Service Account that will be used to generate the API keys to communicate with Kafka Cluster."
        },
        {
          "name": "kafka.api.secret",
          "type": "PASSWORD",
          "required": false,
          "importance": "HIGH",
          "group": "Kafka Cluster credentials",
          "order_in_group": 3,
          "display_name": "Kafka API Secret",
          "documentation": "Secret associated with Kafka API key. Required when kafka.auth.mode==KAFKA_API_KEY.",
          "dependents": [
            "kafka.api.key"
          ]
        },
        {
          "name": "datapreview.schemas.enable",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "default_value": "false",
          "display_name": "Show schemas in data preview request output",
          "group": "Kafka Cluster credentials",
          "order_in_group": 4,
          "documentation": "This config key only applies to data preview requests and governs whether the data preview output has record schema with it.\nThe visibility condition is set such that it can never be true.\nSo this key does not show in create connector UI."
        },
        {
          "name": "errors.tolerance",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Additional Configs",
          "default_value": "none",
          "display_name": "errors.tolerance",
          "documentation": "Use this property if you would like to configure the connector's error handling behavior. WARNING: This property should be used with CAUTION for SOURCE CONNECTORS as it may lead to dataloss. If you set this property to 'all', the connector will not fail on errant records, but will instead log them (and send to DLQ for Sink Connectors) and continue processing. If you set this property to 'none', the connector task will fail on errant records.",
          "recommended_values": [
            "none",
            "all"
          ]
        },
        {
          "name": "producer.override.linger.ms",
          "type": "LONG",
          "required": "false",
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "producer.override.linger.ms",
          "documentation": "The producer groups together any records that arrive in between request transmissions into a single batched request. More details can be found in the documentation: https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#linger-ms."
        }
      ],
      "connector_configs": [
        {
          "name": "topic.creation.default.replication.factor",
          "value": "3"
        },
        {
          "name": "topic.creation.default.partitions",
          "value": "1"
        },
        {
          "name": "errors.tolerance"
        },
        {
          "name": "producer.override.max.request.size",
          "switch": {
            "kafka.dedicated": {
              "true": "20971610",
              "false": "8388698"
            }
          }
        },
        {
          "name": "topic.creation.default.max.message.bytes",
          "switch": {
            "kafka.dedicated": {
              "true": "20971520",
              "false": "8388608"
            }
          }
        },
        {
          "name": "datapreview.schemas.enable"
        },
        {
          "name": "producer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "producer.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "admin.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "admin.override.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "producer.override.linger.ms"
        },
        {
          "name": "consumer.override.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "consumer.override.sasl.mechanism",
          "value": "PLAIN"
        }
      ]
    },
    {
      "template_id": "csfle-source",
      "abstract": true,
      "config_defs": [
        {
          "name": "csfle.enabled",
          "type": "BOOLEAN",
          "default_value": "false",
          "importance": "HIGH",
          "group": "CSFLE",
          "order_in_group": 1,
          "docs_hidden": true,
          "display_name": "Enable Client-Side Field Level Encryption",
          "documentation": "Determines whether the connector honours CSFLE rules or not",
          "conditional_metadata_provider": [
            {
              "name": "metadata.conditional.visible",
              "arguments": {
                "config": "csfle.configs.visible",
                "values": "false"
              },
              "metadata": {
                "visibility": "false"
              }
            }
          ]
        },
        {
          "name": "sr.service.account.id",
          "type": "STRING",
          "importance": "HIGH",
          "group": "CSFLE",
          "order_in_group": 2,
          "docs_hidden": true,
          "display_name": "Schema Registry Service Account",
          "documentation": "Select the service account that has appropriate permissions to schemas and encryption keys in the Schema Registry."
        }
      ],
      "connector_configs": [
        {
          "name": "csfle.enabled"
        },
        {
          "name": "value.converter.rule.executors._ENCRYPT_.disabled",
          "switch": {
            "csfle.enabled": {
              "true": "false",
              "false": "true"
            }
          }
        },
        {
          "name": "value.converter.rule.executors._ENCRYPT_.onFailure",
          "switch": {
            "csfle.enabled": {
              "true": "ERROR"
            }
          }
        },
        {
          "name": "value.converter.latest.cache.ttl.sec",
          "switch": {
            "csfle.enabled": {
              "true": "300"
            }
          }
        },
        {
          "name": "key.converter.rule.executors._ENCRYPT_.disabled",
          "switch": {
            "csfle.enabled": {
              "true": "false",
              "false": "true"
            }
          }
        },
        {
          "name": "key.converter.rule.executors._ENCRYPT_.onFailure",
          "switch": {
            "csfle.enabled": {
              "true": "ERROR"
            }
          }
        },
        {
          "name": "key.converter.auto.register.schemas",
          "switch": {
            "csfle.enabled": {
              "true": "false"
            }
          }
        },
        {
          "name": "key.converter.use.latest.version",
          "switch": {
            "csfle.enabled": {
              "true": "true"
            }
          }
        },
        {
          "name": "key.converter.latest.cache.ttl.sec",
          "switch": {
            "csfle.enabled": {
              "true": "300"
            }
          }
        }
      ]
    },
    {
      "template_id": "http-network-restrictions-common",
      "abstract": true,
      "config_defs": [],
      "connector_configs": [
        {
          "name": "connection.disallow.class.e.ips",
          "value": "true"
        },
        {
          "name": "connection.disallow.local.ips",
          "value": "true"
        },
        {
          "name": "connection.disallow.private.ips"
        },
        {
          "name": "connection.disallow.cidr.ranges"
        },
        {
          "name": "connection.allow.cidr.ranges"
        }
      ]
    },
    {
      "template_id": "http-source-v2-reporter",
      "abstract": true,
      "config_defs": [
        {
          "name": "reporter.error.topic.name",
          "type": "STRING",
          "importance": "LOW",
          "group": "Reporter",
          "order_in_group": 1,
          "display_name": "Reporter Error Topic Name",
          "default_value": "error-${connector}",
          "documentation": "The name of the topic to produce errant records after each unsuccessful API operation. Defaults to 'error-${connector}' if not set. You can provide ``${connector}`` in the value to use it as a placeholder for the logical cluster ID."
        }
      ],
      "connector_configs": [
        {
          "name": "reporter.bootstrap.servers",
          "switch": {
            "connect.metadata_property.kafka.itsl.bootstrap.servers": {
              "UNSET": "${kafka.endpoint}",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.bootstrap.servers}"
            }
          }
        },
        {
          "name": "reporter.producer.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "reporter.producer.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "reporter.admin.security.protocol",
          "value": "SASL_SSL"
        },
        {
          "name": "reporter.admin.sasl.mechanism",
          "value": "PLAIN"
        },
        {
          "name": "reporter.error.topic.name"
        },
        {
          "name": "reporter.result.topic.name",
          "value": ""
        },
        {
          "name": "reporter.admin.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "reporter.producer.confluent.lkc.id",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "",
              "DEFAULT": "${connect.metadata_property.kafka.itsl.embed.lkc}"
            }
          }
        },
        {
          "name": "reporter.admin.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "reporter.producer.ssl.trustmanager.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "SECURED": "ConfluentTls",
              "DEFAULT": "PKIX"
            }
          }
        },
        {
          "name": "reporter.admin.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "reporter.producer.confluent.proxy.protocol.client.mode",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "PROXY",
              "DEFAULT": "LOCAL"
            }
          }
        },
        {
          "name": "reporter.producer.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        },
        {
          "name": "reporter.admin.confluent.proxy.protocol.client.version",
          "switch": {
            "connect.metadata_property.kafka.itsl.embed.lkc": {
              "SKIP": "NONE",
              "DEFAULT": "V2"
            }
          }
        },
        {
          "name": "reporter.producer.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        },
        {
          "name": "reporter.admin.ssl.endpoint.identification.algorithm",
          "switch": {
            "connect.metadata_property.kafka.itsl.ssl.endpoint.identification.algorithm": {
              "UNSECURED_PREPROD_ONLY": "",
              "SECURED": "",
              "DEFAULT": "https"
            }
          }
        }
      ]
    },
    {
      "template_id": "schema-registry",
      "abstract": true,
      "config_defs": [
        {
          "name": "schema.context.name",
          "type": "STRING",
          "group": "Schema Config",
          "order_in_group": 1,
          "importance": "MEDIUM",
          "display_name": "Schema context",
          "documentation": "Add a schema context name. A schema context represents an independent scope in Schema Registry. It is a separate sub-schema tied to topics in different Kafka clusters that share the same Schema Registry instance. If not used, the connector uses the default schema configured for Schema Registry in your Confluent Cloud environment.",
          "default_value": "default",
          "dependents": [
            "schema.registry.url"
          ]
        }
      ],
      "connector_configs": []
    },
    {
      "template_id": "source-connector-schema-enabled-output-data-format",
      "abstract": true,
      "config_defs": [
        {
          "name": "output.data.format",
          "type": "STRING",
          "required": true,
          "default_value": "AVRO",
          "importance": "HIGH",
          "group": "Output messages",
          "order_in_group": 1,
          "display_name": "Select output record value format",
          "alias": "data.format",
          "documentation": "Sets the output Kafka record value format. Valid entries are AVRO, JSON_SR, or PROTOBUF. Please configure Confluent Cloud Schema Registry.",
          "recommended_values": [
            "AVRO",
            "JSON_SR",
            "PROTOBUF"
          ],
          "dependents": [
            "schema.registry.url"
          ]
        },
        {
          "name": "value.converter.ignore.default.for.nullables",
          "alias": "ignore.default.for.nullables",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "false",
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "value.converter.ignore.default.for.nullables",
          "documentation": "When set to true, this property ensures that the corresponding record in Kafka is NULL, instead of showing the default column value. Applicable for AVRO,PROTOBUF and JSON_SR Converters."
        },
        {
          "name": "value.converter.scrub.invalid.names",
          "type": "BOOLEAN",
          "documentation": "Whether to scrub invalid names by replacing invalid characters with valid characters. Applicable for Avro and Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.scrub.invalid.names"
        }
      ],
      "connector_configs": [
        {
          "name": "value.converter",
          "switch": {
            "output.data.format": {
              "AVRO": "io.confluent.connect.avro.AvroConverter",
              "JSON_SR": "io.confluent.connect.json.JsonSchemaConverter",
              "PROTOBUF": "io.confluent.connect.protobuf.ProtobufConverter"
            }
          }
        },
        {
          "name": "value.converter.schema.registry.url",
          "value": "${schema.registry.url}"
        },
        {
          "name": "value.converter.basic.auth.credentials.source",
          "value": "USER_INFO"
        },
        {
          "name": "value.converter.basic.auth.user.info",
          "value": "${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:username}:${file:/mnt/secrets/connect-sr-{{.logicalClusterId}}.properties:password}"
        },
        {
          "name": "value.converter.ignore.default.for.nullables"
        },
        {
          "name": "value.converter.scrub.invalid.names",
          "dynamic.mapper": {
            "name": "value.converter.scrub.invalid.names.mapper"
          }
        }
      ]
    },
    {
      "template_id": "super",
      "abstract": true,
      "config_defs": [
        {
          "name": "auto.restart.on.user.error",
          "type": "BOOLEAN",
          "required": false,
          "default_value": "true",
          "importance": "MEDIUM",
          "group": "Auto-restart policy",
          "order_in_group": 1,
          "display_name": "Enable Connector Auto-restart",
          "documentation": "Enable connector to automatically restart on user-actionable errors."
        },
        {
          "name": "value.converter.enhanced.avro.schema.support",
          "type": "BOOLEAN",
          "documentation": "Enable enhanced schema support to preserve package information and Enums. Applicable for Avro Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.enhanced.avro.schema.support"
        },
        {
          "name": "value.converter.connect.meta.data",
          "type": "BOOLEAN",
          "documentation": "Allow the Connect converter to add its metadata to the output schema. Applicable for Avro Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.connect.meta.data"
        },
        {
          "name": "value.converter.enhanced.protobuf.schema.support",
          "type": "BOOLEAN",
          "documentation": "Enable enhanced schema support to preserve package information. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.enhanced.protobuf.schema.support"
        },
        {
          "name": "value.converter.generate.index.for.unions",
          "type": "BOOLEAN",
          "documentation": "Whether to generate an index suffix for unions. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.generate.index.for.unions"
        },
        {
          "name": "value.converter.int.for.enums",
          "type": "BOOLEAN",
          "documentation": "Whether to represent enums as integers. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.int.for.enums"
        },
        {
          "name": "value.converter.optional.for.nullables",
          "type": "BOOLEAN",
          "documentation": "Whether nullable fields should be specified with an optional label. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.optional.for.nullables"
        },
        {
          "name": "value.converter.generate.struct.for.nulls",
          "type": "BOOLEAN",
          "documentation": "Whether to generate a struct variable for null values. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.generate.struct.for.nulls"
        },
        {
          "name": "value.converter.wrapper.for.nullables",
          "type": "BOOLEAN",
          "documentation": "Whether nullable fields should use primitive wrapper messages. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.wrapper.for.nullables"
        },
        {
          "name": "value.converter.wrapper.for.raw.primitives",
          "type": "BOOLEAN",
          "documentation": "Whether a wrapper message should be interpreted as a raw primitive at root level. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.wrapper.for.raw.primitives"
        },
        {
          "name": "value.converter.object.additional.properties",
          "type": "BOOLEAN",
          "documentation": "Whether to allow additional properties for object schemas. Applicable for JSON_SR Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.object.additional.properties"
        },
        {
          "name": "value.converter.use.optional.for.nonrequired",
          "type": "BOOLEAN",
          "documentation": "Whether to set non-required properties to be optional. Applicable for JSON_SR Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.use.optional.for.nonrequired"
        },
        {
          "name": "value.converter.decimal.format",
          "type": "STRING",
          "recommended_values": [
            "BASE64",
            "NUMERIC"
          ],
          "documentation": "Specify the JSON/JSON_SR serialization format for Connect DECIMAL logical type values with two allowed literals:\nBASE64 to serialize DECIMAL logical types as base64 encoded binary data and\nNUMERIC to serialize Connect DECIMAL logical type values in JSON/JSON_SR as a number representing the decimal value.",
          "group": "Additional Configs",
          "alias": "json.output.decimal.format",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.decimal.format",
          "default_value": "BASE64"
        },
        {
          "name": "value.converter.auto.register.schemas",
          "type": "BOOLEAN",
          "documentation": "Specify if the Serializer should attempt to register the Schema.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.auto.register.schemas"
        },
        {
          "name": "value.converter.use.latest.version",
          "type": "BOOLEAN",
          "documentation": "Use latest version of schema in subject for serialization when auto.register.schemas is false.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.use.latest.version"
        },
        {
          "name": "value.converter.latest.compatibility.strict",
          "type": "BOOLEAN",
          "documentation": "Verify latest subject version is backward compatible when `use.latest.version` is `true`.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.latest.compatibility.strict"
        },
        {
          "name": "key.converter.key.subject.name.strategy",
          "type": "STRING",
          "default_value": "TopicNameStrategy",
          "recommended_values": [
            "TopicNameStrategy",
            "RecordNameStrategy",
            "TopicRecordNameStrategy"
          ],
          "alias": "key.subject.name.strategy",
          "documentation": "How to construct the subject name for key schema registration.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "key.converter.key.subject.name.strategy"
        },
        {
          "name": "value.converter.value.subject.name.strategy",
          "type": "STRING",
          "recommended_values": [
            "TopicNameStrategy",
            "RecordNameStrategy",
            "TopicRecordNameStrategy"
          ],
          "default_value": "TopicNameStrategy",
          "alias": "subject.name.strategy,value.subject.name.strategy",
          "documentation": "Determines how to construct the subject name under which the value schema is registered with Schema Registry.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.value.subject.name.strategy"
        },
        {
          "name": "value.converter.reference.subject.name.strategy",
          "type": "STRING",
          "recommended_values": [
            "DefaultReferenceSubjectNameStrategy",
            "QualifiedReferenceSubjectNameStrategy"
          ],
          "default_value": "DefaultReferenceSubjectNameStrategy",
          "documentation": "Set the subject reference name strategy for value. Valid entries are DefaultReferenceSubjectNameStrategy or QualifiedReferenceSubjectNameStrategy. Note that the subject reference name strategy can be selected only for PROTOBUF format with the default strategy being DefaultReferenceSubjectNameStrategy.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.reference.subject.name.strategy"
        },
        {
          "name": "value.converter.allow.optional.map.keys",
          "type": "BOOLEAN",
          "documentation": "Allow optional string map key when converting from Connect Schema to Avro Schema. Applicable for Avro Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.allow.optional.map.keys"
        },
        {
          "name": "value.converter.flatten.singleton.unions",
          "type": "BOOLEAN",
          "default_value": "false",
          "documentation": "Whether to flatten singleton unions. Applicable for Avro and JSON_SR Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.flatten.singleton.unions"
        },
        {
          "name": "value.converter.optional.for.proto2",
          "type": "BOOLEAN",
          "documentation": "Whether proto2 optionals are supported. Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.optional.for.proto2"
        },
        {
          "name": "value.converter.flatten.unions",
          "type": "BOOLEAN",
          "documentation": "Whether to flatten unions (oneofs). Applicable for Protobuf Converters.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "value.converter.flatten.unions"
        },
        {
          "name": "header.converter",
          "type": "STRING",
          "required": false,
          "importance": "LOW",
          "group": "Additional Configs",
          "display_name": "header.converter",
          "documentation": "The converter class for the headers. This is used to serialize and deserialize the headers of the messages.",
          "recommended_values": [
            "org.apache.kafka.connect.converters.BooleanConverter",
            "org.apache.kafka.connect.converters.ByteArrayConverter",
            "org.apache.kafka.connect.converters.DoubleConverter",
            "org.apache.kafka.connect.converters.FloatConverter",
            "org.apache.kafka.connect.converters.IntegerConverter",
            "org.apache.kafka.connect.converters.LongConverter",
            "org.apache.kafka.connect.converters.ShortConverter",
            "org.apache.kafka.connect.json.JsonConverter",
            "org.apache.kafka.connect.storage.SimpleHeaderConverter",
            "org.apache.kafka.connect.storage.StringConverter"
          ]
        }
      ],
      "connector_configs": [
        {
          "name": "auto.restart.on.user.error"
        },
        {
          "name": "value.converter.enhanced.avro.schema.support"
        },
        {
          "name": "value.converter.connect.meta.data"
        },
        {
          "name": "value.converter.enhanced.protobuf.schema.support"
        },
        {
          "name": "value.converter.generate.index.for.unions"
        },
        {
          "name": "value.converter.int.for.enums"
        },
        {
          "name": "value.converter.optional.for.nullables"
        },
        {
          "name": "value.converter.generate.struct.for.nulls"
        },
        {
          "name": "value.converter.wrapper.for.nullables"
        },
        {
          "name": "value.converter.wrapper.for.raw.primitives"
        },
        {
          "name": "value.converter.object.additional.properties"
        },
        {
          "name": "value.converter.use.optional.for.nonrequired"
        },
        {
          "name": "value.converter.decimal.format"
        },
        {
          "name": "value.converter.auto.register.schemas",
          "dynamic.mapper": {
            "name": "value.converter.auto.register.schemas.mapper"
          }
        },
        {
          "name": "value.converter.use.latest.version",
          "dynamic.mapper": {
            "name": "value.converter.use.latest.version.mapper"
          }
        },
        {
          "name": "value.converter.latest.compatibility.strict"
        },
        {
          "name": "value.converter.value.subject.name.strategy",
          "dynamic.mapper": {
            "name": "value.converter.value.subject.name.strategy.mapper"
          }
        },
        {
          "name": "key.converter.key.subject.name.strategy",
          "dynamic.mapper": {
            "name": "value.converter.value.subject.name.strategy.mapper"
          }
        },
        {
          "name": "value.converter.reference.subject.name.strategy",
          "dynamic.mapper": {
            "name": "value.converter.reference.subject.name.strategy.mapper"
          }
        },
        {
          "name": "value.converter.allow.optional.map.keys"
        },
        {
          "name": "value.converter.flatten.singleton.unions"
        },
        {
          "name": "value.converter.optional.for.proto2"
        },
        {
          "name": "value.converter.flatten.unions"
        },
        {
          "name": "header.converter"
        },
        {
          "name": "key.converter.use.apache.http.client"
        },
        {
          "name": "value.converter.use.apache.http.client"
        }
      ]
    },
    {
      "template_id": "super-source",
      "abstract": true,
      "config_defs": [
        {
          "name": "producer.override.compression.type",
          "type": "STRING",
          "recommended_values": [
            "none",
            "gzip",
            "snappy",
            "lz4",
            "zstd"
          ],
          "documentation": "The compression type for all data generated by the producer. Valid values are none, gzip, snappy, lz4, and zstd.",
          "group": "Additional Configs",
          "required": false,
          "importance": "LOW",
          "display_name": "producer.override.compression.type"
        }
      ],
      "connector_configs": [
        {
          "name": "producer.override.compression.type"
        }
      ]
    }
  ]
}