{
  "template_id": "PagerDutySinkConnector",
  "connector_type": "SINK",
  "connector.class": "io.confluent.connect.pagerduty.PagerDutySinkConnector",
  "name": "{{.logicalClusterId}}",
  "imports": [],
  "group_order": [
    "PagerDuty",
    "Connect Reporter",
    "Formatter",
    "JSON Formatter",
    "CSFLE configuration",
    "Confluent Platform license",
    "Confluent license properties",
    "License topic configuration",
    "License topic ACLs",
    "Override Default Configuration Properties"
  ],
  "config_defs": [
    {
      "name": "pagerduty.api.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 1,
      "display_name": "pagerduty.api.key",
      "documentation": "Use this API key into any application that needs access to the PagerDuty API. Just like your own password, this key lets an application modify your PagerDuty information.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 1
      }
    },
    {
      "name": "pagerduty.max.retry.time.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 2,
      "display_name": "pagerduty.max.retry.time.seconds",
      "documentation": "The maximum time upto which pagerduty client will try creating incidents. The least recommended value is 10 seconds.Type: intDefault: 10Valid Values: [5,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      },
      "default": "10valid values: [5,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "5",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 3,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for PagerDuty incident creation. Must be configured to one of the following:failStops the connector when an error occurs while preparing incedents from Kafka records.ignoreContinues to process next set of records. when error occurs while preparing incidents from Kafka records.logLogs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.Type: stringDefault: failValid Values: [fail, ignore, log]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      },
      "default": "failvalid values: [fail, ignore, log]importance: medium",
      "valid_values": [
        "fail",
        "ignore",
        "log"
      ]
    },
    {
      "name": "fail",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 4,
      "display_name": "fail",
      "documentation": "Stops the connector when an error occurs while preparing incedents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "ignore",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 5,
      "display_name": "ignore",
      "documentation": "Continues to process next set of records. when error occurs while preparing incidents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "log",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 6,
      "display_name": "log",
      "documentation": "Logs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "pagerduty.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 7,
      "display_name": "pagerduty.proxy.url",
      "documentation": "PagerDuty Proxy settings encoded in URL syntax. Use this property only if you need to access PagerDuty through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "pagerduty.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 8,
      "display_name": "pagerduty.proxy.user",
      "documentation": "PagerDuty Proxy User. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.userinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      },
      "default": "nullimportance: low"
    },
    {
      "name": "pagerduty.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 9,
      "display_name": "pagerduty.proxy.password",
      "documentation": "PagerDuty Proxy Password. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.passwordinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 10,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 11,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 12,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 13,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 14,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 15,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 16,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 17,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 18,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 19,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 20,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 21,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 22,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 22
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 23,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 23
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 24,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 24
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 25,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 25
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 26,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 26
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 27,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 27
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 28,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 28
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 29,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 29
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 30,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 30
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 31,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 31
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 32,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 32
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 33,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 33
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 34,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 34
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 35,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 35
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "pagerduty.api.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 36,
      "display_name": "pagerduty.api.key",
      "documentation": "Use this API key into any application that needs access to the PagerDuty API. Just like your own password, this key lets an application modify your PagerDuty information.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 36
      }
    },
    {
      "name": "pagerduty.max.retry.time.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 37,
      "display_name": "pagerduty.max.retry.time.seconds",
      "documentation": "The maximum time upto which pagerduty client will try creating incidents. The least recommended value is 10 seconds.Type: intDefault: 10Valid Values: [5,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 37
      },
      "default": "10valid values: [5,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "5",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 38,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for PagerDuty incident creation. Must be configured to one of the following:failStops the connector when an error occurs while preparing incedents from Kafka records.ignoreContinues to process next set of records. when error occurs while preparing incidents from Kafka records.logLogs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.Type: stringDefault: failValid Values: [fail, ignore, log]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 38
      },
      "default": "failvalid values: [fail, ignore, log]importance: medium",
      "valid_values": [
        "fail",
        "ignore",
        "log"
      ]
    },
    {
      "name": "fail",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 39,
      "display_name": "fail",
      "documentation": "Stops the connector when an error occurs while preparing incedents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 39
      }
    },
    {
      "name": "ignore",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 40,
      "display_name": "ignore",
      "documentation": "Continues to process next set of records. when error occurs while preparing incidents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 40
      }
    },
    {
      "name": "log",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 41,
      "display_name": "log",
      "documentation": "Logs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 41
      }
    },
    {
      "name": "pagerduty.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 42,
      "display_name": "pagerduty.proxy.url",
      "documentation": "PagerDuty Proxy settings encoded in URL syntax. Use this property only if you need to access PagerDuty through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 42
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "pagerduty.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 43,
      "display_name": "pagerduty.proxy.user",
      "documentation": "PagerDuty Proxy User. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.userinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 43
      },
      "default": "nullimportance: low"
    },
    {
      "name": "pagerduty.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 44,
      "display_name": "pagerduty.proxy.password",
      "documentation": "PagerDuty Proxy Password. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.passwordinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 44
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 45,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 45
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 46,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 46
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 47,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 47
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 48,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 48
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 49,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 49
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 50,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 50
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 51,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 51
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 52,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 52
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 53,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 53
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 54,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 54
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 55,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 55
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 56,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 56
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 57,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 57
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 58,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 58
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 59,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 59
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 60,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 60
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 61,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 61
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 62,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 62
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 63,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 63
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 64,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 64
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 65,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 65
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 66,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 66
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 67,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 67
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 68,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 68
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 69,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 69
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 70,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 70
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "pagerduty.api.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 71,
      "display_name": "pagerduty.api.key",
      "documentation": "Use this API key into any application that needs access to the PagerDuty API. Just like your own password, this key lets an application modify your PagerDuty information.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 71
      }
    },
    {
      "name": "pagerduty.max.retry.time.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 72,
      "display_name": "pagerduty.max.retry.time.seconds",
      "documentation": "The maximum time upto which pagerduty client will try creating incidents. The least recommended value is 10 seconds.Type: intDefault: 10Valid Values: [5,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 72
      },
      "default": "10valid values: [5,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "5",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 73,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for PagerDuty incident creation. Must be configured to one of the following:failStops the connector when an error occurs while preparing incedents from Kafka records.ignoreContinues to process next set of records. when error occurs while preparing incidents from Kafka records.logLogs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.Type: stringDefault: failValid Values: [fail, ignore, log]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 73
      },
      "default": "failvalid values: [fail, ignore, log]importance: medium",
      "valid_values": [
        "fail",
        "ignore",
        "log"
      ]
    },
    {
      "name": "fail",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 74,
      "display_name": "fail",
      "documentation": "Stops the connector when an error occurs while preparing incedents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 74
      }
    },
    {
      "name": "ignore",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 75,
      "display_name": "ignore",
      "documentation": "Continues to process next set of records. when error occurs while preparing incidents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 75
      }
    },
    {
      "name": "log",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 76,
      "display_name": "log",
      "documentation": "Logs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 76
      }
    },
    {
      "name": "pagerduty.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 77,
      "display_name": "pagerduty.proxy.url",
      "documentation": "PagerDuty Proxy settings encoded in URL syntax. Use this property only if you need to access PagerDuty through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 77
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "pagerduty.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 78,
      "display_name": "pagerduty.proxy.user",
      "documentation": "PagerDuty Proxy User. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.userinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 78
      },
      "default": "nullimportance: low"
    },
    {
      "name": "pagerduty.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 79,
      "display_name": "pagerduty.proxy.password",
      "documentation": "PagerDuty Proxy Password. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.passwordinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 79
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 80,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 80
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 81,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 81
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 82,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 82
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 83,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 83
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 84,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 84
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 85,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 85
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 86,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 86
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 87,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 87
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 88,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 88
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 89,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 89
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 90,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 90
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 91,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 91
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 92,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 92
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 93,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 93
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 94,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 94
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 95,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 95
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 96,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 96
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 97,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 97
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 98,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 98
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 99,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 99
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 100,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 100
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 101,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 101
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 102,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 102
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 103,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 103
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 104,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 104
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 105,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 105
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "pagerduty.api.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 106,
      "display_name": "pagerduty.api.key",
      "documentation": "Use this API key into any application that needs access to the PagerDuty API. Just like your own password, this key lets an application modify your PagerDuty information.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 106
      }
    },
    {
      "name": "pagerduty.max.retry.time.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 107,
      "display_name": "pagerduty.max.retry.time.seconds",
      "documentation": "The maximum time upto which pagerduty client will try creating incidents. The least recommended value is 10 seconds.Type: intDefault: 10Valid Values: [5,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 107
      },
      "default": "10valid values: [5,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "5",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 108,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for PagerDuty incident creation. Must be configured to one of the following:failStops the connector when an error occurs while preparing incedents from Kafka records.ignoreContinues to process next set of records. when error occurs while preparing incidents from Kafka records.logLogs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.Type: stringDefault: failValid Values: [fail, ignore, log]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 108
      },
      "default": "failvalid values: [fail, ignore, log]importance: medium",
      "valid_values": [
        "fail",
        "ignore",
        "log"
      ]
    },
    {
      "name": "fail",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 109,
      "display_name": "fail",
      "documentation": "Stops the connector when an error occurs while preparing incedents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 109
      }
    },
    {
      "name": "ignore",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 110,
      "display_name": "ignore",
      "documentation": "Continues to process next set of records. when error occurs while preparing incidents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 110
      }
    },
    {
      "name": "log",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 111,
      "display_name": "log",
      "documentation": "Logs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 111
      }
    },
    {
      "name": "pagerduty.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 112,
      "display_name": "pagerduty.proxy.url",
      "documentation": "PagerDuty Proxy settings encoded in URL syntax. Use this property only if you need to access PagerDuty through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 112
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "pagerduty.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 113,
      "display_name": "pagerduty.proxy.user",
      "documentation": "PagerDuty Proxy User. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.userinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 113
      },
      "default": "nullimportance: low"
    },
    {
      "name": "pagerduty.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 114,
      "display_name": "pagerduty.proxy.password",
      "documentation": "PagerDuty Proxy Password. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.passwordinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 114
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 115,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 115
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 116,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 116
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 117,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 117
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 118,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 118
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 119,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 119
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 120,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 120
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 121,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 121
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 122,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 122
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 123,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 123
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 124,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 124
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 125,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 125
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 126,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 126
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 127,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 127
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 128,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 128
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 129,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 129
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 130,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 130
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 131,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 131
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 132,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 132
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 133,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 133
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 134,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 134
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 135,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 135
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 136,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 136
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 137,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 137
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 138,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 138
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 139,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 139
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 140,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 140
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "pagerduty.api.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 141,
      "display_name": "pagerduty.api.key",
      "documentation": "Use this API key into any application that needs access to the PagerDuty API. Just like your own password, this key lets an application modify your PagerDuty information.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 141
      }
    },
    {
      "name": "pagerduty.max.retry.time.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 142,
      "display_name": "pagerduty.max.retry.time.seconds",
      "documentation": "The maximum time upto which pagerduty client will try creating incidents. The least recommended value is 10 seconds.Type: intDefault: 10Valid Values: [5,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 142
      },
      "default": "10valid values: [5,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "5",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 143,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for PagerDuty incident creation. Must be configured to one of the following:failStops the connector when an error occurs while preparing incedents from Kafka records.ignoreContinues to process next set of records. when error occurs while preparing incidents from Kafka records.logLogs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.Type: stringDefault: failValid Values: [fail, ignore, log]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 143
      },
      "default": "failvalid values: [fail, ignore, log]importance: medium",
      "valid_values": [
        "fail",
        "ignore",
        "log"
      ]
    },
    {
      "name": "fail",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 144,
      "display_name": "fail",
      "documentation": "Stops the connector when an error occurs while preparing incedents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 144
      }
    },
    {
      "name": "ignore",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 145,
      "display_name": "ignore",
      "documentation": "Continues to process next set of records. when error occurs while preparing incidents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 145
      }
    },
    {
      "name": "log",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 146,
      "display_name": "log",
      "documentation": "Logs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 146
      }
    },
    {
      "name": "pagerduty.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 147,
      "display_name": "pagerduty.proxy.url",
      "documentation": "PagerDuty Proxy settings encoded in URL syntax. Use this property only if you need to access PagerDuty through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 147
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "pagerduty.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 148,
      "display_name": "pagerduty.proxy.user",
      "documentation": "PagerDuty Proxy User. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.userinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 148
      },
      "default": "nullimportance: low"
    },
    {
      "name": "pagerduty.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 149,
      "display_name": "pagerduty.proxy.password",
      "documentation": "PagerDuty Proxy Password. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.passwordinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 149
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 150,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 150
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 151,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 151
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 152,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 152
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 153,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 153
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 154,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 154
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 155,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 155
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 156,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 156
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 157,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 157
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 158,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 158
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 159,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 159
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 160,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 160
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 161,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 161
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 162,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 162
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 163,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 163
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 164,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 164
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 165,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 165
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 166,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 166
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 167,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 167
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 168,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 168
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 169,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 169
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 170,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 170
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 171,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 171
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 172,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 172
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 173,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 173
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 174,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 174
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 175,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 175
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "pagerduty.api.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 176,
      "display_name": "pagerduty.api.key",
      "documentation": "Use this API key into any application that needs access to the PagerDuty API. Just like your own password, this key lets an application modify your PagerDuty information.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 176
      }
    },
    {
      "name": "pagerduty.max.retry.time.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 177,
      "display_name": "pagerduty.max.retry.time.seconds",
      "documentation": "The maximum time upto which pagerduty client will try creating incidents. The least recommended value is 10 seconds.Type: intDefault: 10Valid Values: [5,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 177
      },
      "default": "10valid values: [5,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "5",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 178,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for PagerDuty incident creation. Must be configured to one of the following:failStops the connector when an error occurs while preparing incedents from Kafka records.ignoreContinues to process next set of records. when error occurs while preparing incidents from Kafka records.logLogs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.Type: stringDefault: failValid Values: [fail, ignore, log]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 178
      },
      "default": "failvalid values: [fail, ignore, log]importance: medium",
      "valid_values": [
        "fail",
        "ignore",
        "log"
      ]
    },
    {
      "name": "fail",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 179,
      "display_name": "fail",
      "documentation": "Stops the connector when an error occurs while preparing incedents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 179
      }
    },
    {
      "name": "ignore",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 180,
      "display_name": "ignore",
      "documentation": "Continues to process next set of records. when error occurs while preparing incidents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 180
      }
    },
    {
      "name": "log",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 181,
      "display_name": "log",
      "documentation": "Logs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 181
      }
    },
    {
      "name": "pagerduty.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 182,
      "display_name": "pagerduty.proxy.url",
      "documentation": "PagerDuty Proxy settings encoded in URL syntax. Use this property only if you need to access PagerDuty through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 182
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "pagerduty.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 183,
      "display_name": "pagerduty.proxy.user",
      "documentation": "PagerDuty Proxy User. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.userinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 183
      },
      "default": "nullimportance: low"
    },
    {
      "name": "pagerduty.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 184,
      "display_name": "pagerduty.proxy.password",
      "documentation": "PagerDuty Proxy Password. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.passwordinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 184
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 185,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 185
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 186,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 186
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 187,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 187
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 188,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 188
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 189,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 189
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 190,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 190
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 191,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 191
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 192,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 192
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 193,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 193
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 194,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 194
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 195,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 195
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 196,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 196
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 197,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 197
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 198,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 198
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 199,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 199
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 200,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 200
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 201,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 201
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 202,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 202
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 203,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 203
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 204,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 204
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 205,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 205
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 206,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 206
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 207,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 207
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 208,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 208
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 209,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 209
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 210,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 210
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "pagerduty.api.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 211,
      "display_name": "pagerduty.api.key",
      "documentation": "Use this API key into any application that needs access to the PagerDuty API. Just like your own password, this key lets an application modify your PagerDuty information.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 211
      }
    },
    {
      "name": "pagerduty.max.retry.time.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 212,
      "display_name": "pagerduty.max.retry.time.seconds",
      "documentation": "The maximum time upto which pagerduty client will try creating incidents. The least recommended value is 10 seconds.Type: intDefault: 10Valid Values: [5,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 212
      },
      "default": "10valid values: [5,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "5",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 213,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for PagerDuty incident creation. Must be configured to one of the following:failStops the connector when an error occurs while preparing incedents from Kafka records.ignoreContinues to process next set of records. when error occurs while preparing incidents from Kafka records.logLogs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.Type: stringDefault: failValid Values: [fail, ignore, log]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 213
      },
      "default": "failvalid values: [fail, ignore, log]importance: medium",
      "valid_values": [
        "fail",
        "ignore",
        "log"
      ]
    },
    {
      "name": "fail",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 214,
      "display_name": "fail",
      "documentation": "Stops the connector when an error occurs while preparing incedents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 214
      }
    },
    {
      "name": "ignore",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 215,
      "display_name": "ignore",
      "documentation": "Continues to process next set of records. when error occurs while preparing incidents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 215
      }
    },
    {
      "name": "log",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 216,
      "display_name": "log",
      "documentation": "Logs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 216
      }
    },
    {
      "name": "pagerduty.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 217,
      "display_name": "pagerduty.proxy.url",
      "documentation": "PagerDuty Proxy settings encoded in URL syntax. Use this property only if you need to access PagerDuty through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 217
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "pagerduty.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 218,
      "display_name": "pagerduty.proxy.user",
      "documentation": "PagerDuty Proxy User. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.userinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 218
      },
      "default": "nullimportance: low"
    },
    {
      "name": "pagerduty.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 219,
      "display_name": "pagerduty.proxy.password",
      "documentation": "PagerDuty Proxy Password. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.passwordinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 219
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 220,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 220
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 221,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 221
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 222,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 222
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 223,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 223
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 224,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 224
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 225,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 225
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 226,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 226
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 227,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 227
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 228,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 228
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 229,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 229
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 230,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 230
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 231,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 231
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 232,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 232
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 233,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 233
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 234,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 234
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 235,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 235
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 236,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 236
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 237,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 237
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 238,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 238
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 239,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 239
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 240,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 240
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 241,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 241
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 242,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 242
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 243,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 243
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 244,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 244
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 245,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 245
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "pagerduty.api.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 246,
      "display_name": "pagerduty.api.key",
      "documentation": "Use this API key into any application that needs access to the PagerDuty API. Just like your own password, this key lets an application modify your PagerDuty information.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 246
      }
    },
    {
      "name": "pagerduty.max.retry.time.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 247,
      "display_name": "pagerduty.max.retry.time.seconds",
      "documentation": "The maximum time upto which pagerduty client will try creating incidents. The least recommended value is 10 seconds.Type: intDefault: 10Valid Values: [5,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 247
      },
      "default": "10valid values: [5,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "5",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 248,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for PagerDuty incident creation. Must be configured to one of the following:failStops the connector when an error occurs while preparing incedents from Kafka records.ignoreContinues to process next set of records. when error occurs while preparing incidents from Kafka records.logLogs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.Type: stringDefault: failValid Values: [fail, ignore, log]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 248
      },
      "default": "failvalid values: [fail, ignore, log]importance: medium",
      "valid_values": [
        "fail",
        "ignore",
        "log"
      ]
    },
    {
      "name": "fail",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 249,
      "display_name": "fail",
      "documentation": "Stops the connector when an error occurs while preparing incedents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 249
      }
    },
    {
      "name": "ignore",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 250,
      "display_name": "ignore",
      "documentation": "Continues to process next set of records. when error occurs while preparing incidents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 250
      }
    },
    {
      "name": "log",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 251,
      "display_name": "log",
      "documentation": "Logs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 251
      }
    },
    {
      "name": "pagerduty.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 252,
      "display_name": "pagerduty.proxy.url",
      "documentation": "PagerDuty Proxy settings encoded in URL syntax. Use this property only if you need to access PagerDuty through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 252
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "pagerduty.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 253,
      "display_name": "pagerduty.proxy.user",
      "documentation": "PagerDuty Proxy User. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.userinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 253
      },
      "default": "nullimportance: low"
    },
    {
      "name": "pagerduty.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 254,
      "display_name": "pagerduty.proxy.password",
      "documentation": "PagerDuty Proxy Password. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.passwordinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 254
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 255,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 255
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 256,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 256
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 257,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 257
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 258,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 258
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 259,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 259
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 260,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 260
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 261,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 261
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 262,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 262
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 263,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 263
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 264,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 264
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 265,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 265
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 266,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 266
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 267,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 267
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 268,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 268
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 269,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 269
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 270,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 270
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 271,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 271
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 272,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 272
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 273,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 273
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 274,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 274
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 275,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 275
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 276,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 276
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 277,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 277
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 278,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 278
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 279,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 279
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 280,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 280
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "pagerduty.api.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 281,
      "display_name": "pagerduty.api.key",
      "documentation": "Use this API key into any application that needs access to the PagerDuty API. Just like your own password, this key lets an application modify your PagerDuty information.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 281
      }
    },
    {
      "name": "pagerduty.max.retry.time.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 282,
      "display_name": "pagerduty.max.retry.time.seconds",
      "documentation": "The maximum time upto which pagerduty client will try creating incidents. The least recommended value is 10 seconds.Type: intDefault: 10Valid Values: [5,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 282
      },
      "default": "10valid values: [5,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "5",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 283,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for PagerDuty incident creation. Must be configured to one of the following:failStops the connector when an error occurs while preparing incedents from Kafka records.ignoreContinues to process next set of records. when error occurs while preparing incidents from Kafka records.logLogs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.Type: stringDefault: failValid Values: [fail, ignore, log]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 283
      },
      "default": "failvalid values: [fail, ignore, log]importance: medium",
      "valid_values": [
        "fail",
        "ignore",
        "log"
      ]
    },
    {
      "name": "fail",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 284,
      "display_name": "fail",
      "documentation": "Stops the connector when an error occurs while preparing incedents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 284
      }
    },
    {
      "name": "ignore",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 285,
      "display_name": "ignore",
      "documentation": "Continues to process next set of records. when error occurs while preparing incidents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 285
      }
    },
    {
      "name": "log",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 286,
      "display_name": "log",
      "documentation": "Logs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 286
      }
    },
    {
      "name": "pagerduty.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 287,
      "display_name": "pagerduty.proxy.url",
      "documentation": "PagerDuty Proxy settings encoded in URL syntax. Use this property only if you need to access PagerDuty through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 287
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "pagerduty.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 288,
      "display_name": "pagerduty.proxy.user",
      "documentation": "PagerDuty Proxy User. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.userinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 288
      },
      "default": "nullimportance: low"
    },
    {
      "name": "pagerduty.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 289,
      "display_name": "pagerduty.proxy.password",
      "documentation": "PagerDuty Proxy Password. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.passwordinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 289
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 290,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 290
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 291,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 291
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 292,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 292
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 293,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 293
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 294,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 294
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 295,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 295
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 296,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 296
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 297,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 297
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 298,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 298
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 299,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 299
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 300,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 300
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 301,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 301
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 302,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 302
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 303,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 303
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 304,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 304
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 305,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 305
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 306,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 306
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 307,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 307
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 308,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 308
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 309,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 309
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 310,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 310
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 311,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 311
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 312,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 312
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 313,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 313
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 314,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 314
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 315,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 315
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "pagerduty.api.key",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "PagerDuty",
      "order_in_group": 316,
      "display_name": "pagerduty.api.key",
      "documentation": "Use this API key into any application that needs access to the PagerDuty API. Just like your own password, this key lets an application modify your PagerDuty information.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 316
      }
    },
    {
      "name": "pagerduty.max.retry.time.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 317,
      "display_name": "pagerduty.max.retry.time.seconds",
      "documentation": "The maximum time upto which pagerduty client will try creating incidents. The least recommended value is 10 seconds.Type: intDefault: 10Valid Values: [5,\u00e2\u0080\u00a6]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 317
      },
      "default": "10valid values: [5,\u00e2\u0080\u00a6]importance: low",
      "valid_values": [
        "5",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 318,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for PagerDuty incident creation. Must be configured to one of the following:failStops the connector when an error occurs while preparing incedents from Kafka records.ignoreContinues to process next set of records. when error occurs while preparing incidents from Kafka records.logLogs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.Type: stringDefault: failValid Values: [fail, ignore, log]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 318
      },
      "default": "failvalid values: [fail, ignore, log]importance: medium",
      "valid_values": [
        "fail",
        "ignore",
        "log"
      ]
    },
    {
      "name": "fail",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 319,
      "display_name": "fail",
      "documentation": "Stops the connector when an error occurs while preparing incedents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 319
      }
    },
    {
      "name": "ignore",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 320,
      "display_name": "ignore",
      "documentation": "Continues to process next set of records. when error occurs while preparing incidents from Kafka records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 320
      }
    },
    {
      "name": "log",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "PagerDuty",
      "order_in_group": 321,
      "display_name": "log",
      "documentation": "Logs the error message when error occurs while preparing incidents from Kafka records and continues to process next set of records, available in${connector-name}-errortopic.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 321
      }
    },
    {
      "name": "pagerduty.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 322,
      "display_name": "pagerduty.proxy.url",
      "documentation": "PagerDuty Proxy settings encoded in URL syntax. Use this property only if you need to access PagerDuty through a proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 322
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "pagerduty.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 323,
      "display_name": "pagerduty.proxy.user",
      "documentation": "PagerDuty Proxy User. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.userinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 323
      },
      "default": "nullimportance: low"
    },
    {
      "name": "pagerduty.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "PagerDuty",
      "order_in_group": 324,
      "display_name": "pagerduty.proxy.password",
      "documentation": "PagerDuty Proxy Password. Use this property only if you need to access PagerDuty through a proxy. Usingpagerduty.proxy.passwordinstead of embedding the username and password inpagerduty.proxy.urlallows the password to be hidden in the logs.Type: passwordDefault: [hidden]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 324
      },
      "default": "[hidden]importance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 325,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 325
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 326,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 326
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 327,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 327
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 328,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 328
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 329,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 329
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 330,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 330
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connect Reporter",
      "order_in_group": 331,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 331
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 332,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 332
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 333,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 333
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 334,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 334
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 335,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 335
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 336,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 336
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 337,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 337
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 338,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 338
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 339,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 339
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 340,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 340
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 341,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 341
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 342,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 342
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 343,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 343
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Formatter",
      "order_in_group": 344,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 344
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Formatter",
      "order_in_group": 345,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 345
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Formatter",
      "order_in_group": 346,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 346
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Formatter",
      "order_in_group": 347,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 347
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 348,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 348
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 349,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 349
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 350,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 350
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 351,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 351
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 352,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 352
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 353,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 353
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 354,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 354
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 355,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 355
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 356,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 356
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 357,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 357
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 358,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 358
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 359,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 359
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 360,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 360
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 361,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 361
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Confluent Platform license",
      "order_in_group": 362,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 362
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 363,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 363
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 364,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 364
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 365,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 365
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 366,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 366
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 367,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 367
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 368,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 368
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Confluent license properties",
      "order_in_group": 369,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 369
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "Search by configuration property name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "Search by configuration property name",
      "documentation": "Enter a string to search and filter by configuration property name.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "name",
      "documentation": "Globally unique name to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "connector.class",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 3,
      "display_name": "connector.class",
      "documentation": "Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \u00e2\u0080\u009cFileStreamSink\u00e2\u0080\u009d or \u00e2\u0080\u009cFileStreamSinkConnector\u00e2\u0080\u009d to make the configuration a bit shorter",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "tasks.max",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 4,
      "display_name": "tasks.max",
      "documentation": "Maximum number of tasks to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "topics",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 5,
      "display_name": "topics",
      "documentation": "List of topics to consume, separated by commas",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "topics.regex",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 6,
      "display_name": "topics.regex",
      "documentation": "Regular expression giving topics to consume. Under the hood, the regex is compiled to ajava.util.regex.Pattern. Only one of topics or topics.regex should be specified.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "tasks.max.enforce",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 7,
      "display_name": "tasks.max.enforce",
      "documentation": "(Deprecated) Whether to enforce that the tasks.max property is respected by the connector. By default, connectors that generate too many tasks will fail, and existing sets of tasks that exceed the tasks.max property will also be failed. If this property is set to false, then connectors will be allowed to generate more than the maximum number of tasks, and existing sets of tasks that exceed the tasks.max property will be allowed to run. This property is deprecated and will be removed in an upcoming major release.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "key.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 8,
      "display_name": "key.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      }
    },
    {
      "name": "value.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 9,
      "display_name": "value.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      }
    },
    {
      "name": "header.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 10,
      "display_name": "header.converter",
      "documentation": "HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      }
    },
    {
      "name": "config.action.reload",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 11,
      "display_name": "config.action.reload",
      "documentation": "The action that Connect should take on the connector when changes in external configuration providers result in a change in the connector\u00e2\u0080\u0099s configuration properties. A value of \u00e2\u0080\u0098none\u00e2\u0080\u0099 indicates that Connect will do nothing. A value of \u00e2\u0080\u0098restart\u00e2\u0080\u0099 indicates that Connect should restart/reload the connector with the updated configuration properties.The restart may actually be scheduled in the future if the external configuration provider indicates that a configuration value will expire in the future.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "transforms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 12,
      "display_name": "transforms",
      "documentation": "Aliases for the transformations to be applied to records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "predicates",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 13,
      "display_name": "predicates",
      "documentation": "Aliases for the predicates used by transformations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      }
    },
    {
      "name": "errors.retry.timeout",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 14,
      "display_name": "errors.retry.timeout",
      "documentation": "The maximum duration in milliseconds that a failed operation will be reattempted. The default is 0, which means no retries will be attempted. Use -1 for infinite retries.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "errors.retry.delay.max.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 15,
      "display_name": "errors.retry.delay.max.ms",
      "documentation": "The maximum duration in milliseconds between consecutive retry attempts. Jitter will be added to the delay once this limit is reached to prevent thundering herd issues.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      }
    },
    {
      "name": "errors.tolerance",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 16,
      "display_name": "errors.tolerance",
      "documentation": "Behavior for tolerating errors during connector operation. \u00e2\u0080\u0098none\u00e2\u0080\u0099 is the default value and signals that any error will result in an immediate connector task failure; \u00e2\u0080\u0098all\u00e2\u0080\u0099 changes the behavior to skip over problematic records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "errors.log.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 17,
      "display_name": "errors.log.enable",
      "documentation": "If true, write each error and the details of the failed operation and problematic record to the Connect application log. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, so that only errors that are not tolerated are reported.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      }
    },
    {
      "name": "errors.log.include.messages",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 18,
      "display_name": "errors.log.include.messages",
      "documentation": "Whether to include in the log the Connect record that resulted in a failure. For sink records, the topic, partition, offset, and timestamp will be logged. For source records, the key and value (and their schemas), all headers, and the timestamp, Kafka topic, Kafka partition, source partition, and source offset will be logged. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, which will prevent record keys, values, and headers from being written to log files.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      }
    },
    {
      "name": "errors.deadletterqueue.topic.name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 19,
      "display_name": "errors.deadletterqueue.topic.name",
      "documentation": "The name of the topic to be used as the dead letter queue (DLQ) for messages that result in an error when processed by this sink connector, or its transformations or converters. The topic name is blank by default, which means that no messages are to be recorded in the DLQ.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      }
    },
    {
      "name": "errors.deadletterqueue.topic.replication.factor",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 20,
      "display_name": "errors.deadletterqueue.topic.replication.factor",
      "documentation": "Replication factor used to create the dead letter queue topic when it doesn\u00e2\u0080\u0099t already exist.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      }
    },
    {
      "name": "errors.deadletterqueue.context.headers.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 21,
      "display_name": "errors.deadletterqueue.context.headers.enable",
      "documentation": "If true, add headers containing error context to the messages written to the dead letter queue. To avoid clashing with headers from the original record, all error context header keys, all error context header keys will start with__connect.errors.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      }
    }
  ]
}