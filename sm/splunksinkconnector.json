{
  "template_id": "SplunkSinkConnector",
  "connector_type": "SINK",
  "connector.class": "com.splunk.kafka.connect.SplunkSinkConnector",
  "name": "{{.logicalClusterId}}",
  "imports": [],
  "group_order": [],
  "config_defs": [
    {
      "name": "splunk.hec.token",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 1,
      "display_name": "splunk.hec.token",
      "documentation": "Splunk Http Event Collector (HEC) token.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 1
      }
    },
    {
      "name": "splunk.hec.uri",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 2,
      "display_name": "splunk.hec.uri",
      "documentation": "Splunk HEC URIs. Either a list of FQDNs or IPs of all Splunk indexers, separated with a,, or a load balancer. The connector load balances to indexers using round robin. Splunk Connector round robins to this list of indexers:https://hec1.splunk.com:8088,https://hec2.splunk.com:8088,https://hec3.splunk.com:8088Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "splunk.hec.ssl.trust.store.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 3,
      "display_name": "splunk.hec.ssl.trust.store.password",
      "documentation": "Password for the trust store.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "splunk.hec.ssl.trust.store.path",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 4,
      "display_name": "splunk.hec.ssl.trust.store.path",
      "documentation": "Path on the local disk to the certificate trust store.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "splunk.hec.total.channels",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 5,
      "display_name": "splunk.hec.total.channels",
      "documentation": "Total HEC Channels used to post events to Splunk. When enabling HEC ACK, setting to the same or 2X number of indexers is generally good.Type: intDefault: 2Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      },
      "default": "2importance: high"
    },
    {
      "name": "splunk.header.custom",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 6,
      "display_name": "splunk.header.custom",
      "documentation": "This setting enables looking for Record headers with these values and adding them to each event if present. Multiple headers are separated by comma. For example:custom_header_1,custom_header_2,custom_header_3.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.header.host",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 7,
      "display_name": "splunk.header.host",
      "documentation": "Header to use for Splunk Header Host.Type: stringDefault: splunk.header.hostImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      },
      "default": "splunk.header.hostimportance: medium"
    },
    {
      "name": "splunk.header.index",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 8,
      "display_name": "splunk.header.index",
      "documentation": "Header to use for Splunk Header Index.Type: stringDefault: splunk.header.indexImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      },
      "default": "splunk.header.indeximportance: medium"
    },
    {
      "name": "splunk.header.source",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 9,
      "display_name": "splunk.header.source",
      "documentation": "Header to use for Splunk Header Source.Type: stringDefault: splunk.header.sourceImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      },
      "default": "splunk.header.sourceimportance: medium"
    },
    {
      "name": "splunk.header.sourcetype",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 10,
      "display_name": "splunk.header.sourcetype",
      "documentation": "Header to use for Splunk Header Sourcetype.Type: stringDefault: splunk.header.sourcetypeImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      },
      "default": "splunk.header.sourcetypeimportance: medium"
    },
    {
      "name": "splunk.header.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 11,
      "display_name": "splunk.header.support",
      "documentation": "This setting enables Kafka Record headers to be used for meta data override.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 12,
      "display_name": "splunk.hec.ack.enabled",
      "documentation": "When set totrue, the connector polls event ACKs for POST events before check-pointing the Kafka offsets. This setting enables guaranteed delivery and prevents data loss but may result in lower overall throughput.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.interval",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 13,
      "display_name": "splunk.hec.ack.poll.interval",
      "documentation": "Controls the event ACKs polling interval. This setting is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this setting is10seconds.Type: intDefault: 10Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      },
      "default": "10importance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 14,
      "display_name": "splunk.hec.ack.poll.threads",
      "documentation": "Controls how many threads should be spawned to poll event ACKs. This setting is used for performance tuning and is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this is set to2.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.backoff.threshhold.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 15,
      "display_name": "splunk.hec.backoff.threshhold.seconds",
      "documentation": "The amount of time the connector waits before attempting to resend failed events to Splunk.Type: intDefault: 60Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      },
      "default": "60importance: medium"
    },
    {
      "name": "splunk.hec.event.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 16,
      "display_name": "splunk.hec.event.timeout",
      "documentation": "This setting determines how long the connector will wait for an event to be acknowledged before timing out and attempting to resend the event. This setting is applicable whensplunk.hec.ack.enabledis set totrue. By default, this is set to300seconds.Type: intDefault: 300Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      },
      "default": "300importance: medium"
    },
    {
      "name": "splunk.hec.http.keepalive",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 17,
      "display_name": "splunk.hec.http.keepalive",
      "documentation": "This setting enables or disablesHTTP connection keep-alive. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.max.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 18,
      "display_name": "splunk.hec.max.batch.size",
      "documentation": "The maximum batch size when posting events to Splunk. The size is the actual number of Kafka records, not the byte size. By default, this is set to500.Type: intDefault: 500Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      },
      "default": "500importance: medium"
    },
    {
      "name": "splunk.hec.max.http.connection.per.channel",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 19,
      "display_name": "splunk.hec.max.http.connection.per.channel",
      "documentation": "The maximum number of HTTP connections pooled for one HEC Channel when posting events to Splunk.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.max.outstanding.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 20,
      "display_name": "splunk.hec.max.outstanding.events",
      "documentation": "The maximum amount of unacknowledged events kept in memory by the connector. When the threshold is exceeded, a back pressure event is triggered to slow the collection of events. By default, this threshold is set to1000000events.Type: intDefault: 1000000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      },
      "default": "1000000importance: medium"
    },
    {
      "name": "splunk.hec.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 21,
      "display_name": "splunk.hec.max.retries",
      "documentation": "The maximum number of retries for a failed batch before the task is killed. When set to-1(the default) the connector retries indefinitely.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      },
      "default": "-1importance: medium"
    },
    {
      "name": "splunk.hec.raw",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 22,
      "display_name": "splunk.hec.raw",
      "documentation": "Enable this setting to ingest data using the/rawHEC endpoint instead of the/eventHEC endpoint. By default, this setting isfalseand the/eventHEC endpoint is used.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 22
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.raw.line.breaker",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 23,
      "display_name": "splunk.hec.raw.line.breaker",
      "documentation": "This setting is used to specify a custom line breaker to help Splunk separate events correctly. For example, you can specify#####as a special line breaker and Splunk will split events on those characters. This is only applicable whensplunk.hec.rawis set totrue.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 23
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.ssl.validate.certs",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 24,
      "display_name": "splunk.hec.ssl.validate.certs",
      "documentation": "Enables or disables HTTPS certification validation. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 24
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.use.record.timestamp",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 25,
      "display_name": "splunk.hec.use.record.timestamp",
      "documentation": "When set totrue, the timestamp is retrieved from the Kafka record and passed to Splunk as a HEC meta-data override. This indexes events in Splunk with the record timestamp. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 25
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.indexes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 26,
      "display_name": "splunk.indexes",
      "documentation": "Splunk index names for Kafka topic data separated by a comma for multiple topics to indexers. Example: \u00e2\u0080\u009cprod-index1,prod-index2,prod-index3\u00e2\u0080\u009dType: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 26
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sources",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 27,
      "display_name": "splunk.sources",
      "documentation": "Splunk event source metadata for Kafka topic data. The same configuration rules as indexes apply. If unconfigured, the default source binds to the HEC token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 27
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sourcetypes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 28,
      "display_name": "splunk.sourcetypes",
      "documentation": "Splunk event source type metadata for Kafka topic data. The same configuration rules as indexes apply here. If unconfigured, the default source binds to the HEC token. Only configure this when using the JSON Event endpoint (splunk.hec.raw=false).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 28
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.json.event.enrichment",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 29,
      "display_name": "splunk.hec.json.event.enrichment",
      "documentation": "This setting is used to enrich raw data with extra metadata fields. It contains a list of key value pairs separated by,. The configured enrichment metadata will be indexed along with raw event data by Splunk. This is only applicable to the/eventHEC endpoint (splunk.hec.raw=false). Data enrichment for the/eventHEC endpoint is only available in Splunk Enterprise 6.5 and above. By default, this setting is empty.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 29
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "splunk.hec.json.event.formatted",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 30,
      "display_name": "splunk.hec.json.event.formatted",
      "documentation": "This setting ensures events are preformatted into theproper HEC JSON formatand have metadata and event data so that they are indexed correctly by Splunk. Set this property totruefor events that are already in HEC format.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 30
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.socket.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 31,
      "display_name": "splunk.hec.socket.timeout",
      "documentation": "The maximum duration in seconds to read/write data to network before an internal TCP Socket timeout occurs. By default, this is set to 60 seconds.Type: intDefault: 60Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 31
      },
      "default": "60importance: low"
    },
    {
      "name": "splunk.hec.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 32,
      "display_name": "splunk.hec.threads",
      "documentation": "Controls how many threads are spawned to perform data injection through HEC in a single connector task.Type: intDefault: 1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 32
      },
      "default": "1importance: low"
    },
    {
      "name": "splunk.hec.track.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 33,
      "display_name": "splunk.hec.track.data",
      "documentation": "When set totrue, data loss and data injection latency metadata will be indexed along with raw data. This setting only works in conjunction with/eventHEC endpoint (splunk.hec.raw=false).Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 33
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.token",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 34,
      "display_name": "splunk.hec.token",
      "documentation": "Splunk Http Event Collector (HEC) token.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 34
      }
    },
    {
      "name": "splunk.hec.uri",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 35,
      "display_name": "splunk.hec.uri",
      "documentation": "Splunk HEC URIs. Either a list of FQDNs or IPs of all Splunk indexers, separated with a,, or a load balancer. The connector load balances to indexers using round robin. Splunk Connector round robins to this list of indexers:https://hec1.splunk.com:8088,https://hec2.splunk.com:8088,https://hec3.splunk.com:8088Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 35
      }
    },
    {
      "name": "splunk.hec.ssl.trust.store.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 36,
      "display_name": "splunk.hec.ssl.trust.store.password",
      "documentation": "Password for the trust store.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 36
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "splunk.hec.ssl.trust.store.path",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 37,
      "display_name": "splunk.hec.ssl.trust.store.path",
      "documentation": "Path on the local disk to the certificate trust store.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 37
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "splunk.hec.total.channels",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 38,
      "display_name": "splunk.hec.total.channels",
      "documentation": "Total HEC Channels used to post events to Splunk. When enabling HEC ACK, setting to the same or 2X number of indexers is generally good.Type: intDefault: 2Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 38
      },
      "default": "2importance: high"
    },
    {
      "name": "splunk.header.custom",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 39,
      "display_name": "splunk.header.custom",
      "documentation": "This setting enables looking for Record headers with these values and adding them to each event if present. Multiple headers are separated by comma. For example:custom_header_1,custom_header_2,custom_header_3.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 39
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.header.host",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 40,
      "display_name": "splunk.header.host",
      "documentation": "Header to use for Splunk Header Host.Type: stringDefault: splunk.header.hostImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 40
      },
      "default": "splunk.header.hostimportance: medium"
    },
    {
      "name": "splunk.header.index",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 41,
      "display_name": "splunk.header.index",
      "documentation": "Header to use for Splunk Header Index.Type: stringDefault: splunk.header.indexImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 41
      },
      "default": "splunk.header.indeximportance: medium"
    },
    {
      "name": "splunk.header.source",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 42,
      "display_name": "splunk.header.source",
      "documentation": "Header to use for Splunk Header Source.Type: stringDefault: splunk.header.sourceImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 42
      },
      "default": "splunk.header.sourceimportance: medium"
    },
    {
      "name": "splunk.header.sourcetype",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 43,
      "display_name": "splunk.header.sourcetype",
      "documentation": "Header to use for Splunk Header Sourcetype.Type: stringDefault: splunk.header.sourcetypeImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 43
      },
      "default": "splunk.header.sourcetypeimportance: medium"
    },
    {
      "name": "splunk.header.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 44,
      "display_name": "splunk.header.support",
      "documentation": "This setting enables Kafka Record headers to be used for meta data override.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 44
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 45,
      "display_name": "splunk.hec.ack.enabled",
      "documentation": "When set totrue, the connector polls event ACKs for POST events before check-pointing the Kafka offsets. This setting enables guaranteed delivery and prevents data loss but may result in lower overall throughput.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 45
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.interval",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 46,
      "display_name": "splunk.hec.ack.poll.interval",
      "documentation": "Controls the event ACKs polling interval. This setting is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this setting is10seconds.Type: intDefault: 10Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 46
      },
      "default": "10importance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 47,
      "display_name": "splunk.hec.ack.poll.threads",
      "documentation": "Controls how many threads should be spawned to poll event ACKs. This setting is used for performance tuning and is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this is set to2.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 47
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.backoff.threshhold.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 48,
      "display_name": "splunk.hec.backoff.threshhold.seconds",
      "documentation": "The amount of time the connector waits before attempting to resend failed events to Splunk.Type: intDefault: 60Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 48
      },
      "default": "60importance: medium"
    },
    {
      "name": "splunk.hec.event.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 49,
      "display_name": "splunk.hec.event.timeout",
      "documentation": "This setting determines how long the connector will wait for an event to be acknowledged before timing out and attempting to resend the event. This setting is applicable whensplunk.hec.ack.enabledis set totrue. By default, this is set to300seconds.Type: intDefault: 300Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 49
      },
      "default": "300importance: medium"
    },
    {
      "name": "splunk.hec.http.keepalive",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 50,
      "display_name": "splunk.hec.http.keepalive",
      "documentation": "This setting enables or disablesHTTP connection keep-alive. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 50
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.max.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 51,
      "display_name": "splunk.hec.max.batch.size",
      "documentation": "The maximum batch size when posting events to Splunk. The size is the actual number of Kafka records, not the byte size. By default, this is set to500.Type: intDefault: 500Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 51
      },
      "default": "500importance: medium"
    },
    {
      "name": "splunk.hec.max.http.connection.per.channel",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 52,
      "display_name": "splunk.hec.max.http.connection.per.channel",
      "documentation": "The maximum number of HTTP connections pooled for one HEC Channel when posting events to Splunk.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 52
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.max.outstanding.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 53,
      "display_name": "splunk.hec.max.outstanding.events",
      "documentation": "The maximum amount of unacknowledged events kept in memory by the connector. When the threshold is exceeded, a back pressure event is triggered to slow the collection of events. By default, this threshold is set to1000000events.Type: intDefault: 1000000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 53
      },
      "default": "1000000importance: medium"
    },
    {
      "name": "splunk.hec.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 54,
      "display_name": "splunk.hec.max.retries",
      "documentation": "The maximum number of retries for a failed batch before the task is killed. When set to-1(the default) the connector retries indefinitely.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 54
      },
      "default": "-1importance: medium"
    },
    {
      "name": "splunk.hec.raw",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 55,
      "display_name": "splunk.hec.raw",
      "documentation": "Enable this setting to ingest data using the/rawHEC endpoint instead of the/eventHEC endpoint. By default, this setting isfalseand the/eventHEC endpoint is used.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 55
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.raw.line.breaker",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 56,
      "display_name": "splunk.hec.raw.line.breaker",
      "documentation": "This setting is used to specify a custom line breaker to help Splunk separate events correctly. For example, you can specify#####as a special line breaker and Splunk will split events on those characters. This is only applicable whensplunk.hec.rawis set totrue.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 56
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.ssl.validate.certs",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 57,
      "display_name": "splunk.hec.ssl.validate.certs",
      "documentation": "Enables or disables HTTPS certification validation. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 57
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.use.record.timestamp",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 58,
      "display_name": "splunk.hec.use.record.timestamp",
      "documentation": "When set totrue, the timestamp is retrieved from the Kafka record and passed to Splunk as a HEC meta-data override. This indexes events in Splunk with the record timestamp. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 58
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.indexes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 59,
      "display_name": "splunk.indexes",
      "documentation": "Splunk index names for Kafka topic data separated by a comma for multiple topics to indexers. Example: \u00e2\u0080\u009cprod-index1,prod-index2,prod-index3\u00e2\u0080\u009dType: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 59
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sources",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 60,
      "display_name": "splunk.sources",
      "documentation": "Splunk event source metadata for Kafka topic data. The same configuration rules as indexes apply. If unconfigured, the default source binds to the HEC token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 60
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sourcetypes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 61,
      "display_name": "splunk.sourcetypes",
      "documentation": "Splunk event source type metadata for Kafka topic data. The same configuration rules as indexes apply here. If unconfigured, the default source binds to the HEC token. Only configure this when using the JSON Event endpoint (splunk.hec.raw=false).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 61
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.json.event.enrichment",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 62,
      "display_name": "splunk.hec.json.event.enrichment",
      "documentation": "This setting is used to enrich raw data with extra metadata fields. It contains a list of key value pairs separated by,. The configured enrichment metadata will be indexed along with raw event data by Splunk. This is only applicable to the/eventHEC endpoint (splunk.hec.raw=false). Data enrichment for the/eventHEC endpoint is only available in Splunk Enterprise 6.5 and above. By default, this setting is empty.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 62
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "splunk.hec.json.event.formatted",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 63,
      "display_name": "splunk.hec.json.event.formatted",
      "documentation": "This setting ensures events are preformatted into theproper HEC JSON formatand have metadata and event data so that they are indexed correctly by Splunk. Set this property totruefor events that are already in HEC format.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 63
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.socket.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 64,
      "display_name": "splunk.hec.socket.timeout",
      "documentation": "The maximum duration in seconds to read/write data to network before an internal TCP Socket timeout occurs. By default, this is set to 60 seconds.Type: intDefault: 60Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 64
      },
      "default": "60importance: low"
    },
    {
      "name": "splunk.hec.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 65,
      "display_name": "splunk.hec.threads",
      "documentation": "Controls how many threads are spawned to perform data injection through HEC in a single connector task.Type: intDefault: 1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 65
      },
      "default": "1importance: low"
    },
    {
      "name": "splunk.hec.track.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 66,
      "display_name": "splunk.hec.track.data",
      "documentation": "When set totrue, data loss and data injection latency metadata will be indexed along with raw data. This setting only works in conjunction with/eventHEC endpoint (splunk.hec.raw=false).Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 66
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.token",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 67,
      "display_name": "splunk.hec.token",
      "documentation": "Splunk Http Event Collector (HEC) token.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 67
      }
    },
    {
      "name": "splunk.hec.uri",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 68,
      "display_name": "splunk.hec.uri",
      "documentation": "Splunk HEC URIs. Either a list of FQDNs or IPs of all Splunk indexers, separated with a,, or a load balancer. The connector load balances to indexers using round robin. Splunk Connector round robins to this list of indexers:https://hec1.splunk.com:8088,https://hec2.splunk.com:8088,https://hec3.splunk.com:8088Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 68
      }
    },
    {
      "name": "splunk.hec.ssl.trust.store.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 69,
      "display_name": "splunk.hec.ssl.trust.store.password",
      "documentation": "Password for the trust store.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 69
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "splunk.hec.ssl.trust.store.path",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 70,
      "display_name": "splunk.hec.ssl.trust.store.path",
      "documentation": "Path on the local disk to the certificate trust store.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 70
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "splunk.hec.total.channels",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 71,
      "display_name": "splunk.hec.total.channels",
      "documentation": "Total HEC Channels used to post events to Splunk. When enabling HEC ACK, setting to the same or 2X number of indexers is generally good.Type: intDefault: 2Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 71
      },
      "default": "2importance: high"
    },
    {
      "name": "splunk.header.custom",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 72,
      "display_name": "splunk.header.custom",
      "documentation": "This setting enables looking for Record headers with these values and adding them to each event if present. Multiple headers are separated by comma. For example:custom_header_1,custom_header_2,custom_header_3.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 72
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.header.host",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 73,
      "display_name": "splunk.header.host",
      "documentation": "Header to use for Splunk Header Host.Type: stringDefault: splunk.header.hostImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 73
      },
      "default": "splunk.header.hostimportance: medium"
    },
    {
      "name": "splunk.header.index",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 74,
      "display_name": "splunk.header.index",
      "documentation": "Header to use for Splunk Header Index.Type: stringDefault: splunk.header.indexImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 74
      },
      "default": "splunk.header.indeximportance: medium"
    },
    {
      "name": "splunk.header.source",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 75,
      "display_name": "splunk.header.source",
      "documentation": "Header to use for Splunk Header Source.Type: stringDefault: splunk.header.sourceImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 75
      },
      "default": "splunk.header.sourceimportance: medium"
    },
    {
      "name": "splunk.header.sourcetype",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 76,
      "display_name": "splunk.header.sourcetype",
      "documentation": "Header to use for Splunk Header Sourcetype.Type: stringDefault: splunk.header.sourcetypeImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 76
      },
      "default": "splunk.header.sourcetypeimportance: medium"
    },
    {
      "name": "splunk.header.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 77,
      "display_name": "splunk.header.support",
      "documentation": "This setting enables Kafka Record headers to be used for meta data override.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 77
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 78,
      "display_name": "splunk.hec.ack.enabled",
      "documentation": "When set totrue, the connector polls event ACKs for POST events before check-pointing the Kafka offsets. This setting enables guaranteed delivery and prevents data loss but may result in lower overall throughput.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 78
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.interval",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 79,
      "display_name": "splunk.hec.ack.poll.interval",
      "documentation": "Controls the event ACKs polling interval. This setting is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this setting is10seconds.Type: intDefault: 10Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 79
      },
      "default": "10importance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 80,
      "display_name": "splunk.hec.ack.poll.threads",
      "documentation": "Controls how many threads should be spawned to poll event ACKs. This setting is used for performance tuning and is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this is set to2.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 80
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.backoff.threshhold.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 81,
      "display_name": "splunk.hec.backoff.threshhold.seconds",
      "documentation": "The amount of time the connector waits before attempting to resend failed events to Splunk.Type: intDefault: 60Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 81
      },
      "default": "60importance: medium"
    },
    {
      "name": "splunk.hec.event.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 82,
      "display_name": "splunk.hec.event.timeout",
      "documentation": "This setting determines how long the connector will wait for an event to be acknowledged before timing out and attempting to resend the event. This setting is applicable whensplunk.hec.ack.enabledis set totrue. By default, this is set to300seconds.Type: intDefault: 300Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 82
      },
      "default": "300importance: medium"
    },
    {
      "name": "splunk.hec.http.keepalive",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 83,
      "display_name": "splunk.hec.http.keepalive",
      "documentation": "This setting enables or disablesHTTP connection keep-alive. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 83
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.max.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 84,
      "display_name": "splunk.hec.max.batch.size",
      "documentation": "The maximum batch size when posting events to Splunk. The size is the actual number of Kafka records, not the byte size. By default, this is set to500.Type: intDefault: 500Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 84
      },
      "default": "500importance: medium"
    },
    {
      "name": "splunk.hec.max.http.connection.per.channel",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 85,
      "display_name": "splunk.hec.max.http.connection.per.channel",
      "documentation": "The maximum number of HTTP connections pooled for one HEC Channel when posting events to Splunk.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 85
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.max.outstanding.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 86,
      "display_name": "splunk.hec.max.outstanding.events",
      "documentation": "The maximum amount of unacknowledged events kept in memory by the connector. When the threshold is exceeded, a back pressure event is triggered to slow the collection of events. By default, this threshold is set to1000000events.Type: intDefault: 1000000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 86
      },
      "default": "1000000importance: medium"
    },
    {
      "name": "splunk.hec.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 87,
      "display_name": "splunk.hec.max.retries",
      "documentation": "The maximum number of retries for a failed batch before the task is killed. When set to-1(the default) the connector retries indefinitely.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 87
      },
      "default": "-1importance: medium"
    },
    {
      "name": "splunk.hec.raw",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 88,
      "display_name": "splunk.hec.raw",
      "documentation": "Enable this setting to ingest data using the/rawHEC endpoint instead of the/eventHEC endpoint. By default, this setting isfalseand the/eventHEC endpoint is used.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 88
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.raw.line.breaker",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 89,
      "display_name": "splunk.hec.raw.line.breaker",
      "documentation": "This setting is used to specify a custom line breaker to help Splunk separate events correctly. For example, you can specify#####as a special line breaker and Splunk will split events on those characters. This is only applicable whensplunk.hec.rawis set totrue.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 89
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.ssl.validate.certs",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 90,
      "display_name": "splunk.hec.ssl.validate.certs",
      "documentation": "Enables or disables HTTPS certification validation. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 90
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.use.record.timestamp",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 91,
      "display_name": "splunk.hec.use.record.timestamp",
      "documentation": "When set totrue, the timestamp is retrieved from the Kafka record and passed to Splunk as a HEC meta-data override. This indexes events in Splunk with the record timestamp. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 91
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.indexes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 92,
      "display_name": "splunk.indexes",
      "documentation": "Splunk index names for Kafka topic data separated by a comma for multiple topics to indexers. Example: \u00e2\u0080\u009cprod-index1,prod-index2,prod-index3\u00e2\u0080\u009dType: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 92
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sources",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 93,
      "display_name": "splunk.sources",
      "documentation": "Splunk event source metadata for Kafka topic data. The same configuration rules as indexes apply. If unconfigured, the default source binds to the HEC token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 93
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sourcetypes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 94,
      "display_name": "splunk.sourcetypes",
      "documentation": "Splunk event source type metadata for Kafka topic data. The same configuration rules as indexes apply here. If unconfigured, the default source binds to the HEC token. Only configure this when using the JSON Event endpoint (splunk.hec.raw=false).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 94
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.json.event.enrichment",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 95,
      "display_name": "splunk.hec.json.event.enrichment",
      "documentation": "This setting is used to enrich raw data with extra metadata fields. It contains a list of key value pairs separated by,. The configured enrichment metadata will be indexed along with raw event data by Splunk. This is only applicable to the/eventHEC endpoint (splunk.hec.raw=false). Data enrichment for the/eventHEC endpoint is only available in Splunk Enterprise 6.5 and above. By default, this setting is empty.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 95
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "splunk.hec.json.event.formatted",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 96,
      "display_name": "splunk.hec.json.event.formatted",
      "documentation": "This setting ensures events are preformatted into theproper HEC JSON formatand have metadata and event data so that they are indexed correctly by Splunk. Set this property totruefor events that are already in HEC format.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 96
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.socket.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 97,
      "display_name": "splunk.hec.socket.timeout",
      "documentation": "The maximum duration in seconds to read/write data to network before an internal TCP Socket timeout occurs. By default, this is set to 60 seconds.Type: intDefault: 60Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 97
      },
      "default": "60importance: low"
    },
    {
      "name": "splunk.hec.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 98,
      "display_name": "splunk.hec.threads",
      "documentation": "Controls how many threads are spawned to perform data injection through HEC in a single connector task.Type: intDefault: 1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 98
      },
      "default": "1importance: low"
    },
    {
      "name": "splunk.hec.track.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 99,
      "display_name": "splunk.hec.track.data",
      "documentation": "When set totrue, data loss and data injection latency metadata will be indexed along with raw data. This setting only works in conjunction with/eventHEC endpoint (splunk.hec.raw=false).Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 99
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.token",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 100,
      "display_name": "splunk.hec.token",
      "documentation": "Splunk Http Event Collector (HEC) token.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 100
      }
    },
    {
      "name": "splunk.hec.uri",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 101,
      "display_name": "splunk.hec.uri",
      "documentation": "Splunk HEC URIs. Either a list of FQDNs or IPs of all Splunk indexers, separated with a,, or a load balancer. The connector load balances to indexers using round robin. Splunk Connector round robins to this list of indexers:https://hec1.splunk.com:8088,https://hec2.splunk.com:8088,https://hec3.splunk.com:8088Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 101
      }
    },
    {
      "name": "splunk.hec.ssl.trust.store.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 102,
      "display_name": "splunk.hec.ssl.trust.store.password",
      "documentation": "Password for the trust store.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 102
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "splunk.hec.ssl.trust.store.path",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 103,
      "display_name": "splunk.hec.ssl.trust.store.path",
      "documentation": "Path on the local disk to the certificate trust store.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 103
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "splunk.hec.total.channels",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 104,
      "display_name": "splunk.hec.total.channels",
      "documentation": "Total HEC Channels used to post events to Splunk. When enabling HEC ACK, setting to the same or 2X number of indexers is generally good.Type: intDefault: 2Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 104
      },
      "default": "2importance: high"
    },
    {
      "name": "splunk.header.custom",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 105,
      "display_name": "splunk.header.custom",
      "documentation": "This setting enables looking for Record headers with these values and adding them to each event if present. Multiple headers are separated by comma. For example:custom_header_1,custom_header_2,custom_header_3.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 105
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.header.host",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 106,
      "display_name": "splunk.header.host",
      "documentation": "Header to use for Splunk Header Host.Type: stringDefault: splunk.header.hostImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 106
      },
      "default": "splunk.header.hostimportance: medium"
    },
    {
      "name": "splunk.header.index",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 107,
      "display_name": "splunk.header.index",
      "documentation": "Header to use for Splunk Header Index.Type: stringDefault: splunk.header.indexImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 107
      },
      "default": "splunk.header.indeximportance: medium"
    },
    {
      "name": "splunk.header.source",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 108,
      "display_name": "splunk.header.source",
      "documentation": "Header to use for Splunk Header Source.Type: stringDefault: splunk.header.sourceImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 108
      },
      "default": "splunk.header.sourceimportance: medium"
    },
    {
      "name": "splunk.header.sourcetype",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 109,
      "display_name": "splunk.header.sourcetype",
      "documentation": "Header to use for Splunk Header Sourcetype.Type: stringDefault: splunk.header.sourcetypeImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 109
      },
      "default": "splunk.header.sourcetypeimportance: medium"
    },
    {
      "name": "splunk.header.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 110,
      "display_name": "splunk.header.support",
      "documentation": "This setting enables Kafka Record headers to be used for meta data override.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 110
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 111,
      "display_name": "splunk.hec.ack.enabled",
      "documentation": "When set totrue, the connector polls event ACKs for POST events before check-pointing the Kafka offsets. This setting enables guaranteed delivery and prevents data loss but may result in lower overall throughput.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 111
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.interval",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 112,
      "display_name": "splunk.hec.ack.poll.interval",
      "documentation": "Controls the event ACKs polling interval. This setting is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this setting is10seconds.Type: intDefault: 10Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 112
      },
      "default": "10importance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 113,
      "display_name": "splunk.hec.ack.poll.threads",
      "documentation": "Controls how many threads should be spawned to poll event ACKs. This setting is used for performance tuning and is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this is set to2.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 113
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.backoff.threshhold.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 114,
      "display_name": "splunk.hec.backoff.threshhold.seconds",
      "documentation": "The amount of time the connector waits before attempting to resend failed events to Splunk.Type: intDefault: 60Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 114
      },
      "default": "60importance: medium"
    },
    {
      "name": "splunk.hec.event.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 115,
      "display_name": "splunk.hec.event.timeout",
      "documentation": "This setting determines how long the connector will wait for an event to be acknowledged before timing out and attempting to resend the event. This setting is applicable whensplunk.hec.ack.enabledis set totrue. By default, this is set to300seconds.Type: intDefault: 300Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 115
      },
      "default": "300importance: medium"
    },
    {
      "name": "splunk.hec.http.keepalive",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 116,
      "display_name": "splunk.hec.http.keepalive",
      "documentation": "This setting enables or disablesHTTP connection keep-alive. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 116
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.max.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 117,
      "display_name": "splunk.hec.max.batch.size",
      "documentation": "The maximum batch size when posting events to Splunk. The size is the actual number of Kafka records, not the byte size. By default, this is set to500.Type: intDefault: 500Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 117
      },
      "default": "500importance: medium"
    },
    {
      "name": "splunk.hec.max.http.connection.per.channel",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 118,
      "display_name": "splunk.hec.max.http.connection.per.channel",
      "documentation": "The maximum number of HTTP connections pooled for one HEC Channel when posting events to Splunk.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 118
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.max.outstanding.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 119,
      "display_name": "splunk.hec.max.outstanding.events",
      "documentation": "The maximum amount of unacknowledged events kept in memory by the connector. When the threshold is exceeded, a back pressure event is triggered to slow the collection of events. By default, this threshold is set to1000000events.Type: intDefault: 1000000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 119
      },
      "default": "1000000importance: medium"
    },
    {
      "name": "splunk.hec.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 120,
      "display_name": "splunk.hec.max.retries",
      "documentation": "The maximum number of retries for a failed batch before the task is killed. When set to-1(the default) the connector retries indefinitely.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 120
      },
      "default": "-1importance: medium"
    },
    {
      "name": "splunk.hec.raw",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 121,
      "display_name": "splunk.hec.raw",
      "documentation": "Enable this setting to ingest data using the/rawHEC endpoint instead of the/eventHEC endpoint. By default, this setting isfalseand the/eventHEC endpoint is used.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 121
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.raw.line.breaker",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 122,
      "display_name": "splunk.hec.raw.line.breaker",
      "documentation": "This setting is used to specify a custom line breaker to help Splunk separate events correctly. For example, you can specify#####as a special line breaker and Splunk will split events on those characters. This is only applicable whensplunk.hec.rawis set totrue.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 122
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.ssl.validate.certs",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 123,
      "display_name": "splunk.hec.ssl.validate.certs",
      "documentation": "Enables or disables HTTPS certification validation. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 123
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.use.record.timestamp",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 124,
      "display_name": "splunk.hec.use.record.timestamp",
      "documentation": "When set totrue, the timestamp is retrieved from the Kafka record and passed to Splunk as a HEC meta-data override. This indexes events in Splunk with the record timestamp. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 124
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.indexes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 125,
      "display_name": "splunk.indexes",
      "documentation": "Splunk index names for Kafka topic data separated by a comma for multiple topics to indexers. Example: \u00e2\u0080\u009cprod-index1,prod-index2,prod-index3\u00e2\u0080\u009dType: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 125
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sources",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 126,
      "display_name": "splunk.sources",
      "documentation": "Splunk event source metadata for Kafka topic data. The same configuration rules as indexes apply. If unconfigured, the default source binds to the HEC token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 126
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sourcetypes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 127,
      "display_name": "splunk.sourcetypes",
      "documentation": "Splunk event source type metadata for Kafka topic data. The same configuration rules as indexes apply here. If unconfigured, the default source binds to the HEC token. Only configure this when using the JSON Event endpoint (splunk.hec.raw=false).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 127
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.json.event.enrichment",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 128,
      "display_name": "splunk.hec.json.event.enrichment",
      "documentation": "This setting is used to enrich raw data with extra metadata fields. It contains a list of key value pairs separated by,. The configured enrichment metadata will be indexed along with raw event data by Splunk. This is only applicable to the/eventHEC endpoint (splunk.hec.raw=false). Data enrichment for the/eventHEC endpoint is only available in Splunk Enterprise 6.5 and above. By default, this setting is empty.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 128
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "splunk.hec.json.event.formatted",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 129,
      "display_name": "splunk.hec.json.event.formatted",
      "documentation": "This setting ensures events are preformatted into theproper HEC JSON formatand have metadata and event data so that they are indexed correctly by Splunk. Set this property totruefor events that are already in HEC format.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 129
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.socket.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 130,
      "display_name": "splunk.hec.socket.timeout",
      "documentation": "The maximum duration in seconds to read/write data to network before an internal TCP Socket timeout occurs. By default, this is set to 60 seconds.Type: intDefault: 60Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 130
      },
      "default": "60importance: low"
    },
    {
      "name": "splunk.hec.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 131,
      "display_name": "splunk.hec.threads",
      "documentation": "Controls how many threads are spawned to perform data injection through HEC in a single connector task.Type: intDefault: 1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 131
      },
      "default": "1importance: low"
    },
    {
      "name": "splunk.hec.track.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 132,
      "display_name": "splunk.hec.track.data",
      "documentation": "When set totrue, data loss and data injection latency metadata will be indexed along with raw data. This setting only works in conjunction with/eventHEC endpoint (splunk.hec.raw=false).Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 132
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.token",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 133,
      "display_name": "splunk.hec.token",
      "documentation": "Splunk Http Event Collector (HEC) token.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 133
      }
    },
    {
      "name": "splunk.hec.uri",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 134,
      "display_name": "splunk.hec.uri",
      "documentation": "Splunk HEC URIs. Either a list of FQDNs or IPs of all Splunk indexers, separated with a,, or a load balancer. The connector load balances to indexers using round robin. Splunk Connector round robins to this list of indexers:https://hec1.splunk.com:8088,https://hec2.splunk.com:8088,https://hec3.splunk.com:8088Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 134
      }
    },
    {
      "name": "splunk.hec.ssl.trust.store.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 135,
      "display_name": "splunk.hec.ssl.trust.store.password",
      "documentation": "Password for the trust store.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 135
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "splunk.hec.ssl.trust.store.path",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 136,
      "display_name": "splunk.hec.ssl.trust.store.path",
      "documentation": "Path on the local disk to the certificate trust store.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 136
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "splunk.hec.total.channels",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 137,
      "display_name": "splunk.hec.total.channels",
      "documentation": "Total HEC Channels used to post events to Splunk. When enabling HEC ACK, setting to the same or 2X number of indexers is generally good.Type: intDefault: 2Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 137
      },
      "default": "2importance: high"
    },
    {
      "name": "splunk.header.custom",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 138,
      "display_name": "splunk.header.custom",
      "documentation": "This setting enables looking for Record headers with these values and adding them to each event if present. Multiple headers are separated by comma. For example:custom_header_1,custom_header_2,custom_header_3.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 138
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.header.host",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 139,
      "display_name": "splunk.header.host",
      "documentation": "Header to use for Splunk Header Host.Type: stringDefault: splunk.header.hostImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 139
      },
      "default": "splunk.header.hostimportance: medium"
    },
    {
      "name": "splunk.header.index",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 140,
      "display_name": "splunk.header.index",
      "documentation": "Header to use for Splunk Header Index.Type: stringDefault: splunk.header.indexImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 140
      },
      "default": "splunk.header.indeximportance: medium"
    },
    {
      "name": "splunk.header.source",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 141,
      "display_name": "splunk.header.source",
      "documentation": "Header to use for Splunk Header Source.Type: stringDefault: splunk.header.sourceImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 141
      },
      "default": "splunk.header.sourceimportance: medium"
    },
    {
      "name": "splunk.header.sourcetype",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 142,
      "display_name": "splunk.header.sourcetype",
      "documentation": "Header to use for Splunk Header Sourcetype.Type: stringDefault: splunk.header.sourcetypeImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 142
      },
      "default": "splunk.header.sourcetypeimportance: medium"
    },
    {
      "name": "splunk.header.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 143,
      "display_name": "splunk.header.support",
      "documentation": "This setting enables Kafka Record headers to be used for meta data override.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 143
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 144,
      "display_name": "splunk.hec.ack.enabled",
      "documentation": "When set totrue, the connector polls event ACKs for POST events before check-pointing the Kafka offsets. This setting enables guaranteed delivery and prevents data loss but may result in lower overall throughput.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 144
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.interval",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 145,
      "display_name": "splunk.hec.ack.poll.interval",
      "documentation": "Controls the event ACKs polling interval. This setting is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this setting is10seconds.Type: intDefault: 10Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 145
      },
      "default": "10importance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 146,
      "display_name": "splunk.hec.ack.poll.threads",
      "documentation": "Controls how many threads should be spawned to poll event ACKs. This setting is used for performance tuning and is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this is set to2.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 146
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.backoff.threshhold.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 147,
      "display_name": "splunk.hec.backoff.threshhold.seconds",
      "documentation": "The amount of time the connector waits before attempting to resend failed events to Splunk.Type: intDefault: 60Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 147
      },
      "default": "60importance: medium"
    },
    {
      "name": "splunk.hec.event.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 148,
      "display_name": "splunk.hec.event.timeout",
      "documentation": "This setting determines how long the connector will wait for an event to be acknowledged before timing out and attempting to resend the event. This setting is applicable whensplunk.hec.ack.enabledis set totrue. By default, this is set to300seconds.Type: intDefault: 300Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 148
      },
      "default": "300importance: medium"
    },
    {
      "name": "splunk.hec.http.keepalive",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 149,
      "display_name": "splunk.hec.http.keepalive",
      "documentation": "This setting enables or disablesHTTP connection keep-alive. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 149
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.max.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 150,
      "display_name": "splunk.hec.max.batch.size",
      "documentation": "The maximum batch size when posting events to Splunk. The size is the actual number of Kafka records, not the byte size. By default, this is set to500.Type: intDefault: 500Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 150
      },
      "default": "500importance: medium"
    },
    {
      "name": "splunk.hec.max.http.connection.per.channel",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 151,
      "display_name": "splunk.hec.max.http.connection.per.channel",
      "documentation": "The maximum number of HTTP connections pooled for one HEC Channel when posting events to Splunk.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 151
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.max.outstanding.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 152,
      "display_name": "splunk.hec.max.outstanding.events",
      "documentation": "The maximum amount of unacknowledged events kept in memory by the connector. When the threshold is exceeded, a back pressure event is triggered to slow the collection of events. By default, this threshold is set to1000000events.Type: intDefault: 1000000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 152
      },
      "default": "1000000importance: medium"
    },
    {
      "name": "splunk.hec.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 153,
      "display_name": "splunk.hec.max.retries",
      "documentation": "The maximum number of retries for a failed batch before the task is killed. When set to-1(the default) the connector retries indefinitely.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 153
      },
      "default": "-1importance: medium"
    },
    {
      "name": "splunk.hec.raw",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 154,
      "display_name": "splunk.hec.raw",
      "documentation": "Enable this setting to ingest data using the/rawHEC endpoint instead of the/eventHEC endpoint. By default, this setting isfalseand the/eventHEC endpoint is used.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 154
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.raw.line.breaker",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 155,
      "display_name": "splunk.hec.raw.line.breaker",
      "documentation": "This setting is used to specify a custom line breaker to help Splunk separate events correctly. For example, you can specify#####as a special line breaker and Splunk will split events on those characters. This is only applicable whensplunk.hec.rawis set totrue.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 155
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.ssl.validate.certs",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 156,
      "display_name": "splunk.hec.ssl.validate.certs",
      "documentation": "Enables or disables HTTPS certification validation. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 156
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.use.record.timestamp",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 157,
      "display_name": "splunk.hec.use.record.timestamp",
      "documentation": "When set totrue, the timestamp is retrieved from the Kafka record and passed to Splunk as a HEC meta-data override. This indexes events in Splunk with the record timestamp. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 157
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.indexes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 158,
      "display_name": "splunk.indexes",
      "documentation": "Splunk index names for Kafka topic data separated by a comma for multiple topics to indexers. Example: \u00e2\u0080\u009cprod-index1,prod-index2,prod-index3\u00e2\u0080\u009dType: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 158
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sources",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 159,
      "display_name": "splunk.sources",
      "documentation": "Splunk event source metadata for Kafka topic data. The same configuration rules as indexes apply. If unconfigured, the default source binds to the HEC token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 159
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sourcetypes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 160,
      "display_name": "splunk.sourcetypes",
      "documentation": "Splunk event source type metadata for Kafka topic data. The same configuration rules as indexes apply here. If unconfigured, the default source binds to the HEC token. Only configure this when using the JSON Event endpoint (splunk.hec.raw=false).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 160
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.json.event.enrichment",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 161,
      "display_name": "splunk.hec.json.event.enrichment",
      "documentation": "This setting is used to enrich raw data with extra metadata fields. It contains a list of key value pairs separated by,. The configured enrichment metadata will be indexed along with raw event data by Splunk. This is only applicable to the/eventHEC endpoint (splunk.hec.raw=false). Data enrichment for the/eventHEC endpoint is only available in Splunk Enterprise 6.5 and above. By default, this setting is empty.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 161
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "splunk.hec.json.event.formatted",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 162,
      "display_name": "splunk.hec.json.event.formatted",
      "documentation": "This setting ensures events are preformatted into theproper HEC JSON formatand have metadata and event data so that they are indexed correctly by Splunk. Set this property totruefor events that are already in HEC format.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 162
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.socket.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 163,
      "display_name": "splunk.hec.socket.timeout",
      "documentation": "The maximum duration in seconds to read/write data to network before an internal TCP Socket timeout occurs. By default, this is set to 60 seconds.Type: intDefault: 60Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 163
      },
      "default": "60importance: low"
    },
    {
      "name": "splunk.hec.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 164,
      "display_name": "splunk.hec.threads",
      "documentation": "Controls how many threads are spawned to perform data injection through HEC in a single connector task.Type: intDefault: 1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 164
      },
      "default": "1importance: low"
    },
    {
      "name": "splunk.hec.track.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 165,
      "display_name": "splunk.hec.track.data",
      "documentation": "When set totrue, data loss and data injection latency metadata will be indexed along with raw data. This setting only works in conjunction with/eventHEC endpoint (splunk.hec.raw=false).Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 165
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.token",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 166,
      "display_name": "splunk.hec.token",
      "documentation": "Splunk Http Event Collector (HEC) token.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 166
      }
    },
    {
      "name": "splunk.hec.uri",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 167,
      "display_name": "splunk.hec.uri",
      "documentation": "Splunk HEC URIs. Either a list of FQDNs or IPs of all Splunk indexers, separated with a,, or a load balancer. The connector load balances to indexers using round robin. Splunk Connector round robins to this list of indexers:https://hec1.splunk.com:8088,https://hec2.splunk.com:8088,https://hec3.splunk.com:8088Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 167
      }
    },
    {
      "name": "splunk.hec.ssl.trust.store.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 168,
      "display_name": "splunk.hec.ssl.trust.store.password",
      "documentation": "Password for the trust store.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 168
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "splunk.hec.ssl.trust.store.path",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 169,
      "display_name": "splunk.hec.ssl.trust.store.path",
      "documentation": "Path on the local disk to the certificate trust store.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 169
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "splunk.hec.total.channels",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 170,
      "display_name": "splunk.hec.total.channels",
      "documentation": "Total HEC Channels used to post events to Splunk. When enabling HEC ACK, setting to the same or 2X number of indexers is generally good.Type: intDefault: 2Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 170
      },
      "default": "2importance: high"
    },
    {
      "name": "splunk.header.custom",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 171,
      "display_name": "splunk.header.custom",
      "documentation": "This setting enables looking for Record headers with these values and adding them to each event if present. Multiple headers are separated by comma. For example:custom_header_1,custom_header_2,custom_header_3.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 171
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.header.host",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 172,
      "display_name": "splunk.header.host",
      "documentation": "Header to use for Splunk Header Host.Type: stringDefault: splunk.header.hostImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 172
      },
      "default": "splunk.header.hostimportance: medium"
    },
    {
      "name": "splunk.header.index",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 173,
      "display_name": "splunk.header.index",
      "documentation": "Header to use for Splunk Header Index.Type: stringDefault: splunk.header.indexImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 173
      },
      "default": "splunk.header.indeximportance: medium"
    },
    {
      "name": "splunk.header.source",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 174,
      "display_name": "splunk.header.source",
      "documentation": "Header to use for Splunk Header Source.Type: stringDefault: splunk.header.sourceImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 174
      },
      "default": "splunk.header.sourceimportance: medium"
    },
    {
      "name": "splunk.header.sourcetype",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 175,
      "display_name": "splunk.header.sourcetype",
      "documentation": "Header to use for Splunk Header Sourcetype.Type: stringDefault: splunk.header.sourcetypeImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 175
      },
      "default": "splunk.header.sourcetypeimportance: medium"
    },
    {
      "name": "splunk.header.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 176,
      "display_name": "splunk.header.support",
      "documentation": "This setting enables Kafka Record headers to be used for meta data override.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 176
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 177,
      "display_name": "splunk.hec.ack.enabled",
      "documentation": "When set totrue, the connector polls event ACKs for POST events before check-pointing the Kafka offsets. This setting enables guaranteed delivery and prevents data loss but may result in lower overall throughput.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 177
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.interval",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 178,
      "display_name": "splunk.hec.ack.poll.interval",
      "documentation": "Controls the event ACKs polling interval. This setting is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this setting is10seconds.Type: intDefault: 10Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 178
      },
      "default": "10importance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 179,
      "display_name": "splunk.hec.ack.poll.threads",
      "documentation": "Controls how many threads should be spawned to poll event ACKs. This setting is used for performance tuning and is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this is set to2.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 179
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.backoff.threshhold.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 180,
      "display_name": "splunk.hec.backoff.threshhold.seconds",
      "documentation": "The amount of time the connector waits before attempting to resend failed events to Splunk.Type: intDefault: 60Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 180
      },
      "default": "60importance: medium"
    },
    {
      "name": "splunk.hec.event.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 181,
      "display_name": "splunk.hec.event.timeout",
      "documentation": "This setting determines how long the connector will wait for an event to be acknowledged before timing out and attempting to resend the event. This setting is applicable whensplunk.hec.ack.enabledis set totrue. By default, this is set to300seconds.Type: intDefault: 300Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 181
      },
      "default": "300importance: medium"
    },
    {
      "name": "splunk.hec.http.keepalive",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 182,
      "display_name": "splunk.hec.http.keepalive",
      "documentation": "This setting enables or disablesHTTP connection keep-alive. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 182
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.max.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 183,
      "display_name": "splunk.hec.max.batch.size",
      "documentation": "The maximum batch size when posting events to Splunk. The size is the actual number of Kafka records, not the byte size. By default, this is set to500.Type: intDefault: 500Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 183
      },
      "default": "500importance: medium"
    },
    {
      "name": "splunk.hec.max.http.connection.per.channel",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 184,
      "display_name": "splunk.hec.max.http.connection.per.channel",
      "documentation": "The maximum number of HTTP connections pooled for one HEC Channel when posting events to Splunk.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 184
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.max.outstanding.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 185,
      "display_name": "splunk.hec.max.outstanding.events",
      "documentation": "The maximum amount of unacknowledged events kept in memory by the connector. When the threshold is exceeded, a back pressure event is triggered to slow the collection of events. By default, this threshold is set to1000000events.Type: intDefault: 1000000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 185
      },
      "default": "1000000importance: medium"
    },
    {
      "name": "splunk.hec.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 186,
      "display_name": "splunk.hec.max.retries",
      "documentation": "The maximum number of retries for a failed batch before the task is killed. When set to-1(the default) the connector retries indefinitely.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 186
      },
      "default": "-1importance: medium"
    },
    {
      "name": "splunk.hec.raw",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 187,
      "display_name": "splunk.hec.raw",
      "documentation": "Enable this setting to ingest data using the/rawHEC endpoint instead of the/eventHEC endpoint. By default, this setting isfalseand the/eventHEC endpoint is used.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 187
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.raw.line.breaker",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 188,
      "display_name": "splunk.hec.raw.line.breaker",
      "documentation": "This setting is used to specify a custom line breaker to help Splunk separate events correctly. For example, you can specify#####as a special line breaker and Splunk will split events on those characters. This is only applicable whensplunk.hec.rawis set totrue.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 188
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.ssl.validate.certs",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 189,
      "display_name": "splunk.hec.ssl.validate.certs",
      "documentation": "Enables or disables HTTPS certification validation. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 189
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.use.record.timestamp",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 190,
      "display_name": "splunk.hec.use.record.timestamp",
      "documentation": "When set totrue, the timestamp is retrieved from the Kafka record and passed to Splunk as a HEC meta-data override. This indexes events in Splunk with the record timestamp. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 190
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.indexes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 191,
      "display_name": "splunk.indexes",
      "documentation": "Splunk index names for Kafka topic data separated by a comma for multiple topics to indexers. Example: \u00e2\u0080\u009cprod-index1,prod-index2,prod-index3\u00e2\u0080\u009dType: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 191
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sources",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 192,
      "display_name": "splunk.sources",
      "documentation": "Splunk event source metadata for Kafka topic data. The same configuration rules as indexes apply. If unconfigured, the default source binds to the HEC token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 192
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sourcetypes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 193,
      "display_name": "splunk.sourcetypes",
      "documentation": "Splunk event source type metadata for Kafka topic data. The same configuration rules as indexes apply here. If unconfigured, the default source binds to the HEC token. Only configure this when using the JSON Event endpoint (splunk.hec.raw=false).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 193
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.json.event.enrichment",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 194,
      "display_name": "splunk.hec.json.event.enrichment",
      "documentation": "This setting is used to enrich raw data with extra metadata fields. It contains a list of key value pairs separated by,. The configured enrichment metadata will be indexed along with raw event data by Splunk. This is only applicable to the/eventHEC endpoint (splunk.hec.raw=false). Data enrichment for the/eventHEC endpoint is only available in Splunk Enterprise 6.5 and above. By default, this setting is empty.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 194
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "splunk.hec.json.event.formatted",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 195,
      "display_name": "splunk.hec.json.event.formatted",
      "documentation": "This setting ensures events are preformatted into theproper HEC JSON formatand have metadata and event data so that they are indexed correctly by Splunk. Set this property totruefor events that are already in HEC format.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 195
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.socket.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 196,
      "display_name": "splunk.hec.socket.timeout",
      "documentation": "The maximum duration in seconds to read/write data to network before an internal TCP Socket timeout occurs. By default, this is set to 60 seconds.Type: intDefault: 60Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 196
      },
      "default": "60importance: low"
    },
    {
      "name": "splunk.hec.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 197,
      "display_name": "splunk.hec.threads",
      "documentation": "Controls how many threads are spawned to perform data injection through HEC in a single connector task.Type: intDefault: 1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 197
      },
      "default": "1importance: low"
    },
    {
      "name": "splunk.hec.track.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 198,
      "display_name": "splunk.hec.track.data",
      "documentation": "When set totrue, data loss and data injection latency metadata will be indexed along with raw data. This setting only works in conjunction with/eventHEC endpoint (splunk.hec.raw=false).Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 198
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.token",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 199,
      "display_name": "splunk.hec.token",
      "documentation": "Splunk Http Event Collector (HEC) token.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 199
      }
    },
    {
      "name": "splunk.hec.uri",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 200,
      "display_name": "splunk.hec.uri",
      "documentation": "Splunk HEC URIs. Either a list of FQDNs or IPs of all Splunk indexers, separated with a,, or a load balancer. The connector load balances to indexers using round robin. Splunk Connector round robins to this list of indexers:https://hec1.splunk.com:8088,https://hec2.splunk.com:8088,https://hec3.splunk.com:8088Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 200
      }
    },
    {
      "name": "splunk.hec.ssl.trust.store.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 201,
      "display_name": "splunk.hec.ssl.trust.store.password",
      "documentation": "Password for the trust store.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 201
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "splunk.hec.ssl.trust.store.path",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 202,
      "display_name": "splunk.hec.ssl.trust.store.path",
      "documentation": "Path on the local disk to the certificate trust store.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 202
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "splunk.hec.total.channels",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 203,
      "display_name": "splunk.hec.total.channels",
      "documentation": "Total HEC Channels used to post events to Splunk. When enabling HEC ACK, setting to the same or 2X number of indexers is generally good.Type: intDefault: 2Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 203
      },
      "default": "2importance: high"
    },
    {
      "name": "splunk.header.custom",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 204,
      "display_name": "splunk.header.custom",
      "documentation": "This setting enables looking for Record headers with these values and adding them to each event if present. Multiple headers are separated by comma. For example:custom_header_1,custom_header_2,custom_header_3.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 204
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.header.host",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 205,
      "display_name": "splunk.header.host",
      "documentation": "Header to use for Splunk Header Host.Type: stringDefault: splunk.header.hostImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 205
      },
      "default": "splunk.header.hostimportance: medium"
    },
    {
      "name": "splunk.header.index",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 206,
      "display_name": "splunk.header.index",
      "documentation": "Header to use for Splunk Header Index.Type: stringDefault: splunk.header.indexImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 206
      },
      "default": "splunk.header.indeximportance: medium"
    },
    {
      "name": "splunk.header.source",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 207,
      "display_name": "splunk.header.source",
      "documentation": "Header to use for Splunk Header Source.Type: stringDefault: splunk.header.sourceImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 207
      },
      "default": "splunk.header.sourceimportance: medium"
    },
    {
      "name": "splunk.header.sourcetype",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 208,
      "display_name": "splunk.header.sourcetype",
      "documentation": "Header to use for Splunk Header Sourcetype.Type: stringDefault: splunk.header.sourcetypeImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 208
      },
      "default": "splunk.header.sourcetypeimportance: medium"
    },
    {
      "name": "splunk.header.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 209,
      "display_name": "splunk.header.support",
      "documentation": "This setting enables Kafka Record headers to be used for meta data override.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 209
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 210,
      "display_name": "splunk.hec.ack.enabled",
      "documentation": "When set totrue, the connector polls event ACKs for POST events before check-pointing the Kafka offsets. This setting enables guaranteed delivery and prevents data loss but may result in lower overall throughput.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 210
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.interval",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 211,
      "display_name": "splunk.hec.ack.poll.interval",
      "documentation": "Controls the event ACKs polling interval. This setting is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this setting is10seconds.Type: intDefault: 10Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 211
      },
      "default": "10importance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 212,
      "display_name": "splunk.hec.ack.poll.threads",
      "documentation": "Controls how many threads should be spawned to poll event ACKs. This setting is used for performance tuning and is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this is set to2.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 212
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.backoff.threshhold.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 213,
      "display_name": "splunk.hec.backoff.threshhold.seconds",
      "documentation": "The amount of time the connector waits before attempting to resend failed events to Splunk.Type: intDefault: 60Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 213
      },
      "default": "60importance: medium"
    },
    {
      "name": "splunk.hec.event.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 214,
      "display_name": "splunk.hec.event.timeout",
      "documentation": "This setting determines how long the connector will wait for an event to be acknowledged before timing out and attempting to resend the event. This setting is applicable whensplunk.hec.ack.enabledis set totrue. By default, this is set to300seconds.Type: intDefault: 300Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 214
      },
      "default": "300importance: medium"
    },
    {
      "name": "splunk.hec.http.keepalive",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 215,
      "display_name": "splunk.hec.http.keepalive",
      "documentation": "This setting enables or disablesHTTP connection keep-alive. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 215
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.max.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 216,
      "display_name": "splunk.hec.max.batch.size",
      "documentation": "The maximum batch size when posting events to Splunk. The size is the actual number of Kafka records, not the byte size. By default, this is set to500.Type: intDefault: 500Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 216
      },
      "default": "500importance: medium"
    },
    {
      "name": "splunk.hec.max.http.connection.per.channel",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 217,
      "display_name": "splunk.hec.max.http.connection.per.channel",
      "documentation": "The maximum number of HTTP connections pooled for one HEC Channel when posting events to Splunk.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 217
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.max.outstanding.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 218,
      "display_name": "splunk.hec.max.outstanding.events",
      "documentation": "The maximum amount of unacknowledged events kept in memory by the connector. When the threshold is exceeded, a back pressure event is triggered to slow the collection of events. By default, this threshold is set to1000000events.Type: intDefault: 1000000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 218
      },
      "default": "1000000importance: medium"
    },
    {
      "name": "splunk.hec.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 219,
      "display_name": "splunk.hec.max.retries",
      "documentation": "The maximum number of retries for a failed batch before the task is killed. When set to-1(the default) the connector retries indefinitely.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 219
      },
      "default": "-1importance: medium"
    },
    {
      "name": "splunk.hec.raw",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 220,
      "display_name": "splunk.hec.raw",
      "documentation": "Enable this setting to ingest data using the/rawHEC endpoint instead of the/eventHEC endpoint. By default, this setting isfalseand the/eventHEC endpoint is used.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 220
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.raw.line.breaker",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 221,
      "display_name": "splunk.hec.raw.line.breaker",
      "documentation": "This setting is used to specify a custom line breaker to help Splunk separate events correctly. For example, you can specify#####as a special line breaker and Splunk will split events on those characters. This is only applicable whensplunk.hec.rawis set totrue.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 221
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.ssl.validate.certs",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 222,
      "display_name": "splunk.hec.ssl.validate.certs",
      "documentation": "Enables or disables HTTPS certification validation. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 222
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.use.record.timestamp",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 223,
      "display_name": "splunk.hec.use.record.timestamp",
      "documentation": "When set totrue, the timestamp is retrieved from the Kafka record and passed to Splunk as a HEC meta-data override. This indexes events in Splunk with the record timestamp. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 223
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.indexes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 224,
      "display_name": "splunk.indexes",
      "documentation": "Splunk index names for Kafka topic data separated by a comma for multiple topics to indexers. Example: \u00e2\u0080\u009cprod-index1,prod-index2,prod-index3\u00e2\u0080\u009dType: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 224
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sources",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 225,
      "display_name": "splunk.sources",
      "documentation": "Splunk event source metadata for Kafka topic data. The same configuration rules as indexes apply. If unconfigured, the default source binds to the HEC token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 225
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sourcetypes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 226,
      "display_name": "splunk.sourcetypes",
      "documentation": "Splunk event source type metadata for Kafka topic data. The same configuration rules as indexes apply here. If unconfigured, the default source binds to the HEC token. Only configure this when using the JSON Event endpoint (splunk.hec.raw=false).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 226
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.json.event.enrichment",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 227,
      "display_name": "splunk.hec.json.event.enrichment",
      "documentation": "This setting is used to enrich raw data with extra metadata fields. It contains a list of key value pairs separated by,. The configured enrichment metadata will be indexed along with raw event data by Splunk. This is only applicable to the/eventHEC endpoint (splunk.hec.raw=false). Data enrichment for the/eventHEC endpoint is only available in Splunk Enterprise 6.5 and above. By default, this setting is empty.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 227
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "splunk.hec.json.event.formatted",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 228,
      "display_name": "splunk.hec.json.event.formatted",
      "documentation": "This setting ensures events are preformatted into theproper HEC JSON formatand have metadata and event data so that they are indexed correctly by Splunk. Set this property totruefor events that are already in HEC format.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 228
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.socket.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 229,
      "display_name": "splunk.hec.socket.timeout",
      "documentation": "The maximum duration in seconds to read/write data to network before an internal TCP Socket timeout occurs. By default, this is set to 60 seconds.Type: intDefault: 60Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 229
      },
      "default": "60importance: low"
    },
    {
      "name": "splunk.hec.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 230,
      "display_name": "splunk.hec.threads",
      "documentation": "Controls how many threads are spawned to perform data injection through HEC in a single connector task.Type: intDefault: 1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 230
      },
      "default": "1importance: low"
    },
    {
      "name": "splunk.hec.track.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 231,
      "display_name": "splunk.hec.track.data",
      "documentation": "When set totrue, data loss and data injection latency metadata will be indexed along with raw data. This setting only works in conjunction with/eventHEC endpoint (splunk.hec.raw=false).Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 231
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.token",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 232,
      "display_name": "splunk.hec.token",
      "documentation": "Splunk Http Event Collector (HEC) token.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 232
      }
    },
    {
      "name": "splunk.hec.uri",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 233,
      "display_name": "splunk.hec.uri",
      "documentation": "Splunk HEC URIs. Either a list of FQDNs or IPs of all Splunk indexers, separated with a,, or a load balancer. The connector load balances to indexers using round robin. Splunk Connector round robins to this list of indexers:https://hec1.splunk.com:8088,https://hec2.splunk.com:8088,https://hec3.splunk.com:8088Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 233
      }
    },
    {
      "name": "splunk.hec.ssl.trust.store.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 234,
      "display_name": "splunk.hec.ssl.trust.store.password",
      "documentation": "Password for the trust store.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 234
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "splunk.hec.ssl.trust.store.path",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 235,
      "display_name": "splunk.hec.ssl.trust.store.path",
      "documentation": "Path on the local disk to the certificate trust store.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 235
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "splunk.hec.total.channels",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 236,
      "display_name": "splunk.hec.total.channels",
      "documentation": "Total HEC Channels used to post events to Splunk. When enabling HEC ACK, setting to the same or 2X number of indexers is generally good.Type: intDefault: 2Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 236
      },
      "default": "2importance: high"
    },
    {
      "name": "splunk.header.custom",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 237,
      "display_name": "splunk.header.custom",
      "documentation": "This setting enables looking for Record headers with these values and adding them to each event if present. Multiple headers are separated by comma. For example:custom_header_1,custom_header_2,custom_header_3.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 237
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.header.host",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 238,
      "display_name": "splunk.header.host",
      "documentation": "Header to use for Splunk Header Host.Type: stringDefault: splunk.header.hostImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 238
      },
      "default": "splunk.header.hostimportance: medium"
    },
    {
      "name": "splunk.header.index",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 239,
      "display_name": "splunk.header.index",
      "documentation": "Header to use for Splunk Header Index.Type: stringDefault: splunk.header.indexImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 239
      },
      "default": "splunk.header.indeximportance: medium"
    },
    {
      "name": "splunk.header.source",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 240,
      "display_name": "splunk.header.source",
      "documentation": "Header to use for Splunk Header Source.Type: stringDefault: splunk.header.sourceImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 240
      },
      "default": "splunk.header.sourceimportance: medium"
    },
    {
      "name": "splunk.header.sourcetype",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 241,
      "display_name": "splunk.header.sourcetype",
      "documentation": "Header to use for Splunk Header Sourcetype.Type: stringDefault: splunk.header.sourcetypeImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 241
      },
      "default": "splunk.header.sourcetypeimportance: medium"
    },
    {
      "name": "splunk.header.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 242,
      "display_name": "splunk.header.support",
      "documentation": "This setting enables Kafka Record headers to be used for meta data override.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 242
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 243,
      "display_name": "splunk.hec.ack.enabled",
      "documentation": "When set totrue, the connector polls event ACKs for POST events before check-pointing the Kafka offsets. This setting enables guaranteed delivery and prevents data loss but may result in lower overall throughput.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 243
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.interval",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 244,
      "display_name": "splunk.hec.ack.poll.interval",
      "documentation": "Controls the event ACKs polling interval. This setting is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this setting is10seconds.Type: intDefault: 10Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 244
      },
      "default": "10importance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 245,
      "display_name": "splunk.hec.ack.poll.threads",
      "documentation": "Controls how many threads should be spawned to poll event ACKs. This setting is used for performance tuning and is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this is set to2.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 245
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.backoff.threshhold.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 246,
      "display_name": "splunk.hec.backoff.threshhold.seconds",
      "documentation": "The amount of time the connector waits before attempting to resend failed events to Splunk.Type: intDefault: 60Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 246
      },
      "default": "60importance: medium"
    },
    {
      "name": "splunk.hec.event.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 247,
      "display_name": "splunk.hec.event.timeout",
      "documentation": "This setting determines how long the connector will wait for an event to be acknowledged before timing out and attempting to resend the event. This setting is applicable whensplunk.hec.ack.enabledis set totrue. By default, this is set to300seconds.Type: intDefault: 300Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 247
      },
      "default": "300importance: medium"
    },
    {
      "name": "splunk.hec.http.keepalive",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 248,
      "display_name": "splunk.hec.http.keepalive",
      "documentation": "This setting enables or disablesHTTP connection keep-alive. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 248
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.max.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 249,
      "display_name": "splunk.hec.max.batch.size",
      "documentation": "The maximum batch size when posting events to Splunk. The size is the actual number of Kafka records, not the byte size. By default, this is set to500.Type: intDefault: 500Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 249
      },
      "default": "500importance: medium"
    },
    {
      "name": "splunk.hec.max.http.connection.per.channel",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 250,
      "display_name": "splunk.hec.max.http.connection.per.channel",
      "documentation": "The maximum number of HTTP connections pooled for one HEC Channel when posting events to Splunk.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 250
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.max.outstanding.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 251,
      "display_name": "splunk.hec.max.outstanding.events",
      "documentation": "The maximum amount of unacknowledged events kept in memory by the connector. When the threshold is exceeded, a back pressure event is triggered to slow the collection of events. By default, this threshold is set to1000000events.Type: intDefault: 1000000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 251
      },
      "default": "1000000importance: medium"
    },
    {
      "name": "splunk.hec.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 252,
      "display_name": "splunk.hec.max.retries",
      "documentation": "The maximum number of retries for a failed batch before the task is killed. When set to-1(the default) the connector retries indefinitely.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 252
      },
      "default": "-1importance: medium"
    },
    {
      "name": "splunk.hec.raw",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 253,
      "display_name": "splunk.hec.raw",
      "documentation": "Enable this setting to ingest data using the/rawHEC endpoint instead of the/eventHEC endpoint. By default, this setting isfalseand the/eventHEC endpoint is used.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 253
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.raw.line.breaker",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 254,
      "display_name": "splunk.hec.raw.line.breaker",
      "documentation": "This setting is used to specify a custom line breaker to help Splunk separate events correctly. For example, you can specify#####as a special line breaker and Splunk will split events on those characters. This is only applicable whensplunk.hec.rawis set totrue.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 254
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.ssl.validate.certs",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 255,
      "display_name": "splunk.hec.ssl.validate.certs",
      "documentation": "Enables or disables HTTPS certification validation. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 255
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.use.record.timestamp",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 256,
      "display_name": "splunk.hec.use.record.timestamp",
      "documentation": "When set totrue, the timestamp is retrieved from the Kafka record and passed to Splunk as a HEC meta-data override. This indexes events in Splunk with the record timestamp. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 256
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.indexes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 257,
      "display_name": "splunk.indexes",
      "documentation": "Splunk index names for Kafka topic data separated by a comma for multiple topics to indexers. Example: \u00e2\u0080\u009cprod-index1,prod-index2,prod-index3\u00e2\u0080\u009dType: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 257
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sources",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 258,
      "display_name": "splunk.sources",
      "documentation": "Splunk event source metadata for Kafka topic data. The same configuration rules as indexes apply. If unconfigured, the default source binds to the HEC token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 258
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sourcetypes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 259,
      "display_name": "splunk.sourcetypes",
      "documentation": "Splunk event source type metadata for Kafka topic data. The same configuration rules as indexes apply here. If unconfigured, the default source binds to the HEC token. Only configure this when using the JSON Event endpoint (splunk.hec.raw=false).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 259
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.json.event.enrichment",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 260,
      "display_name": "splunk.hec.json.event.enrichment",
      "documentation": "This setting is used to enrich raw data with extra metadata fields. It contains a list of key value pairs separated by,. The configured enrichment metadata will be indexed along with raw event data by Splunk. This is only applicable to the/eventHEC endpoint (splunk.hec.raw=false). Data enrichment for the/eventHEC endpoint is only available in Splunk Enterprise 6.5 and above. By default, this setting is empty.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 260
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "splunk.hec.json.event.formatted",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 261,
      "display_name": "splunk.hec.json.event.formatted",
      "documentation": "This setting ensures events are preformatted into theproper HEC JSON formatand have metadata and event data so that they are indexed correctly by Splunk. Set this property totruefor events that are already in HEC format.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 261
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.socket.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 262,
      "display_name": "splunk.hec.socket.timeout",
      "documentation": "The maximum duration in seconds to read/write data to network before an internal TCP Socket timeout occurs. By default, this is set to 60 seconds.Type: intDefault: 60Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 262
      },
      "default": "60importance: low"
    },
    {
      "name": "splunk.hec.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 263,
      "display_name": "splunk.hec.threads",
      "documentation": "Controls how many threads are spawned to perform data injection through HEC in a single connector task.Type: intDefault: 1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 263
      },
      "default": "1importance: low"
    },
    {
      "name": "splunk.hec.track.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 264,
      "display_name": "splunk.hec.track.data",
      "documentation": "When set totrue, data loss and data injection latency metadata will be indexed along with raw data. This setting only works in conjunction with/eventHEC endpoint (splunk.hec.raw=false).Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 264
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.token",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 265,
      "display_name": "splunk.hec.token",
      "documentation": "Splunk Http Event Collector (HEC) token.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 265
      }
    },
    {
      "name": "splunk.hec.uri",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 266,
      "display_name": "splunk.hec.uri",
      "documentation": "Splunk HEC URIs. Either a list of FQDNs or IPs of all Splunk indexers, separated with a,, or a load balancer. The connector load balances to indexers using round robin. Splunk Connector round robins to this list of indexers:https://hec1.splunk.com:8088,https://hec2.splunk.com:8088,https://hec3.splunk.com:8088Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 266
      }
    },
    {
      "name": "splunk.hec.ssl.trust.store.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 267,
      "display_name": "splunk.hec.ssl.trust.store.password",
      "documentation": "Password for the trust store.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 267
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "splunk.hec.ssl.trust.store.path",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 268,
      "display_name": "splunk.hec.ssl.trust.store.path",
      "documentation": "Path on the local disk to the certificate trust store.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 268
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "splunk.hec.total.channels",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "General",
      "order_in_group": 269,
      "display_name": "splunk.hec.total.channels",
      "documentation": "Total HEC Channels used to post events to Splunk. When enabling HEC ACK, setting to the same or 2X number of indexers is generally good.Type: intDefault: 2Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 269
      },
      "default": "2importance: high"
    },
    {
      "name": "splunk.header.custom",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 270,
      "display_name": "splunk.header.custom",
      "documentation": "This setting enables looking for Record headers with these values and adding them to each event if present. Multiple headers are separated by comma. For example:custom_header_1,custom_header_2,custom_header_3.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 270
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.header.host",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 271,
      "display_name": "splunk.header.host",
      "documentation": "Header to use for Splunk Header Host.Type: stringDefault: splunk.header.hostImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 271
      },
      "default": "splunk.header.hostimportance: medium"
    },
    {
      "name": "splunk.header.index",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 272,
      "display_name": "splunk.header.index",
      "documentation": "Header to use for Splunk Header Index.Type: stringDefault: splunk.header.indexImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 272
      },
      "default": "splunk.header.indeximportance: medium"
    },
    {
      "name": "splunk.header.source",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 273,
      "display_name": "splunk.header.source",
      "documentation": "Header to use for Splunk Header Source.Type: stringDefault: splunk.header.sourceImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 273
      },
      "default": "splunk.header.sourceimportance: medium"
    },
    {
      "name": "splunk.header.sourcetype",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 274,
      "display_name": "splunk.header.sourcetype",
      "documentation": "Header to use for Splunk Header Sourcetype.Type: stringDefault: splunk.header.sourcetypeImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 274
      },
      "default": "splunk.header.sourcetypeimportance: medium"
    },
    {
      "name": "splunk.header.support",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 275,
      "display_name": "splunk.header.support",
      "documentation": "This setting enables Kafka Record headers to be used for meta data override.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 275
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 276,
      "display_name": "splunk.hec.ack.enabled",
      "documentation": "When set totrue, the connector polls event ACKs for POST events before check-pointing the Kafka offsets. This setting enables guaranteed delivery and prevents data loss but may result in lower overall throughput.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 276
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.interval",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 277,
      "display_name": "splunk.hec.ack.poll.interval",
      "documentation": "Controls the event ACKs polling interval. This setting is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this setting is10seconds.Type: intDefault: 10Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 277
      },
      "default": "10importance: medium"
    },
    {
      "name": "splunk.hec.ack.poll.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 278,
      "display_name": "splunk.hec.ack.poll.threads",
      "documentation": "Controls how many threads should be spawned to poll event ACKs. This setting is used for performance tuning and is only applicable whensplunk.hec.ack.enabledis set totrue.  By default, this is set to2.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 278
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.backoff.threshhold.seconds",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 279,
      "display_name": "splunk.hec.backoff.threshhold.seconds",
      "documentation": "The amount of time the connector waits before attempting to resend failed events to Splunk.Type: intDefault: 60Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 279
      },
      "default": "60importance: medium"
    },
    {
      "name": "splunk.hec.event.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 280,
      "display_name": "splunk.hec.event.timeout",
      "documentation": "This setting determines how long the connector will wait for an event to be acknowledged before timing out and attempting to resend the event. This setting is applicable whensplunk.hec.ack.enabledis set totrue. By default, this is set to300seconds.Type: intDefault: 300Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 280
      },
      "default": "300importance: medium"
    },
    {
      "name": "splunk.hec.http.keepalive",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 281,
      "display_name": "splunk.hec.http.keepalive",
      "documentation": "This setting enables or disablesHTTP connection keep-alive. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 281
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.max.batch.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 282,
      "display_name": "splunk.hec.max.batch.size",
      "documentation": "The maximum batch size when posting events to Splunk. The size is the actual number of Kafka records, not the byte size. By default, this is set to500.Type: intDefault: 500Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 282
      },
      "default": "500importance: medium"
    },
    {
      "name": "splunk.hec.max.http.connection.per.channel",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 283,
      "display_name": "splunk.hec.max.http.connection.per.channel",
      "documentation": "The maximum number of HTTP connections pooled for one HEC Channel when posting events to Splunk.Type: intDefault: 2Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 283
      },
      "default": "2importance: medium"
    },
    {
      "name": "splunk.hec.max.outstanding.events",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 284,
      "display_name": "splunk.hec.max.outstanding.events",
      "documentation": "The maximum amount of unacknowledged events kept in memory by the connector. When the threshold is exceeded, a back pressure event is triggered to slow the collection of events. By default, this threshold is set to1000000events.Type: intDefault: 1000000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 284
      },
      "default": "1000000importance: medium"
    },
    {
      "name": "splunk.hec.max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 285,
      "display_name": "splunk.hec.max.retries",
      "documentation": "The maximum number of retries for a failed batch before the task is killed. When set to-1(the default) the connector retries indefinitely.Type: intDefault: -1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 285
      },
      "default": "-1importance: medium"
    },
    {
      "name": "splunk.hec.raw",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 286,
      "display_name": "splunk.hec.raw",
      "documentation": "Enable this setting to ingest data using the/rawHEC endpoint instead of the/eventHEC endpoint. By default, this setting isfalseand the/eventHEC endpoint is used.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 286
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "splunk.hec.raw.line.breaker",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 287,
      "display_name": "splunk.hec.raw.line.breaker",
      "documentation": "This setting is used to specify a custom line breaker to help Splunk separate events correctly. For example, you can specify#####as a special line breaker and Splunk will split events on those characters. This is only applicable whensplunk.hec.rawis set totrue.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 287
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.ssl.validate.certs",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 288,
      "display_name": "splunk.hec.ssl.validate.certs",
      "documentation": "Enables or disables HTTPS certification validation. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 288
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.hec.use.record.timestamp",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 289,
      "display_name": "splunk.hec.use.record.timestamp",
      "documentation": "When set totrue, the timestamp is retrieved from the Kafka record and passed to Splunk as a HEC meta-data override. This indexes events in Splunk with the record timestamp. By default, this is set totrue.Type: booleanDefault: trueImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 289
      },
      "default": "trueimportance: medium"
    },
    {
      "name": "splunk.indexes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 290,
      "display_name": "splunk.indexes",
      "documentation": "Splunk index names for Kafka topic data separated by a comma for multiple topics to indexers. Example: \u00e2\u0080\u009cprod-index1,prod-index2,prod-index3\u00e2\u0080\u009dType: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 290
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sources",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 291,
      "display_name": "splunk.sources",
      "documentation": "Splunk event source metadata for Kafka topic data. The same configuration rules as indexes apply. If unconfigured, the default source binds to the HEC token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 291
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.sourcetypes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "General",
      "order_in_group": 292,
      "display_name": "splunk.sourcetypes",
      "documentation": "Splunk event source type metadata for Kafka topic data. The same configuration rules as indexes apply here. If unconfigured, the default source binds to the HEC token. Only configure this when using the JSON Event endpoint (splunk.hec.raw=false).Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 292
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "splunk.hec.json.event.enrichment",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 293,
      "display_name": "splunk.hec.json.event.enrichment",
      "documentation": "This setting is used to enrich raw data with extra metadata fields. It contains a list of key value pairs separated by,. The configured enrichment metadata will be indexed along with raw event data by Splunk. This is only applicable to the/eventHEC endpoint (splunk.hec.raw=false). Data enrichment for the/eventHEC endpoint is only available in Splunk Enterprise 6.5 and above. By default, this setting is empty.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 293
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "splunk.hec.json.event.formatted",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 294,
      "display_name": "splunk.hec.json.event.formatted",
      "documentation": "This setting ensures events are preformatted into theproper HEC JSON formatand have metadata and event data so that they are indexed correctly by Splunk. Set this property totruefor events that are already in HEC format.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 294
      },
      "default": "falseimportance: low"
    },
    {
      "name": "splunk.hec.socket.timeout",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 295,
      "display_name": "splunk.hec.socket.timeout",
      "documentation": "The maximum duration in seconds to read/write data to network before an internal TCP Socket timeout occurs. By default, this is set to 60 seconds.Type: intDefault: 60Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 295
      },
      "default": "60importance: low"
    },
    {
      "name": "splunk.hec.threads",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 296,
      "display_name": "splunk.hec.threads",
      "documentation": "Controls how many threads are spawned to perform data injection through HEC in a single connector task.Type: intDefault: 1Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 296
      },
      "default": "1importance: low"
    },
    {
      "name": "splunk.hec.track.data",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "General",
      "order_in_group": 297,
      "display_name": "splunk.hec.track.data",
      "documentation": "When set totrue, data loss and data injection latency metadata will be indexed along with raw data. This setting only works in conjunction with/eventHEC endpoint (splunk.hec.raw=false).Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 297
      },
      "default": "falseimportance: low"
    },
    {
      "name": "Search by configuration property name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "Search by configuration property name",
      "documentation": "Enter a string to search and filter by configuration property name.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "name",
      "documentation": "Globally unique name to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "connector.class",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 3,
      "display_name": "connector.class",
      "documentation": "Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \u00e2\u0080\u009cFileStreamSink\u00e2\u0080\u009d or \u00e2\u0080\u009cFileStreamSinkConnector\u00e2\u0080\u009d to make the configuration a bit shorter",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "tasks.max",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 4,
      "display_name": "tasks.max",
      "documentation": "Maximum number of tasks to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "topics",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 5,
      "display_name": "topics",
      "documentation": "List of topics to consume, separated by commas",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "topics.regex",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 6,
      "display_name": "topics.regex",
      "documentation": "Regular expression giving topics to consume. Under the hood, the regex is compiled to ajava.util.regex.Pattern. Only one of topics or topics.regex should be specified.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "tasks.max.enforce",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 7,
      "display_name": "tasks.max.enforce",
      "documentation": "(Deprecated) Whether to enforce that the tasks.max property is respected by the connector. By default, connectors that generate too many tasks will fail, and existing sets of tasks that exceed the tasks.max property will also be failed. If this property is set to false, then connectors will be allowed to generate more than the maximum number of tasks, and existing sets of tasks that exceed the tasks.max property will be allowed to run. This property is deprecated and will be removed in an upcoming major release.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "key.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 8,
      "display_name": "key.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      }
    },
    {
      "name": "value.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 9,
      "display_name": "value.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      }
    },
    {
      "name": "header.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 10,
      "display_name": "header.converter",
      "documentation": "HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      }
    },
    {
      "name": "config.action.reload",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 11,
      "display_name": "config.action.reload",
      "documentation": "The action that Connect should take on the connector when changes in external configuration providers result in a change in the connector\u00e2\u0080\u0099s configuration properties. A value of \u00e2\u0080\u0098none\u00e2\u0080\u0099 indicates that Connect will do nothing. A value of \u00e2\u0080\u0098restart\u00e2\u0080\u0099 indicates that Connect should restart/reload the connector with the updated configuration properties.The restart may actually be scheduled in the future if the external configuration provider indicates that a configuration value will expire in the future.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "transforms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 12,
      "display_name": "transforms",
      "documentation": "Aliases for the transformations to be applied to records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "predicates",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 13,
      "display_name": "predicates",
      "documentation": "Aliases for the predicates used by transformations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      }
    },
    {
      "name": "errors.retry.timeout",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 14,
      "display_name": "errors.retry.timeout",
      "documentation": "The maximum duration in milliseconds that a failed operation will be reattempted. The default is 0, which means no retries will be attempted. Use -1 for infinite retries.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "errors.retry.delay.max.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 15,
      "display_name": "errors.retry.delay.max.ms",
      "documentation": "The maximum duration in milliseconds between consecutive retry attempts. Jitter will be added to the delay once this limit is reached to prevent thundering herd issues.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      }
    },
    {
      "name": "errors.tolerance",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 16,
      "display_name": "errors.tolerance",
      "documentation": "Behavior for tolerating errors during connector operation. \u00e2\u0080\u0098none\u00e2\u0080\u0099 is the default value and signals that any error will result in an immediate connector task failure; \u00e2\u0080\u0098all\u00e2\u0080\u0099 changes the behavior to skip over problematic records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "errors.log.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 17,
      "display_name": "errors.log.enable",
      "documentation": "If true, write each error and the details of the failed operation and problematic record to the Connect application log. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, so that only errors that are not tolerated are reported.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      }
    },
    {
      "name": "errors.log.include.messages",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 18,
      "display_name": "errors.log.include.messages",
      "documentation": "Whether to include in the log the Connect record that resulted in a failure. For sink records, the topic, partition, offset, and timestamp will be logged. For source records, the key and value (and their schemas), all headers, and the timestamp, Kafka topic, Kafka partition, source partition, and source offset will be logged. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, which will prevent record keys, values, and headers from being written to log files.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      }
    },
    {
      "name": "errors.deadletterqueue.topic.name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 19,
      "display_name": "errors.deadletterqueue.topic.name",
      "documentation": "The name of the topic to be used as the dead letter queue (DLQ) for messages that result in an error when processed by this sink connector, or its transformations or converters. The topic name is blank by default, which means that no messages are to be recorded in the DLQ.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      }
    },
    {
      "name": "errors.deadletterqueue.topic.replication.factor",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 20,
      "display_name": "errors.deadletterqueue.topic.replication.factor",
      "documentation": "Replication factor used to create the dead letter queue topic when it doesn\u00e2\u0080\u0099t already exist.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      }
    },
    {
      "name": "errors.deadletterqueue.context.headers.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 21,
      "display_name": "errors.deadletterqueue.context.headers.enable",
      "documentation": "If true, add headers containing error context to the messages written to the dead letter queue. To avoid clashing with headers from the original record, all error context header keys, all error context header keys will start with__connect.errors.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      }
    }
  ]
}