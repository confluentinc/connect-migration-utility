{
  "template_id": "HttpSinkConnector",
  "connector_type": "SINK",
  "connector.class": "io.confluent.connect.http.HttpSinkConnector",
  "name": "{{.logicalClusterId}}",
  "imports": [],
  "group_order": [
    "Connection",
    "Connect Reporter",
    "Formatter",
    "JSON Formatter",
    "Authorization",
    "Retries",
    "Regex",
    "Batching",
    "Security",
    "CSFLE configuration",
    "Confluent Platform license",
    "Confluent license properties",
    "License topic configuration",
    "License topic ACLs",
    "Override Default Configuration Properties"
  ],
  "config_defs": [
    {
      "name": "http.api.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 1,
      "display_name": "http.api.url",
      "documentation": "The HTTP API URL.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 1
      }
    },
    {
      "name": "request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 2,
      "display_name": "request.method",
      "documentation": "The HTTP request method.Type: stringDefault:POSTValid Values:POST,PUT, orPATCHImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      },
      "default": "postvalid values:post,put, orpatchimportance: high"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 3,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a non-null key and a null value (that is, Kafka tombstone records). Valid options areignore,delete,logandfail.failThrows aNullRecordExceptionand will be handled as perbehavior.on.errorconfiguration.logLogs the record coordinates and key.ignoreContinues to process next set of records. when records with null value encountered.deleteDeletes the record by executing delete http request when records with null value encountered.Type: stringDefault: ignoreValid Values: one of [fail, log, ignore, delete]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      },
      "default": "ignorevalid values: one of [fail, log, ignore, delete]importance: low"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 4,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for handling response from HTTP requests. Must be configured to one of the following:failStops the connector when an error occurs.ignoreContinues to process next set of records. when error occurs.logLogs the error message to application logs when error occurs and continues to process next set of records.Type: stringDefault: failValid Values: one of [fail, log, ignore]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      },
      "default": "failvalid values: one of [fail, log, ignore]importance: low"
    },
    {
      "name": "report.errors.as",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 5,
      "display_name": "report.errors.as",
      "documentation": "Dictates the content of records produced to the error topic. If set toerror_string, the value would be a human readable string describing the\nfailure. The value will include some or all of the following information if\navailable:HTTP response codeReason phraseSubmitted payloadURLResponse contentException and error messageIf set tohttp_response, the value would be the plain response content for the\nrequest which failed to write the record. In both modes, any information about\nthe failure will also be included in the error records headers.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "headers",
      "type": "APPLICATION",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 6,
      "display_name": "headers",
      "documentation": "HTTP headers to be included in all requests. Individual headers should be\nseparated by theheader.separator.Example:\"headers\":\"Content-Type:application/json|Accept:application/json\"Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: highNote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviaThe connector also does not allow the following header prefixes:proxy-secx-forwarded-",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: highnote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviathe connector also does not allow the following header prefixes:proxy-secx-forwarded-"
    },
    {
      "name": "header.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 7,
      "display_name": "header.separator",
      "documentation": "Separator character used inheadersproperty.Type: stringDefault: |Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      },
      "default": "|importance: high"
    },
    {
      "name": "http.connect.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 8,
      "display_name": "http.connect.timeout.ms",
      "documentation": "Time to wait for a connection to be established.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.request.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 9,
      "display_name": "http.request.timeout.ms",
      "documentation": "Time to wait for a request response to arrive.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 10,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 11,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 12,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 13,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "deletes.send.in.order",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 14,
      "display_name": "deletes.send.in.order",
      "documentation": "A flag denoting whether delete requests for tombstone records should be sent\nin order. By default, the connector sends a delete request immediately after\nit encounters a tombstone record, while non-tombstone records are batched and\nsent only when the batch is full. To override this default behavior and send\ntombstone records in order before processing the next set of records, setdeletes.send.in.ordertotrue. Setting this property totrueensures all tombstone and non-tombstone records are sent in order. Note that\nthis configuration property is supported in versions 1.7.5 and later.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      },
      "default": "falseimportance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 15,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 16,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 17,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 18,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 19,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 20,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 21,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 22,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 22
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 23,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 23
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 24,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 24
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 25,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 25
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 26,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 26
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 27,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 27
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 28,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 28
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 29,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 29
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 30,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 30
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 31,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 31
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 32,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 32
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 33,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 33
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 34,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 34
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 35,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 35
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 36,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 36
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 37,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 37
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 38,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 38
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 39,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 39
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 40,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 40
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 41,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent in body as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 41
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 42,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token. The default value isany. You can set this property to the desired value. If you don\u00e2\u0080\u0099t wantanyto be passed to the endpoint, you can set the value to an empty string.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 42
      },
      "default": "anyimportance: low"
    },
    {
      "name": "oauth2.client.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 43,
      "display_name": "oauth2.client.headers",
      "documentation": "The HTTP headers to include in each request to the OAuth 2 client endpoint. You\nshould separate individual headers using theoauth2.client.header.separatorproperty. Note that if you add theContent-Typeheader, the connector will override the value withapplication/x-www-form-urlencoded.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 43
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "oauth2.client.header.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 44,
      "display_name": "oauth2.client.header.separator",
      "documentation": "The separator character used in theoauth2.client.headersconfiguration\nproperty.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 44
      },
      "default": "|importance: low"
    },
    {
      "name": "oauth2.jwt.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 45,
      "display_name": "oauth2.jwt.enabled",
      "documentation": "Whether to generate and add a JSON Web Token (JWT) token to a request. If set\ntotrue, the JWT token will be added as ajwt_tokenrequest parameter.\nNote that you must setoauth2.client.auth.modetourlfor this\nproperty to work.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 45
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.path",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 46,
      "display_name": "oauth2.jwt.keystore.path",
      "documentation": "The path to the keystore containing the key to use to generate a JWT.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 46
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 47,
      "display_name": "oauth2.jwt.keystore.password",
      "documentation": "The password to use to access the JWT keystore.Type: passwordDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 47
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 48,
      "display_name": "oauth2.jwt.keystore.type",
      "documentation": "The JWT keystore type. You can set the keystore type toJKSorPKCS12.Type: stringDefault:JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 48
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "oauth2.jwt.claimset",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 49,
      "display_name": "oauth2.jwt.claimset",
      "documentation": "A JSON string containingJWT claims.\nNote that the issued at time (iat) will be set by connector to the JWT\ncreation time\u00e2\u0080\u0093current time\u00e2\u0080\u0093and expiry (exp) will be set to 5 minutes from\ntime of issue. Additionally, the connector will setjtito a random\nstring. Any values you set for these fields will be overridden by connector.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 49
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.signature.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 50,
      "display_name": "oauth2.jwt.signature.algorithm",
      "documentation": "The algorithm to use for signing claims.Type: stringDefault:rs256Valid values:rs256Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 50
      },
      "default": "rs256valid values:rs256importance: low"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 51,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 5Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 51
      },
      "default": "5valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 52,
      "display_name": "retry.backoff.ms",
      "documentation": "The initial duration in milliseconds to wait following an error before a retry\nattempt is made. Subsequent backoffs will be exponentially larger than the\nfirst duration. Note thatretry.backoff.msis the initial backoff before\nretrying. After that, the connector will retry using exponential jitter. For\nmore details about exponential jitter, seeBetter Retries with Exponential\nBackoff and Jitter.Type: intDefault: 3000Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 52
      },
      "default": "3000valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 53,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. Comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to 400.400-500includes codes from 400 to 500,\nincluding 500. Multiple ranges and single codes can be specified together to\nachieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUT, and\nall 5xx error codes.Type: stringDefault: 400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 53
      },
      "default": "400-importance: medium"
    },
    {
      "name": "regex.patterns",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 54,
      "display_name": "regex.patterns",
      "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but they must be separated byregex.separator. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 54
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.replacements",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 55,
      "display_name": "regex.replacements",
      "documentation": "Regex replacements to use with the patterns inregex.patterns.  Multiple replacements can be specified, but they must be separated byregex.separator.${key}and${topic}can be used here. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 55
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 56,
      "display_name": "regex.separator",
      "documentation": "Separator character used inregex.patternsandregex.replacementsproperty. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ~Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 56
      },
      "default": "~importance: high"
    },
    {
      "name": "request.body.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 57,
      "display_name": "request.body.format",
      "documentation": "Used to produce request body in either JSON or String format.Type: stringDefault: stringValid Values: one of [string, json]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 57
      },
      "default": "stringvalid values: one of [string, json]importance: medium"
    },
    {
      "name": "batch.key.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 58,
      "display_name": "batch.key.pattern",
      "documentation": "Pattern used to build the key for a given batch.${key}and${topic}can be used to include message attributes here.Type: stringDefault: someKeyImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 58
      },
      "default": "somekeyimportance: high"
    },
    {
      "name": "batch.max.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 59,
      "display_name": "batch.max.size",
      "documentation": "The number of records accumulated in a batch before the HTTP API is invoked.\nNote that batching is disabled if you usetemplate parametersother than$keyand$topic.Type: intDefault: 1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 59
      },
      "default": "1importance: high"
    },
    {
      "name": "batch.prefix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 60,
      "display_name": "batch.prefix",
      "documentation": "The prefix added to record batches. This is applied once at the beginning of\nthe batch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 60
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.suffix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 61,
      "display_name": "batch.suffix",
      "documentation": "The suffix added to record batches. This is applied once at the end of the\nbatch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 61
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 62,
      "display_name": "batch.separator",
      "documentation": "Separator for records in a batch. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ,Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 62
      },
      "default": ",importance: high"
    },
    {
      "name": "batch.json.as.array",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 63,
      "display_name": "batch.json.as.array",
      "documentation": "Whether or not to use an array to bundle json records.\nOnly used whenrequest.body.formatis set tojson.\nThis can be disabled only whenbatch.max.sizeis set to 1.Type: booleanDefault: trueImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 63
      },
      "default": "trueimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 64,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 64
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 65,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 65
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 66,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 66
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 67,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 67
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 68,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 68
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 69,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 69
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 70,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 70
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 71,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 71
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 72,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 72
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 73,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 73
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 74,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 74
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 75,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 75
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 76,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 76
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 77,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 77
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 78,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 78
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 79,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 79
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 80,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 80
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 81,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 81
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 82,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 82
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 83,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 83
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 84,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 84
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 85,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 85
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.api.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 86,
      "display_name": "http.api.url",
      "documentation": "The HTTP API URL.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 86
      }
    },
    {
      "name": "request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 87,
      "display_name": "request.method",
      "documentation": "The HTTP request method.Type: stringDefault:POSTValid Values:POST,PUT, orPATCHImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 87
      },
      "default": "postvalid values:post,put, orpatchimportance: high"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 88,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a non-null key and a null value (that is, Kafka tombstone records). Valid options areignore,delete,logandfail.failThrows aNullRecordExceptionand will be handled as perbehavior.on.errorconfiguration.logLogs the record coordinates and key.ignoreContinues to process next set of records. when records with null value encountered.deleteDeletes the record by executing delete http request when records with null value encountered.Type: stringDefault: ignoreValid Values: one of [fail, log, ignore, delete]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 88
      },
      "default": "ignorevalid values: one of [fail, log, ignore, delete]importance: low"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 89,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for handling response from HTTP requests. Must be configured to one of the following:failStops the connector when an error occurs.ignoreContinues to process next set of records. when error occurs.logLogs the error message to application logs when error occurs and continues to process next set of records.Type: stringDefault: failValid Values: one of [fail, log, ignore]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 89
      },
      "default": "failvalid values: one of [fail, log, ignore]importance: low"
    },
    {
      "name": "report.errors.as",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 90,
      "display_name": "report.errors.as",
      "documentation": "Dictates the content of records produced to the error topic. If set toerror_string, the value would be a human readable string describing the\nfailure. The value will include some or all of the following information if\navailable:HTTP response codeReason phraseSubmitted payloadURLResponse contentException and error messageIf set tohttp_response, the value would be the plain response content for the\nrequest which failed to write the record. In both modes, any information about\nthe failure will also be included in the error records headers.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 90
      }
    },
    {
      "name": "headers",
      "type": "APPLICATION",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 91,
      "display_name": "headers",
      "documentation": "HTTP headers to be included in all requests. Individual headers should be\nseparated by theheader.separator.Example:\"headers\":\"Content-Type:application/json|Accept:application/json\"Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: highNote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviaThe connector also does not allow the following header prefixes:proxy-secx-forwarded-",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 91
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: highnote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviathe connector also does not allow the following header prefixes:proxy-secx-forwarded-"
    },
    {
      "name": "header.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 92,
      "display_name": "header.separator",
      "documentation": "Separator character used inheadersproperty.Type: stringDefault: |Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 92
      },
      "default": "|importance: high"
    },
    {
      "name": "http.connect.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 93,
      "display_name": "http.connect.timeout.ms",
      "documentation": "Time to wait for a connection to be established.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 93
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.request.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 94,
      "display_name": "http.request.timeout.ms",
      "documentation": "Time to wait for a request response to arrive.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 94
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 95,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 95
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 96,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 96
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 97,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 97
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 98,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 98
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "deletes.send.in.order",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 99,
      "display_name": "deletes.send.in.order",
      "documentation": "A flag denoting whether delete requests for tombstone records should be sent\nin order. By default, the connector sends a delete request immediately after\nit encounters a tombstone record, while non-tombstone records are batched and\nsent only when the batch is full. To override this default behavior and send\ntombstone records in order before processing the next set of records, setdeletes.send.in.ordertotrue. Setting this property totrueensures all tombstone and non-tombstone records are sent in order. Note that\nthis configuration property is supported in versions 1.7.5 and later.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 99
      },
      "default": "falseimportance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 100,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 100
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 101,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 101
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 102,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 102
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 103,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 103
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 104,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 104
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 105,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 105
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 106,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 106
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 107,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 107
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 108,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 108
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 109,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 109
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 110,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 110
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 111,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 111
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 112,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 112
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 113,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 113
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 114,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 114
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 115,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 115
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 116,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 116
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 117,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 117
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 118,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 118
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 119,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 119
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 120,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 120
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 121,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 121
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 122,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 122
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 123,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 123
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 124,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 124
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 125,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 125
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 126,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent in body as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 126
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 127,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token. The default value isany. You can set this property to the desired value. If you don\u00e2\u0080\u0099t wantanyto be passed to the endpoint, you can set the value to an empty string.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 127
      },
      "default": "anyimportance: low"
    },
    {
      "name": "oauth2.client.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 128,
      "display_name": "oauth2.client.headers",
      "documentation": "The HTTP headers to include in each request to the OAuth 2 client endpoint. You\nshould separate individual headers using theoauth2.client.header.separatorproperty. Note that if you add theContent-Typeheader, the connector will override the value withapplication/x-www-form-urlencoded.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 128
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "oauth2.client.header.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 129,
      "display_name": "oauth2.client.header.separator",
      "documentation": "The separator character used in theoauth2.client.headersconfiguration\nproperty.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 129
      },
      "default": "|importance: low"
    },
    {
      "name": "oauth2.jwt.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 130,
      "display_name": "oauth2.jwt.enabled",
      "documentation": "Whether to generate and add a JSON Web Token (JWT) token to a request. If set\ntotrue, the JWT token will be added as ajwt_tokenrequest parameter.\nNote that you must setoauth2.client.auth.modetourlfor this\nproperty to work.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 130
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.path",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 131,
      "display_name": "oauth2.jwt.keystore.path",
      "documentation": "The path to the keystore containing the key to use to generate a JWT.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 131
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 132,
      "display_name": "oauth2.jwt.keystore.password",
      "documentation": "The password to use to access the JWT keystore.Type: passwordDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 132
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 133,
      "display_name": "oauth2.jwt.keystore.type",
      "documentation": "The JWT keystore type. You can set the keystore type toJKSorPKCS12.Type: stringDefault:JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 133
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "oauth2.jwt.claimset",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 134,
      "display_name": "oauth2.jwt.claimset",
      "documentation": "A JSON string containingJWT claims.\nNote that the issued at time (iat) will be set by connector to the JWT\ncreation time\u00e2\u0080\u0093current time\u00e2\u0080\u0093and expiry (exp) will be set to 5 minutes from\ntime of issue. Additionally, the connector will setjtito a random\nstring. Any values you set for these fields will be overridden by connector.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 134
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.signature.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 135,
      "display_name": "oauth2.jwt.signature.algorithm",
      "documentation": "The algorithm to use for signing claims.Type: stringDefault:rs256Valid values:rs256Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 135
      },
      "default": "rs256valid values:rs256importance: low"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 136,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 5Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 136
      },
      "default": "5valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 137,
      "display_name": "retry.backoff.ms",
      "documentation": "The initial duration in milliseconds to wait following an error before a retry\nattempt is made. Subsequent backoffs will be exponentially larger than the\nfirst duration. Note thatretry.backoff.msis the initial backoff before\nretrying. After that, the connector will retry using exponential jitter. For\nmore details about exponential jitter, seeBetter Retries with Exponential\nBackoff and Jitter.Type: intDefault: 3000Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 137
      },
      "default": "3000valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 138,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. Comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to 400.400-500includes codes from 400 to 500,\nincluding 500. Multiple ranges and single codes can be specified together to\nachieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUT, and\nall 5xx error codes.Type: stringDefault: 400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 138
      },
      "default": "400-importance: medium"
    },
    {
      "name": "regex.patterns",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 139,
      "display_name": "regex.patterns",
      "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but they must be separated byregex.separator. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 139
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.replacements",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 140,
      "display_name": "regex.replacements",
      "documentation": "Regex replacements to use with the patterns inregex.patterns.  Multiple replacements can be specified, but they must be separated byregex.separator.${key}and${topic}can be used here. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 140
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 141,
      "display_name": "regex.separator",
      "documentation": "Separator character used inregex.patternsandregex.replacementsproperty. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ~Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 141
      },
      "default": "~importance: high"
    },
    {
      "name": "request.body.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 142,
      "display_name": "request.body.format",
      "documentation": "Used to produce request body in either JSON or String format.Type: stringDefault: stringValid Values: one of [string, json]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 142
      },
      "default": "stringvalid values: one of [string, json]importance: medium"
    },
    {
      "name": "batch.key.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 143,
      "display_name": "batch.key.pattern",
      "documentation": "Pattern used to build the key for a given batch.${key}and${topic}can be used to include message attributes here.Type: stringDefault: someKeyImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 143
      },
      "default": "somekeyimportance: high"
    },
    {
      "name": "batch.max.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 144,
      "display_name": "batch.max.size",
      "documentation": "The number of records accumulated in a batch before the HTTP API is invoked.\nNote that batching is disabled if you usetemplate parametersother than$keyand$topic.Type: intDefault: 1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 144
      },
      "default": "1importance: high"
    },
    {
      "name": "batch.prefix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 145,
      "display_name": "batch.prefix",
      "documentation": "The prefix added to record batches. This is applied once at the beginning of\nthe batch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 145
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.suffix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 146,
      "display_name": "batch.suffix",
      "documentation": "The suffix added to record batches. This is applied once at the end of the\nbatch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 146
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 147,
      "display_name": "batch.separator",
      "documentation": "Separator for records in a batch. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ,Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 147
      },
      "default": ",importance: high"
    },
    {
      "name": "batch.json.as.array",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 148,
      "display_name": "batch.json.as.array",
      "documentation": "Whether or not to use an array to bundle json records.\nOnly used whenrequest.body.formatis set tojson.\nThis can be disabled only whenbatch.max.sizeis set to 1.Type: booleanDefault: trueImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 148
      },
      "default": "trueimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 149,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 149
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 150,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 150
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 151,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 151
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 152,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 152
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 153,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 153
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 154,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 154
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 155,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 155
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 156,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 156
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 157,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 157
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 158,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 158
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 159,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 159
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 160,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 160
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 161,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 161
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 162,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 162
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 163,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 163
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 164,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 164
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 165,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 165
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 166,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 166
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 167,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 167
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 168,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 168
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 169,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 169
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 170,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 170
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.api.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 171,
      "display_name": "http.api.url",
      "documentation": "The HTTP API URL.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 171
      }
    },
    {
      "name": "request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 172,
      "display_name": "request.method",
      "documentation": "The HTTP request method.Type: stringDefault:POSTValid Values:POST,PUT, orPATCHImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 172
      },
      "default": "postvalid values:post,put, orpatchimportance: high"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 173,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a non-null key and a null value (that is, Kafka tombstone records). Valid options areignore,delete,logandfail.failThrows aNullRecordExceptionand will be handled as perbehavior.on.errorconfiguration.logLogs the record coordinates and key.ignoreContinues to process next set of records. when records with null value encountered.deleteDeletes the record by executing delete http request when records with null value encountered.Type: stringDefault: ignoreValid Values: one of [fail, log, ignore, delete]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 173
      },
      "default": "ignorevalid values: one of [fail, log, ignore, delete]importance: low"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 174,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for handling response from HTTP requests. Must be configured to one of the following:failStops the connector when an error occurs.ignoreContinues to process next set of records. when error occurs.logLogs the error message to application logs when error occurs and continues to process next set of records.Type: stringDefault: failValid Values: one of [fail, log, ignore]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 174
      },
      "default": "failvalid values: one of [fail, log, ignore]importance: low"
    },
    {
      "name": "report.errors.as",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 175,
      "display_name": "report.errors.as",
      "documentation": "Dictates the content of records produced to the error topic. If set toerror_string, the value would be a human readable string describing the\nfailure. The value will include some or all of the following information if\navailable:HTTP response codeReason phraseSubmitted payloadURLResponse contentException and error messageIf set tohttp_response, the value would be the plain response content for the\nrequest which failed to write the record. In both modes, any information about\nthe failure will also be included in the error records headers.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 175
      }
    },
    {
      "name": "headers",
      "type": "APPLICATION",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 176,
      "display_name": "headers",
      "documentation": "HTTP headers to be included in all requests. Individual headers should be\nseparated by theheader.separator.Example:\"headers\":\"Content-Type:application/json|Accept:application/json\"Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: highNote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviaThe connector also does not allow the following header prefixes:proxy-secx-forwarded-",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 176
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: highnote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviathe connector also does not allow the following header prefixes:proxy-secx-forwarded-"
    },
    {
      "name": "header.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 177,
      "display_name": "header.separator",
      "documentation": "Separator character used inheadersproperty.Type: stringDefault: |Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 177
      },
      "default": "|importance: high"
    },
    {
      "name": "http.connect.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 178,
      "display_name": "http.connect.timeout.ms",
      "documentation": "Time to wait for a connection to be established.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 178
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.request.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 179,
      "display_name": "http.request.timeout.ms",
      "documentation": "Time to wait for a request response to arrive.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 179
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 180,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 180
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 181,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 181
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 182,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 182
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 183,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 183
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "deletes.send.in.order",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 184,
      "display_name": "deletes.send.in.order",
      "documentation": "A flag denoting whether delete requests for tombstone records should be sent\nin order. By default, the connector sends a delete request immediately after\nit encounters a tombstone record, while non-tombstone records are batched and\nsent only when the batch is full. To override this default behavior and send\ntombstone records in order before processing the next set of records, setdeletes.send.in.ordertotrue. Setting this property totrueensures all tombstone and non-tombstone records are sent in order. Note that\nthis configuration property is supported in versions 1.7.5 and later.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 184
      },
      "default": "falseimportance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 185,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 185
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 186,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 186
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 187,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 187
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 188,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 188
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 189,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 189
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 190,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 190
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 191,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 191
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 192,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 192
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 193,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 193
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 194,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 194
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 195,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 195
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 196,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 196
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 197,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 197
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 198,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 198
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 199,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 199
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 200,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 200
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 201,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 201
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 202,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 202
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 203,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 203
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 204,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 204
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 205,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 205
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 206,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 206
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 207,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 207
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 208,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 208
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 209,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 209
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 210,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 210
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 211,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent in body as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 211
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 212,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token. The default value isany. You can set this property to the desired value. If you don\u00e2\u0080\u0099t wantanyto be passed to the endpoint, you can set the value to an empty string.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 212
      },
      "default": "anyimportance: low"
    },
    {
      "name": "oauth2.client.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 213,
      "display_name": "oauth2.client.headers",
      "documentation": "The HTTP headers to include in each request to the OAuth 2 client endpoint. You\nshould separate individual headers using theoauth2.client.header.separatorproperty. Note that if you add theContent-Typeheader, the connector will override the value withapplication/x-www-form-urlencoded.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 213
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "oauth2.client.header.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 214,
      "display_name": "oauth2.client.header.separator",
      "documentation": "The separator character used in theoauth2.client.headersconfiguration\nproperty.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 214
      },
      "default": "|importance: low"
    },
    {
      "name": "oauth2.jwt.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 215,
      "display_name": "oauth2.jwt.enabled",
      "documentation": "Whether to generate and add a JSON Web Token (JWT) token to a request. If set\ntotrue, the JWT token will be added as ajwt_tokenrequest parameter.\nNote that you must setoauth2.client.auth.modetourlfor this\nproperty to work.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 215
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.path",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 216,
      "display_name": "oauth2.jwt.keystore.path",
      "documentation": "The path to the keystore containing the key to use to generate a JWT.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 216
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 217,
      "display_name": "oauth2.jwt.keystore.password",
      "documentation": "The password to use to access the JWT keystore.Type: passwordDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 217
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 218,
      "display_name": "oauth2.jwt.keystore.type",
      "documentation": "The JWT keystore type. You can set the keystore type toJKSorPKCS12.Type: stringDefault:JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 218
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "oauth2.jwt.claimset",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 219,
      "display_name": "oauth2.jwt.claimset",
      "documentation": "A JSON string containingJWT claims.\nNote that the issued at time (iat) will be set by connector to the JWT\ncreation time\u00e2\u0080\u0093current time\u00e2\u0080\u0093and expiry (exp) will be set to 5 minutes from\ntime of issue. Additionally, the connector will setjtito a random\nstring. Any values you set for these fields will be overridden by connector.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 219
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.signature.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 220,
      "display_name": "oauth2.jwt.signature.algorithm",
      "documentation": "The algorithm to use for signing claims.Type: stringDefault:rs256Valid values:rs256Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 220
      },
      "default": "rs256valid values:rs256importance: low"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 221,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 5Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 221
      },
      "default": "5valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 222,
      "display_name": "retry.backoff.ms",
      "documentation": "The initial duration in milliseconds to wait following an error before a retry\nattempt is made. Subsequent backoffs will be exponentially larger than the\nfirst duration. Note thatretry.backoff.msis the initial backoff before\nretrying. After that, the connector will retry using exponential jitter. For\nmore details about exponential jitter, seeBetter Retries with Exponential\nBackoff and Jitter.Type: intDefault: 3000Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 222
      },
      "default": "3000valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 223,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. Comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to 400.400-500includes codes from 400 to 500,\nincluding 500. Multiple ranges and single codes can be specified together to\nachieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUT, and\nall 5xx error codes.Type: stringDefault: 400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 223
      },
      "default": "400-importance: medium"
    },
    {
      "name": "regex.patterns",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 224,
      "display_name": "regex.patterns",
      "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but they must be separated byregex.separator. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 224
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.replacements",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 225,
      "display_name": "regex.replacements",
      "documentation": "Regex replacements to use with the patterns inregex.patterns.  Multiple replacements can be specified, but they must be separated byregex.separator.${key}and${topic}can be used here. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 225
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 226,
      "display_name": "regex.separator",
      "documentation": "Separator character used inregex.patternsandregex.replacementsproperty. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ~Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 226
      },
      "default": "~importance: high"
    },
    {
      "name": "request.body.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 227,
      "display_name": "request.body.format",
      "documentation": "Used to produce request body in either JSON or String format.Type: stringDefault: stringValid Values: one of [string, json]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 227
      },
      "default": "stringvalid values: one of [string, json]importance: medium"
    },
    {
      "name": "batch.key.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 228,
      "display_name": "batch.key.pattern",
      "documentation": "Pattern used to build the key for a given batch.${key}and${topic}can be used to include message attributes here.Type: stringDefault: someKeyImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 228
      },
      "default": "somekeyimportance: high"
    },
    {
      "name": "batch.max.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 229,
      "display_name": "batch.max.size",
      "documentation": "The number of records accumulated in a batch before the HTTP API is invoked.\nNote that batching is disabled if you usetemplate parametersother than$keyand$topic.Type: intDefault: 1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 229
      },
      "default": "1importance: high"
    },
    {
      "name": "batch.prefix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 230,
      "display_name": "batch.prefix",
      "documentation": "The prefix added to record batches. This is applied once at the beginning of\nthe batch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 230
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.suffix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 231,
      "display_name": "batch.suffix",
      "documentation": "The suffix added to record batches. This is applied once at the end of the\nbatch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 231
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 232,
      "display_name": "batch.separator",
      "documentation": "Separator for records in a batch. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ,Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 232
      },
      "default": ",importance: high"
    },
    {
      "name": "batch.json.as.array",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 233,
      "display_name": "batch.json.as.array",
      "documentation": "Whether or not to use an array to bundle json records.\nOnly used whenrequest.body.formatis set tojson.\nThis can be disabled only whenbatch.max.sizeis set to 1.Type: booleanDefault: trueImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 233
      },
      "default": "trueimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 234,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 234
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 235,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 235
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 236,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 236
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 237,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 237
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 238,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 238
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 239,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 239
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 240,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 240
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 241,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 241
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 242,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 242
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 243,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 243
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 244,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 244
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 245,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 245
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 246,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 246
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 247,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 247
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 248,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 248
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 249,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 249
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 250,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 250
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 251,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 251
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 252,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 252
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 253,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 253
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 254,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 254
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 255,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 255
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.api.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 256,
      "display_name": "http.api.url",
      "documentation": "The HTTP API URL.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 256
      }
    },
    {
      "name": "request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 257,
      "display_name": "request.method",
      "documentation": "The HTTP request method.Type: stringDefault:POSTValid Values:POST,PUT, orPATCHImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 257
      },
      "default": "postvalid values:post,put, orpatchimportance: high"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 258,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a non-null key and a null value (that is, Kafka tombstone records). Valid options areignore,delete,logandfail.failThrows aNullRecordExceptionand will be handled as perbehavior.on.errorconfiguration.logLogs the record coordinates and key.ignoreContinues to process next set of records. when records with null value encountered.deleteDeletes the record by executing delete http request when records with null value encountered.Type: stringDefault: ignoreValid Values: one of [fail, log, ignore, delete]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 258
      },
      "default": "ignorevalid values: one of [fail, log, ignore, delete]importance: low"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 259,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for handling response from HTTP requests. Must be configured to one of the following:failStops the connector when an error occurs.ignoreContinues to process next set of records. when error occurs.logLogs the error message to application logs when error occurs and continues to process next set of records.Type: stringDefault: failValid Values: one of [fail, log, ignore]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 259
      },
      "default": "failvalid values: one of [fail, log, ignore]importance: low"
    },
    {
      "name": "report.errors.as",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 260,
      "display_name": "report.errors.as",
      "documentation": "Dictates the content of records produced to the error topic. If set toerror_string, the value would be a human readable string describing the\nfailure. The value will include some or all of the following information if\navailable:HTTP response codeReason phraseSubmitted payloadURLResponse contentException and error messageIf set tohttp_response, the value would be the plain response content for the\nrequest which failed to write the record. In both modes, any information about\nthe failure will also be included in the error records headers.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 260
      }
    },
    {
      "name": "headers",
      "type": "APPLICATION",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 261,
      "display_name": "headers",
      "documentation": "HTTP headers to be included in all requests. Individual headers should be\nseparated by theheader.separator.Example:\"headers\":\"Content-Type:application/json|Accept:application/json\"Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: highNote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviaThe connector also does not allow the following header prefixes:proxy-secx-forwarded-",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 261
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: highnote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviathe connector also does not allow the following header prefixes:proxy-secx-forwarded-"
    },
    {
      "name": "header.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 262,
      "display_name": "header.separator",
      "documentation": "Separator character used inheadersproperty.Type: stringDefault: |Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 262
      },
      "default": "|importance: high"
    },
    {
      "name": "http.connect.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 263,
      "display_name": "http.connect.timeout.ms",
      "documentation": "Time to wait for a connection to be established.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 263
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.request.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 264,
      "display_name": "http.request.timeout.ms",
      "documentation": "Time to wait for a request response to arrive.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 264
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 265,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 265
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 266,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 266
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 267,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 267
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 268,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 268
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "deletes.send.in.order",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 269,
      "display_name": "deletes.send.in.order",
      "documentation": "A flag denoting whether delete requests for tombstone records should be sent\nin order. By default, the connector sends a delete request immediately after\nit encounters a tombstone record, while non-tombstone records are batched and\nsent only when the batch is full. To override this default behavior and send\ntombstone records in order before processing the next set of records, setdeletes.send.in.ordertotrue. Setting this property totrueensures all tombstone and non-tombstone records are sent in order. Note that\nthis configuration property is supported in versions 1.7.5 and later.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 269
      },
      "default": "falseimportance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 270,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 270
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 271,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 271
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 272,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 272
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 273,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 273
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 274,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 274
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 275,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 275
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 276,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 276
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 277,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 277
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 278,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 278
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 279,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 279
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 280,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 280
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 281,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 281
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 282,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 282
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 283,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 283
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 284,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 284
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 285,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 285
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 286,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 286
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 287,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 287
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 288,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 288
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 289,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 289
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 290,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 290
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 291,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 291
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 292,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 292
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 293,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 293
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 294,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 294
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 295,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 295
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 296,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent in body as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 296
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 297,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token. The default value isany. You can set this property to the desired value. If you don\u00e2\u0080\u0099t wantanyto be passed to the endpoint, you can set the value to an empty string.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 297
      },
      "default": "anyimportance: low"
    },
    {
      "name": "oauth2.client.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 298,
      "display_name": "oauth2.client.headers",
      "documentation": "The HTTP headers to include in each request to the OAuth 2 client endpoint. You\nshould separate individual headers using theoauth2.client.header.separatorproperty. Note that if you add theContent-Typeheader, the connector will override the value withapplication/x-www-form-urlencoded.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 298
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "oauth2.client.header.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 299,
      "display_name": "oauth2.client.header.separator",
      "documentation": "The separator character used in theoauth2.client.headersconfiguration\nproperty.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 299
      },
      "default": "|importance: low"
    },
    {
      "name": "oauth2.jwt.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 300,
      "display_name": "oauth2.jwt.enabled",
      "documentation": "Whether to generate and add a JSON Web Token (JWT) token to a request. If set\ntotrue, the JWT token will be added as ajwt_tokenrequest parameter.\nNote that you must setoauth2.client.auth.modetourlfor this\nproperty to work.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 300
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.path",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 301,
      "display_name": "oauth2.jwt.keystore.path",
      "documentation": "The path to the keystore containing the key to use to generate a JWT.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 301
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 302,
      "display_name": "oauth2.jwt.keystore.password",
      "documentation": "The password to use to access the JWT keystore.Type: passwordDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 302
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 303,
      "display_name": "oauth2.jwt.keystore.type",
      "documentation": "The JWT keystore type. You can set the keystore type toJKSorPKCS12.Type: stringDefault:JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 303
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "oauth2.jwt.claimset",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 304,
      "display_name": "oauth2.jwt.claimset",
      "documentation": "A JSON string containingJWT claims.\nNote that the issued at time (iat) will be set by connector to the JWT\ncreation time\u00e2\u0080\u0093current time\u00e2\u0080\u0093and expiry (exp) will be set to 5 minutes from\ntime of issue. Additionally, the connector will setjtito a random\nstring. Any values you set for these fields will be overridden by connector.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 304
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.signature.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 305,
      "display_name": "oauth2.jwt.signature.algorithm",
      "documentation": "The algorithm to use for signing claims.Type: stringDefault:rs256Valid values:rs256Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 305
      },
      "default": "rs256valid values:rs256importance: low"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 306,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 5Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 306
      },
      "default": "5valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 307,
      "display_name": "retry.backoff.ms",
      "documentation": "The initial duration in milliseconds to wait following an error before a retry\nattempt is made. Subsequent backoffs will be exponentially larger than the\nfirst duration. Note thatretry.backoff.msis the initial backoff before\nretrying. After that, the connector will retry using exponential jitter. For\nmore details about exponential jitter, seeBetter Retries with Exponential\nBackoff and Jitter.Type: intDefault: 3000Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 307
      },
      "default": "3000valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 308,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. Comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to 400.400-500includes codes from 400 to 500,\nincluding 500. Multiple ranges and single codes can be specified together to\nachieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUT, and\nall 5xx error codes.Type: stringDefault: 400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 308
      },
      "default": "400-importance: medium"
    },
    {
      "name": "regex.patterns",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 309,
      "display_name": "regex.patterns",
      "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but they must be separated byregex.separator. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 309
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.replacements",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 310,
      "display_name": "regex.replacements",
      "documentation": "Regex replacements to use with the patterns inregex.patterns.  Multiple replacements can be specified, but they must be separated byregex.separator.${key}and${topic}can be used here. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 310
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 311,
      "display_name": "regex.separator",
      "documentation": "Separator character used inregex.patternsandregex.replacementsproperty. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ~Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 311
      },
      "default": "~importance: high"
    },
    {
      "name": "request.body.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 312,
      "display_name": "request.body.format",
      "documentation": "Used to produce request body in either JSON or String format.Type: stringDefault: stringValid Values: one of [string, json]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 312
      },
      "default": "stringvalid values: one of [string, json]importance: medium"
    },
    {
      "name": "batch.key.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 313,
      "display_name": "batch.key.pattern",
      "documentation": "Pattern used to build the key for a given batch.${key}and${topic}can be used to include message attributes here.Type: stringDefault: someKeyImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 313
      },
      "default": "somekeyimportance: high"
    },
    {
      "name": "batch.max.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 314,
      "display_name": "batch.max.size",
      "documentation": "The number of records accumulated in a batch before the HTTP API is invoked.\nNote that batching is disabled if you usetemplate parametersother than$keyand$topic.Type: intDefault: 1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 314
      },
      "default": "1importance: high"
    },
    {
      "name": "batch.prefix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 315,
      "display_name": "batch.prefix",
      "documentation": "The prefix added to record batches. This is applied once at the beginning of\nthe batch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 315
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.suffix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 316,
      "display_name": "batch.suffix",
      "documentation": "The suffix added to record batches. This is applied once at the end of the\nbatch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 316
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 317,
      "display_name": "batch.separator",
      "documentation": "Separator for records in a batch. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ,Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 317
      },
      "default": ",importance: high"
    },
    {
      "name": "batch.json.as.array",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 318,
      "display_name": "batch.json.as.array",
      "documentation": "Whether or not to use an array to bundle json records.\nOnly used whenrequest.body.formatis set tojson.\nThis can be disabled only whenbatch.max.sizeis set to 1.Type: booleanDefault: trueImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 318
      },
      "default": "trueimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 319,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 319
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 320,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 320
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 321,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 321
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 322,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 322
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 323,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 323
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 324,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 324
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 325,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 325
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 326,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 326
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 327,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 327
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 328,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 328
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 329,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 329
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 330,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 330
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 331,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 331
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 332,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 332
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 333,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 333
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 334,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 334
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 335,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 335
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 336,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 336
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 337,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 337
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 338,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 338
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 339,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 339
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 340,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 340
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.api.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 341,
      "display_name": "http.api.url",
      "documentation": "The HTTP API URL.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 341
      }
    },
    {
      "name": "request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 342,
      "display_name": "request.method",
      "documentation": "The HTTP request method.Type: stringDefault:POSTValid Values:POST,PUT, orPATCHImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 342
      },
      "default": "postvalid values:post,put, orpatchimportance: high"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 343,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a non-null key and a null value (that is, Kafka tombstone records). Valid options areignore,delete,logandfail.failThrows aNullRecordExceptionand will be handled as perbehavior.on.errorconfiguration.logLogs the record coordinates and key.ignoreContinues to process next set of records. when records with null value encountered.deleteDeletes the record by executing delete http request when records with null value encountered.Type: stringDefault: ignoreValid Values: one of [fail, log, ignore, delete]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 343
      },
      "default": "ignorevalid values: one of [fail, log, ignore, delete]importance: low"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 344,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for handling response from HTTP requests. Must be configured to one of the following:failStops the connector when an error occurs.ignoreContinues to process next set of records. when error occurs.logLogs the error message to application logs when error occurs and continues to process next set of records.Type: stringDefault: failValid Values: one of [fail, log, ignore]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 344
      },
      "default": "failvalid values: one of [fail, log, ignore]importance: low"
    },
    {
      "name": "report.errors.as",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 345,
      "display_name": "report.errors.as",
      "documentation": "Dictates the content of records produced to the error topic. If set toerror_string, the value would be a human readable string describing the\nfailure. The value will include some or all of the following information if\navailable:HTTP response codeReason phraseSubmitted payloadURLResponse contentException and error messageIf set tohttp_response, the value would be the plain response content for the\nrequest which failed to write the record. In both modes, any information about\nthe failure will also be included in the error records headers.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 345
      }
    },
    {
      "name": "headers",
      "type": "APPLICATION",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 346,
      "display_name": "headers",
      "documentation": "HTTP headers to be included in all requests. Individual headers should be\nseparated by theheader.separator.Example:\"headers\":\"Content-Type:application/json|Accept:application/json\"Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: highNote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviaThe connector also does not allow the following header prefixes:proxy-secx-forwarded-",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 346
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: highnote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviathe connector also does not allow the following header prefixes:proxy-secx-forwarded-"
    },
    {
      "name": "header.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 347,
      "display_name": "header.separator",
      "documentation": "Separator character used inheadersproperty.Type: stringDefault: |Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 347
      },
      "default": "|importance: high"
    },
    {
      "name": "http.connect.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 348,
      "display_name": "http.connect.timeout.ms",
      "documentation": "Time to wait for a connection to be established.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 348
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.request.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 349,
      "display_name": "http.request.timeout.ms",
      "documentation": "Time to wait for a request response to arrive.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 349
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 350,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 350
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 351,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 351
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 352,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 352
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 353,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 353
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "deletes.send.in.order",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 354,
      "display_name": "deletes.send.in.order",
      "documentation": "A flag denoting whether delete requests for tombstone records should be sent\nin order. By default, the connector sends a delete request immediately after\nit encounters a tombstone record, while non-tombstone records are batched and\nsent only when the batch is full. To override this default behavior and send\ntombstone records in order before processing the next set of records, setdeletes.send.in.ordertotrue. Setting this property totrueensures all tombstone and non-tombstone records are sent in order. Note that\nthis configuration property is supported in versions 1.7.5 and later.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 354
      },
      "default": "falseimportance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 355,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 355
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 356,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 356
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 357,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 357
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 358,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 358
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 359,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 359
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 360,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 360
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 361,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 361
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 362,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 362
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 363,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 363
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 364,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 364
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 365,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 365
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 366,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 366
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 367,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 367
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 368,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 368
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 369,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 369
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 370,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 370
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 371,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 371
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 372,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 372
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 373,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 373
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 374,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 374
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 375,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 375
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 376,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 376
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 377,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 377
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 378,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 378
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 379,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 379
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 380,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 380
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 381,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent in body as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 381
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 382,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token. The default value isany. You can set this property to the desired value. If you don\u00e2\u0080\u0099t wantanyto be passed to the endpoint, you can set the value to an empty string.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 382
      },
      "default": "anyimportance: low"
    },
    {
      "name": "oauth2.client.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 383,
      "display_name": "oauth2.client.headers",
      "documentation": "The HTTP headers to include in each request to the OAuth 2 client endpoint. You\nshould separate individual headers using theoauth2.client.header.separatorproperty. Note that if you add theContent-Typeheader, the connector will override the value withapplication/x-www-form-urlencoded.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 383
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "oauth2.client.header.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 384,
      "display_name": "oauth2.client.header.separator",
      "documentation": "The separator character used in theoauth2.client.headersconfiguration\nproperty.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 384
      },
      "default": "|importance: low"
    },
    {
      "name": "oauth2.jwt.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 385,
      "display_name": "oauth2.jwt.enabled",
      "documentation": "Whether to generate and add a JSON Web Token (JWT) token to a request. If set\ntotrue, the JWT token will be added as ajwt_tokenrequest parameter.\nNote that you must setoauth2.client.auth.modetourlfor this\nproperty to work.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 385
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.path",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 386,
      "display_name": "oauth2.jwt.keystore.path",
      "documentation": "The path to the keystore containing the key to use to generate a JWT.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 386
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 387,
      "display_name": "oauth2.jwt.keystore.password",
      "documentation": "The password to use to access the JWT keystore.Type: passwordDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 387
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 388,
      "display_name": "oauth2.jwt.keystore.type",
      "documentation": "The JWT keystore type. You can set the keystore type toJKSorPKCS12.Type: stringDefault:JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 388
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "oauth2.jwt.claimset",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 389,
      "display_name": "oauth2.jwt.claimset",
      "documentation": "A JSON string containingJWT claims.\nNote that the issued at time (iat) will be set by connector to the JWT\ncreation time\u00e2\u0080\u0093current time\u00e2\u0080\u0093and expiry (exp) will be set to 5 minutes from\ntime of issue. Additionally, the connector will setjtito a random\nstring. Any values you set for these fields will be overridden by connector.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 389
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.signature.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 390,
      "display_name": "oauth2.jwt.signature.algorithm",
      "documentation": "The algorithm to use for signing claims.Type: stringDefault:rs256Valid values:rs256Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 390
      },
      "default": "rs256valid values:rs256importance: low"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 391,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 5Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 391
      },
      "default": "5valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 392,
      "display_name": "retry.backoff.ms",
      "documentation": "The initial duration in milliseconds to wait following an error before a retry\nattempt is made. Subsequent backoffs will be exponentially larger than the\nfirst duration. Note thatretry.backoff.msis the initial backoff before\nretrying. After that, the connector will retry using exponential jitter. For\nmore details about exponential jitter, seeBetter Retries with Exponential\nBackoff and Jitter.Type: intDefault: 3000Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 392
      },
      "default": "3000valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 393,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. Comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to 400.400-500includes codes from 400 to 500,\nincluding 500. Multiple ranges and single codes can be specified together to\nachieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUT, and\nall 5xx error codes.Type: stringDefault: 400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 393
      },
      "default": "400-importance: medium"
    },
    {
      "name": "regex.patterns",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 394,
      "display_name": "regex.patterns",
      "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but they must be separated byregex.separator. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 394
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.replacements",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 395,
      "display_name": "regex.replacements",
      "documentation": "Regex replacements to use with the patterns inregex.patterns.  Multiple replacements can be specified, but they must be separated byregex.separator.${key}and${topic}can be used here. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 395
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 396,
      "display_name": "regex.separator",
      "documentation": "Separator character used inregex.patternsandregex.replacementsproperty. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ~Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 396
      },
      "default": "~importance: high"
    },
    {
      "name": "request.body.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 397,
      "display_name": "request.body.format",
      "documentation": "Used to produce request body in either JSON or String format.Type: stringDefault: stringValid Values: one of [string, json]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 397
      },
      "default": "stringvalid values: one of [string, json]importance: medium"
    },
    {
      "name": "batch.key.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 398,
      "display_name": "batch.key.pattern",
      "documentation": "Pattern used to build the key for a given batch.${key}and${topic}can be used to include message attributes here.Type: stringDefault: someKeyImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 398
      },
      "default": "somekeyimportance: high"
    },
    {
      "name": "batch.max.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 399,
      "display_name": "batch.max.size",
      "documentation": "The number of records accumulated in a batch before the HTTP API is invoked.\nNote that batching is disabled if you usetemplate parametersother than$keyand$topic.Type: intDefault: 1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 399
      },
      "default": "1importance: high"
    },
    {
      "name": "batch.prefix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 400,
      "display_name": "batch.prefix",
      "documentation": "The prefix added to record batches. This is applied once at the beginning of\nthe batch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 400
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.suffix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 401,
      "display_name": "batch.suffix",
      "documentation": "The suffix added to record batches. This is applied once at the end of the\nbatch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 401
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 402,
      "display_name": "batch.separator",
      "documentation": "Separator for records in a batch. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ,Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 402
      },
      "default": ",importance: high"
    },
    {
      "name": "batch.json.as.array",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 403,
      "display_name": "batch.json.as.array",
      "documentation": "Whether or not to use an array to bundle json records.\nOnly used whenrequest.body.formatis set tojson.\nThis can be disabled only whenbatch.max.sizeis set to 1.Type: booleanDefault: trueImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 403
      },
      "default": "trueimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 404,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 404
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 405,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 405
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 406,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 406
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 407,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 407
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 408,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 408
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 409,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 409
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 410,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 410
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 411,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 411
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 412,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 412
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 413,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 413
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 414,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 414
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 415,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 415
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 416,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 416
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 417,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 417
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 418,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 418
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 419,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 419
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 420,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 420
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 421,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 421
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 422,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 422
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 423,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 423
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 424,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 424
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 425,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 425
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.api.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 426,
      "display_name": "http.api.url",
      "documentation": "The HTTP API URL.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 426
      }
    },
    {
      "name": "request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 427,
      "display_name": "request.method",
      "documentation": "The HTTP request method.Type: stringDefault:POSTValid Values:POST,PUT, orPATCHImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 427
      },
      "default": "postvalid values:post,put, orpatchimportance: high"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 428,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a non-null key and a null value (that is, Kafka tombstone records). Valid options areignore,delete,logandfail.failThrows aNullRecordExceptionand will be handled as perbehavior.on.errorconfiguration.logLogs the record coordinates and key.ignoreContinues to process next set of records. when records with null value encountered.deleteDeletes the record by executing delete http request when records with null value encountered.Type: stringDefault: ignoreValid Values: one of [fail, log, ignore, delete]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 428
      },
      "default": "ignorevalid values: one of [fail, log, ignore, delete]importance: low"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 429,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for handling response from HTTP requests. Must be configured to one of the following:failStops the connector when an error occurs.ignoreContinues to process next set of records. when error occurs.logLogs the error message to application logs when error occurs and continues to process next set of records.Type: stringDefault: failValid Values: one of [fail, log, ignore]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 429
      },
      "default": "failvalid values: one of [fail, log, ignore]importance: low"
    },
    {
      "name": "report.errors.as",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 430,
      "display_name": "report.errors.as",
      "documentation": "Dictates the content of records produced to the error topic. If set toerror_string, the value would be a human readable string describing the\nfailure. The value will include some or all of the following information if\navailable:HTTP response codeReason phraseSubmitted payloadURLResponse contentException and error messageIf set tohttp_response, the value would be the plain response content for the\nrequest which failed to write the record. In both modes, any information about\nthe failure will also be included in the error records headers.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 430
      }
    },
    {
      "name": "headers",
      "type": "APPLICATION",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 431,
      "display_name": "headers",
      "documentation": "HTTP headers to be included in all requests. Individual headers should be\nseparated by theheader.separator.Example:\"headers\":\"Content-Type:application/json|Accept:application/json\"Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: highNote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviaThe connector also does not allow the following header prefixes:proxy-secx-forwarded-",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 431
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: highnote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviathe connector also does not allow the following header prefixes:proxy-secx-forwarded-"
    },
    {
      "name": "header.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 432,
      "display_name": "header.separator",
      "documentation": "Separator character used inheadersproperty.Type: stringDefault: |Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 432
      },
      "default": "|importance: high"
    },
    {
      "name": "http.connect.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 433,
      "display_name": "http.connect.timeout.ms",
      "documentation": "Time to wait for a connection to be established.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 433
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.request.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 434,
      "display_name": "http.request.timeout.ms",
      "documentation": "Time to wait for a request response to arrive.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 434
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 435,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 435
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 436,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 436
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 437,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 437
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 438,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 438
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "deletes.send.in.order",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 439,
      "display_name": "deletes.send.in.order",
      "documentation": "A flag denoting whether delete requests for tombstone records should be sent\nin order. By default, the connector sends a delete request immediately after\nit encounters a tombstone record, while non-tombstone records are batched and\nsent only when the batch is full. To override this default behavior and send\ntombstone records in order before processing the next set of records, setdeletes.send.in.ordertotrue. Setting this property totrueensures all tombstone and non-tombstone records are sent in order. Note that\nthis configuration property is supported in versions 1.7.5 and later.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 439
      },
      "default": "falseimportance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 440,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 440
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 441,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 441
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 442,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 442
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 443,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 443
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 444,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 444
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 445,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 445
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 446,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 446
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 447,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 447
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 448,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 448
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 449,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 449
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 450,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 450
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 451,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 451
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 452,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 452
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 453,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 453
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 454,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 454
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 455,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 455
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 456,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 456
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 457,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 457
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 458,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 458
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 459,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 459
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 460,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 460
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 461,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 461
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 462,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 462
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 463,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 463
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 464,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 464
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 465,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 465
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 466,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent in body as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 466
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 467,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token. The default value isany. You can set this property to the desired value. If you don\u00e2\u0080\u0099t wantanyto be passed to the endpoint, you can set the value to an empty string.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 467
      },
      "default": "anyimportance: low"
    },
    {
      "name": "oauth2.client.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 468,
      "display_name": "oauth2.client.headers",
      "documentation": "The HTTP headers to include in each request to the OAuth 2 client endpoint. You\nshould separate individual headers using theoauth2.client.header.separatorproperty. Note that if you add theContent-Typeheader, the connector will override the value withapplication/x-www-form-urlencoded.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 468
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "oauth2.client.header.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 469,
      "display_name": "oauth2.client.header.separator",
      "documentation": "The separator character used in theoauth2.client.headersconfiguration\nproperty.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 469
      },
      "default": "|importance: low"
    },
    {
      "name": "oauth2.jwt.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 470,
      "display_name": "oauth2.jwt.enabled",
      "documentation": "Whether to generate and add a JSON Web Token (JWT) token to a request. If set\ntotrue, the JWT token will be added as ajwt_tokenrequest parameter.\nNote that you must setoauth2.client.auth.modetourlfor this\nproperty to work.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 470
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.path",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 471,
      "display_name": "oauth2.jwt.keystore.path",
      "documentation": "The path to the keystore containing the key to use to generate a JWT.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 471
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 472,
      "display_name": "oauth2.jwt.keystore.password",
      "documentation": "The password to use to access the JWT keystore.Type: passwordDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 472
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 473,
      "display_name": "oauth2.jwt.keystore.type",
      "documentation": "The JWT keystore type. You can set the keystore type toJKSorPKCS12.Type: stringDefault:JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 473
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "oauth2.jwt.claimset",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 474,
      "display_name": "oauth2.jwt.claimset",
      "documentation": "A JSON string containingJWT claims.\nNote that the issued at time (iat) will be set by connector to the JWT\ncreation time\u00e2\u0080\u0093current time\u00e2\u0080\u0093and expiry (exp) will be set to 5 minutes from\ntime of issue. Additionally, the connector will setjtito a random\nstring. Any values you set for these fields will be overridden by connector.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 474
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.signature.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 475,
      "display_name": "oauth2.jwt.signature.algorithm",
      "documentation": "The algorithm to use for signing claims.Type: stringDefault:rs256Valid values:rs256Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 475
      },
      "default": "rs256valid values:rs256importance: low"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 476,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 5Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 476
      },
      "default": "5valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 477,
      "display_name": "retry.backoff.ms",
      "documentation": "The initial duration in milliseconds to wait following an error before a retry\nattempt is made. Subsequent backoffs will be exponentially larger than the\nfirst duration. Note thatretry.backoff.msis the initial backoff before\nretrying. After that, the connector will retry using exponential jitter. For\nmore details about exponential jitter, seeBetter Retries with Exponential\nBackoff and Jitter.Type: intDefault: 3000Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 477
      },
      "default": "3000valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 478,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. Comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to 400.400-500includes codes from 400 to 500,\nincluding 500. Multiple ranges and single codes can be specified together to\nachieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUT, and\nall 5xx error codes.Type: stringDefault: 400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 478
      },
      "default": "400-importance: medium"
    },
    {
      "name": "regex.patterns",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 479,
      "display_name": "regex.patterns",
      "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but they must be separated byregex.separator. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 479
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.replacements",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 480,
      "display_name": "regex.replacements",
      "documentation": "Regex replacements to use with the patterns inregex.patterns.  Multiple replacements can be specified, but they must be separated byregex.separator.${key}and${topic}can be used here. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 480
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 481,
      "display_name": "regex.separator",
      "documentation": "Separator character used inregex.patternsandregex.replacementsproperty. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ~Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 481
      },
      "default": "~importance: high"
    },
    {
      "name": "request.body.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 482,
      "display_name": "request.body.format",
      "documentation": "Used to produce request body in either JSON or String format.Type: stringDefault: stringValid Values: one of [string, json]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 482
      },
      "default": "stringvalid values: one of [string, json]importance: medium"
    },
    {
      "name": "batch.key.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 483,
      "display_name": "batch.key.pattern",
      "documentation": "Pattern used to build the key for a given batch.${key}and${topic}can be used to include message attributes here.Type: stringDefault: someKeyImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 483
      },
      "default": "somekeyimportance: high"
    },
    {
      "name": "batch.max.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 484,
      "display_name": "batch.max.size",
      "documentation": "The number of records accumulated in a batch before the HTTP API is invoked.\nNote that batching is disabled if you usetemplate parametersother than$keyand$topic.Type: intDefault: 1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 484
      },
      "default": "1importance: high"
    },
    {
      "name": "batch.prefix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 485,
      "display_name": "batch.prefix",
      "documentation": "The prefix added to record batches. This is applied once at the beginning of\nthe batch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 485
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.suffix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 486,
      "display_name": "batch.suffix",
      "documentation": "The suffix added to record batches. This is applied once at the end of the\nbatch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 486
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 487,
      "display_name": "batch.separator",
      "documentation": "Separator for records in a batch. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ,Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 487
      },
      "default": ",importance: high"
    },
    {
      "name": "batch.json.as.array",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 488,
      "display_name": "batch.json.as.array",
      "documentation": "Whether or not to use an array to bundle json records.\nOnly used whenrequest.body.formatis set tojson.\nThis can be disabled only whenbatch.max.sizeis set to 1.Type: booleanDefault: trueImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 488
      },
      "default": "trueimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 489,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 489
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 490,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 490
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 491,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 491
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 492,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 492
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 493,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 493
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 494,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 494
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 495,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 495
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 496,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 496
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 497,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 497
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 498,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 498
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 499,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 499
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 500,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 500
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 501,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 501
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 502,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 502
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 503,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 503
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 504,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 504
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 505,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 505
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 506,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 506
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 507,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 507
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 508,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 508
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 509,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 509
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 510,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 510
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.api.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 511,
      "display_name": "http.api.url",
      "documentation": "The HTTP API URL.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 511
      }
    },
    {
      "name": "request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 512,
      "display_name": "request.method",
      "documentation": "The HTTP request method.Type: stringDefault:POSTValid Values:POST,PUT, orPATCHImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 512
      },
      "default": "postvalid values:post,put, orpatchimportance: high"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 513,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a non-null key and a null value (that is, Kafka tombstone records). Valid options areignore,delete,logandfail.failThrows aNullRecordExceptionand will be handled as perbehavior.on.errorconfiguration.logLogs the record coordinates and key.ignoreContinues to process next set of records. when records with null value encountered.deleteDeletes the record by executing delete http request when records with null value encountered.Type: stringDefault: ignoreValid Values: one of [fail, log, ignore, delete]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 513
      },
      "default": "ignorevalid values: one of [fail, log, ignore, delete]importance: low"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 514,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for handling response from HTTP requests. Must be configured to one of the following:failStops the connector when an error occurs.ignoreContinues to process next set of records. when error occurs.logLogs the error message to application logs when error occurs and continues to process next set of records.Type: stringDefault: failValid Values: one of [fail, log, ignore]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 514
      },
      "default": "failvalid values: one of [fail, log, ignore]importance: low"
    },
    {
      "name": "report.errors.as",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 515,
      "display_name": "report.errors.as",
      "documentation": "Dictates the content of records produced to the error topic. If set toerror_string, the value would be a human readable string describing the\nfailure. The value will include some or all of the following information if\navailable:HTTP response codeReason phraseSubmitted payloadURLResponse contentException and error messageIf set tohttp_response, the value would be the plain response content for the\nrequest which failed to write the record. In both modes, any information about\nthe failure will also be included in the error records headers.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 515
      }
    },
    {
      "name": "headers",
      "type": "APPLICATION",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 516,
      "display_name": "headers",
      "documentation": "HTTP headers to be included in all requests. Individual headers should be\nseparated by theheader.separator.Example:\"headers\":\"Content-Type:application/json|Accept:application/json\"Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: highNote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviaThe connector also does not allow the following header prefixes:proxy-secx-forwarded-",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 516
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: highnote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviathe connector also does not allow the following header prefixes:proxy-secx-forwarded-"
    },
    {
      "name": "header.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 517,
      "display_name": "header.separator",
      "documentation": "Separator character used inheadersproperty.Type: stringDefault: |Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 517
      },
      "default": "|importance: high"
    },
    {
      "name": "http.connect.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 518,
      "display_name": "http.connect.timeout.ms",
      "documentation": "Time to wait for a connection to be established.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 518
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.request.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 519,
      "display_name": "http.request.timeout.ms",
      "documentation": "Time to wait for a request response to arrive.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 519
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 520,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 520
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 521,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 521
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 522,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 522
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 523,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 523
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "deletes.send.in.order",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 524,
      "display_name": "deletes.send.in.order",
      "documentation": "A flag denoting whether delete requests for tombstone records should be sent\nin order. By default, the connector sends a delete request immediately after\nit encounters a tombstone record, while non-tombstone records are batched and\nsent only when the batch is full. To override this default behavior and send\ntombstone records in order before processing the next set of records, setdeletes.send.in.ordertotrue. Setting this property totrueensures all tombstone and non-tombstone records are sent in order. Note that\nthis configuration property is supported in versions 1.7.5 and later.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 524
      },
      "default": "falseimportance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 525,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 525
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 526,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 526
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 527,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 527
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 528,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 528
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 529,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 529
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 530,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 530
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 531,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 531
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 532,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 532
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 533,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 533
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 534,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 534
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 535,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 535
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 536,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 536
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 537,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 537
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 538,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 538
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 539,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 539
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 540,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 540
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 541,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 541
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 542,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 542
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 543,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 543
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 544,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 544
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 545,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 545
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 546,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 546
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 547,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 547
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 548,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 548
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 549,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 549
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 550,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 550
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 551,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent in body as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 551
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 552,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token. The default value isany. You can set this property to the desired value. If you don\u00e2\u0080\u0099t wantanyto be passed to the endpoint, you can set the value to an empty string.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 552
      },
      "default": "anyimportance: low"
    },
    {
      "name": "oauth2.client.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 553,
      "display_name": "oauth2.client.headers",
      "documentation": "The HTTP headers to include in each request to the OAuth 2 client endpoint. You\nshould separate individual headers using theoauth2.client.header.separatorproperty. Note that if you add theContent-Typeheader, the connector will override the value withapplication/x-www-form-urlencoded.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 553
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "oauth2.client.header.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 554,
      "display_name": "oauth2.client.header.separator",
      "documentation": "The separator character used in theoauth2.client.headersconfiguration\nproperty.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 554
      },
      "default": "|importance: low"
    },
    {
      "name": "oauth2.jwt.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 555,
      "display_name": "oauth2.jwt.enabled",
      "documentation": "Whether to generate and add a JSON Web Token (JWT) token to a request. If set\ntotrue, the JWT token will be added as ajwt_tokenrequest parameter.\nNote that you must setoauth2.client.auth.modetourlfor this\nproperty to work.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 555
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.path",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 556,
      "display_name": "oauth2.jwt.keystore.path",
      "documentation": "The path to the keystore containing the key to use to generate a JWT.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 556
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 557,
      "display_name": "oauth2.jwt.keystore.password",
      "documentation": "The password to use to access the JWT keystore.Type: passwordDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 557
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 558,
      "display_name": "oauth2.jwt.keystore.type",
      "documentation": "The JWT keystore type. You can set the keystore type toJKSorPKCS12.Type: stringDefault:JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 558
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "oauth2.jwt.claimset",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 559,
      "display_name": "oauth2.jwt.claimset",
      "documentation": "A JSON string containingJWT claims.\nNote that the issued at time (iat) will be set by connector to the JWT\ncreation time\u00e2\u0080\u0093current time\u00e2\u0080\u0093and expiry (exp) will be set to 5 minutes from\ntime of issue. Additionally, the connector will setjtito a random\nstring. Any values you set for these fields will be overridden by connector.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 559
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.signature.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 560,
      "display_name": "oauth2.jwt.signature.algorithm",
      "documentation": "The algorithm to use for signing claims.Type: stringDefault:rs256Valid values:rs256Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 560
      },
      "default": "rs256valid values:rs256importance: low"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 561,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 5Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 561
      },
      "default": "5valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 562,
      "display_name": "retry.backoff.ms",
      "documentation": "The initial duration in milliseconds to wait following an error before a retry\nattempt is made. Subsequent backoffs will be exponentially larger than the\nfirst duration. Note thatretry.backoff.msis the initial backoff before\nretrying. After that, the connector will retry using exponential jitter. For\nmore details about exponential jitter, seeBetter Retries with Exponential\nBackoff and Jitter.Type: intDefault: 3000Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 562
      },
      "default": "3000valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 563,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. Comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to 400.400-500includes codes from 400 to 500,\nincluding 500. Multiple ranges and single codes can be specified together to\nachieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUT, and\nall 5xx error codes.Type: stringDefault: 400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 563
      },
      "default": "400-importance: medium"
    },
    {
      "name": "regex.patterns",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 564,
      "display_name": "regex.patterns",
      "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but they must be separated byregex.separator. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 564
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.replacements",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 565,
      "display_name": "regex.replacements",
      "documentation": "Regex replacements to use with the patterns inregex.patterns.  Multiple replacements can be specified, but they must be separated byregex.separator.${key}and${topic}can be used here. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 565
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 566,
      "display_name": "regex.separator",
      "documentation": "Separator character used inregex.patternsandregex.replacementsproperty. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ~Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 566
      },
      "default": "~importance: high"
    },
    {
      "name": "request.body.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 567,
      "display_name": "request.body.format",
      "documentation": "Used to produce request body in either JSON or String format.Type: stringDefault: stringValid Values: one of [string, json]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 567
      },
      "default": "stringvalid values: one of [string, json]importance: medium"
    },
    {
      "name": "batch.key.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 568,
      "display_name": "batch.key.pattern",
      "documentation": "Pattern used to build the key for a given batch.${key}and${topic}can be used to include message attributes here.Type: stringDefault: someKeyImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 568
      },
      "default": "somekeyimportance: high"
    },
    {
      "name": "batch.max.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 569,
      "display_name": "batch.max.size",
      "documentation": "The number of records accumulated in a batch before the HTTP API is invoked.\nNote that batching is disabled if you usetemplate parametersother than$keyand$topic.Type: intDefault: 1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 569
      },
      "default": "1importance: high"
    },
    {
      "name": "batch.prefix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 570,
      "display_name": "batch.prefix",
      "documentation": "The prefix added to record batches. This is applied once at the beginning of\nthe batch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 570
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.suffix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 571,
      "display_name": "batch.suffix",
      "documentation": "The suffix added to record batches. This is applied once at the end of the\nbatch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 571
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 572,
      "display_name": "batch.separator",
      "documentation": "Separator for records in a batch. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ,Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 572
      },
      "default": ",importance: high"
    },
    {
      "name": "batch.json.as.array",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 573,
      "display_name": "batch.json.as.array",
      "documentation": "Whether or not to use an array to bundle json records.\nOnly used whenrequest.body.formatis set tojson.\nThis can be disabled only whenbatch.max.sizeis set to 1.Type: booleanDefault: trueImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 573
      },
      "default": "trueimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 574,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 574
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 575,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 575
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 576,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 576
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 577,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 577
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 578,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 578
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 579,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 579
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 580,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 580
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 581,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 581
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 582,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 582
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 583,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 583
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 584,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 584
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 585,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 585
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 586,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 586
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 587,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 587
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 588,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 588
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 589,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 589
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 590,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 590
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 591,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 591
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 592,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 592
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 593,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 593
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 594,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 594
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 595,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 595
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.api.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 596,
      "display_name": "http.api.url",
      "documentation": "The HTTP API URL.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 596
      }
    },
    {
      "name": "request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 597,
      "display_name": "request.method",
      "documentation": "The HTTP request method.Type: stringDefault:POSTValid Values:POST,PUT, orPATCHImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 597
      },
      "default": "postvalid values:post,put, orpatchimportance: high"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 598,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a non-null key and a null value (that is, Kafka tombstone records). Valid options areignore,delete,logandfail.failThrows aNullRecordExceptionand will be handled as perbehavior.on.errorconfiguration.logLogs the record coordinates and key.ignoreContinues to process next set of records. when records with null value encountered.deleteDeletes the record by executing delete http request when records with null value encountered.Type: stringDefault: ignoreValid Values: one of [fail, log, ignore, delete]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 598
      },
      "default": "ignorevalid values: one of [fail, log, ignore, delete]importance: low"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 599,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for handling response from HTTP requests. Must be configured to one of the following:failStops the connector when an error occurs.ignoreContinues to process next set of records. when error occurs.logLogs the error message to application logs when error occurs and continues to process next set of records.Type: stringDefault: failValid Values: one of [fail, log, ignore]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 599
      },
      "default": "failvalid values: one of [fail, log, ignore]importance: low"
    },
    {
      "name": "report.errors.as",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 600,
      "display_name": "report.errors.as",
      "documentation": "Dictates the content of records produced to the error topic. If set toerror_string, the value would be a human readable string describing the\nfailure. The value will include some or all of the following information if\navailable:HTTP response codeReason phraseSubmitted payloadURLResponse contentException and error messageIf set tohttp_response, the value would be the plain response content for the\nrequest which failed to write the record. In both modes, any information about\nthe failure will also be included in the error records headers.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 600
      }
    },
    {
      "name": "headers",
      "type": "APPLICATION",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 601,
      "display_name": "headers",
      "documentation": "HTTP headers to be included in all requests. Individual headers should be\nseparated by theheader.separator.Example:\"headers\":\"Content-Type:application/json|Accept:application/json\"Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: highNote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviaThe connector also does not allow the following header prefixes:proxy-secx-forwarded-",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 601
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: highnote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviathe connector also does not allow the following header prefixes:proxy-secx-forwarded-"
    },
    {
      "name": "header.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 602,
      "display_name": "header.separator",
      "documentation": "Separator character used inheadersproperty.Type: stringDefault: |Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 602
      },
      "default": "|importance: high"
    },
    {
      "name": "http.connect.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 603,
      "display_name": "http.connect.timeout.ms",
      "documentation": "Time to wait for a connection to be established.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 603
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.request.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 604,
      "display_name": "http.request.timeout.ms",
      "documentation": "Time to wait for a request response to arrive.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 604
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 605,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 605
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 606,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 606
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 607,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 607
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 608,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 608
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "deletes.send.in.order",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 609,
      "display_name": "deletes.send.in.order",
      "documentation": "A flag denoting whether delete requests for tombstone records should be sent\nin order. By default, the connector sends a delete request immediately after\nit encounters a tombstone record, while non-tombstone records are batched and\nsent only when the batch is full. To override this default behavior and send\ntombstone records in order before processing the next set of records, setdeletes.send.in.ordertotrue. Setting this property totrueensures all tombstone and non-tombstone records are sent in order. Note that\nthis configuration property is supported in versions 1.7.5 and later.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 609
      },
      "default": "falseimportance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 610,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 610
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 611,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 611
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 612,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 612
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 613,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 613
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 614,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 614
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 615,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 615
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 616,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 616
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 617,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 617
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 618,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 618
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 619,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 619
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 620,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 620
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 621,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 621
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 622,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 622
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 623,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 623
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 624,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 624
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 625,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 625
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 626,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 626
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 627,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 627
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 628,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 628
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 629,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 629
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 630,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 630
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 631,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 631
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 632,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 632
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 633,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 633
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 634,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 634
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 635,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 635
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 636,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent in body as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 636
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 637,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token. The default value isany. You can set this property to the desired value. If you don\u00e2\u0080\u0099t wantanyto be passed to the endpoint, you can set the value to an empty string.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 637
      },
      "default": "anyimportance: low"
    },
    {
      "name": "oauth2.client.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 638,
      "display_name": "oauth2.client.headers",
      "documentation": "The HTTP headers to include in each request to the OAuth 2 client endpoint. You\nshould separate individual headers using theoauth2.client.header.separatorproperty. Note that if you add theContent-Typeheader, the connector will override the value withapplication/x-www-form-urlencoded.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 638
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "oauth2.client.header.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 639,
      "display_name": "oauth2.client.header.separator",
      "documentation": "The separator character used in theoauth2.client.headersconfiguration\nproperty.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 639
      },
      "default": "|importance: low"
    },
    {
      "name": "oauth2.jwt.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 640,
      "display_name": "oauth2.jwt.enabled",
      "documentation": "Whether to generate and add a JSON Web Token (JWT) token to a request. If set\ntotrue, the JWT token will be added as ajwt_tokenrequest parameter.\nNote that you must setoauth2.client.auth.modetourlfor this\nproperty to work.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 640
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.path",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 641,
      "display_name": "oauth2.jwt.keystore.path",
      "documentation": "The path to the keystore containing the key to use to generate a JWT.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 641
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 642,
      "display_name": "oauth2.jwt.keystore.password",
      "documentation": "The password to use to access the JWT keystore.Type: passwordDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 642
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 643,
      "display_name": "oauth2.jwt.keystore.type",
      "documentation": "The JWT keystore type. You can set the keystore type toJKSorPKCS12.Type: stringDefault:JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 643
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "oauth2.jwt.claimset",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 644,
      "display_name": "oauth2.jwt.claimset",
      "documentation": "A JSON string containingJWT claims.\nNote that the issued at time (iat) will be set by connector to the JWT\ncreation time\u00e2\u0080\u0093current time\u00e2\u0080\u0093and expiry (exp) will be set to 5 minutes from\ntime of issue. Additionally, the connector will setjtito a random\nstring. Any values you set for these fields will be overridden by connector.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 644
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.signature.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 645,
      "display_name": "oauth2.jwt.signature.algorithm",
      "documentation": "The algorithm to use for signing claims.Type: stringDefault:rs256Valid values:rs256Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 645
      },
      "default": "rs256valid values:rs256importance: low"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 646,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 5Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 646
      },
      "default": "5valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 647,
      "display_name": "retry.backoff.ms",
      "documentation": "The initial duration in milliseconds to wait following an error before a retry\nattempt is made. Subsequent backoffs will be exponentially larger than the\nfirst duration. Note thatretry.backoff.msis the initial backoff before\nretrying. After that, the connector will retry using exponential jitter. For\nmore details about exponential jitter, seeBetter Retries with Exponential\nBackoff and Jitter.Type: intDefault: 3000Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 647
      },
      "default": "3000valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 648,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. Comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to 400.400-500includes codes from 400 to 500,\nincluding 500. Multiple ranges and single codes can be specified together to\nachieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUT, and\nall 5xx error codes.Type: stringDefault: 400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 648
      },
      "default": "400-importance: medium"
    },
    {
      "name": "regex.patterns",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 649,
      "display_name": "regex.patterns",
      "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but they must be separated byregex.separator. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 649
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.replacements",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 650,
      "display_name": "regex.replacements",
      "documentation": "Regex replacements to use with the patterns inregex.patterns.  Multiple replacements can be specified, but they must be separated byregex.separator.${key}and${topic}can be used here. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 650
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 651,
      "display_name": "regex.separator",
      "documentation": "Separator character used inregex.patternsandregex.replacementsproperty. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ~Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 651
      },
      "default": "~importance: high"
    },
    {
      "name": "request.body.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 652,
      "display_name": "request.body.format",
      "documentation": "Used to produce request body in either JSON or String format.Type: stringDefault: stringValid Values: one of [string, json]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 652
      },
      "default": "stringvalid values: one of [string, json]importance: medium"
    },
    {
      "name": "batch.key.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 653,
      "display_name": "batch.key.pattern",
      "documentation": "Pattern used to build the key for a given batch.${key}and${topic}can be used to include message attributes here.Type: stringDefault: someKeyImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 653
      },
      "default": "somekeyimportance: high"
    },
    {
      "name": "batch.max.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 654,
      "display_name": "batch.max.size",
      "documentation": "The number of records accumulated in a batch before the HTTP API is invoked.\nNote that batching is disabled if you usetemplate parametersother than$keyand$topic.Type: intDefault: 1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 654
      },
      "default": "1importance: high"
    },
    {
      "name": "batch.prefix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 655,
      "display_name": "batch.prefix",
      "documentation": "The prefix added to record batches. This is applied once at the beginning of\nthe batch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 655
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.suffix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 656,
      "display_name": "batch.suffix",
      "documentation": "The suffix added to record batches. This is applied once at the end of the\nbatch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 656
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 657,
      "display_name": "batch.separator",
      "documentation": "Separator for records in a batch. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ,Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 657
      },
      "default": ",importance: high"
    },
    {
      "name": "batch.json.as.array",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 658,
      "display_name": "batch.json.as.array",
      "documentation": "Whether or not to use an array to bundle json records.\nOnly used whenrequest.body.formatis set tojson.\nThis can be disabled only whenbatch.max.sizeis set to 1.Type: booleanDefault: trueImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 658
      },
      "default": "trueimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 659,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 659
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 660,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 660
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 661,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 661
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 662,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 662
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 663,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 663
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 664,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 664
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 665,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 665
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 666,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 666
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 667,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 667
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 668,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 668
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 669,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 669
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 670,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 670
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 671,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 671
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 672,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 672
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 673,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 673
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 674,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 674
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 675,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 675
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 676,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 676
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 677,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 677
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 678,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 678
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 679,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 679
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 680,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 680
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.api.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 681,
      "display_name": "http.api.url",
      "documentation": "The HTTP API URL.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 681
      }
    },
    {
      "name": "request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 682,
      "display_name": "request.method",
      "documentation": "The HTTP request method.Type: stringDefault:POSTValid Values:POST,PUT, orPATCHImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 682
      },
      "default": "postvalid values:post,put, orpatchimportance: high"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 683,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a non-null key and a null value (that is, Kafka tombstone records). Valid options areignore,delete,logandfail.failThrows aNullRecordExceptionand will be handled as perbehavior.on.errorconfiguration.logLogs the record coordinates and key.ignoreContinues to process next set of records. when records with null value encountered.deleteDeletes the record by executing delete http request when records with null value encountered.Type: stringDefault: ignoreValid Values: one of [fail, log, ignore, delete]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 683
      },
      "default": "ignorevalid values: one of [fail, log, ignore, delete]importance: low"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 684,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for handling response from HTTP requests. Must be configured to one of the following:failStops the connector when an error occurs.ignoreContinues to process next set of records. when error occurs.logLogs the error message to application logs when error occurs and continues to process next set of records.Type: stringDefault: failValid Values: one of [fail, log, ignore]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 684
      },
      "default": "failvalid values: one of [fail, log, ignore]importance: low"
    },
    {
      "name": "report.errors.as",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 685,
      "display_name": "report.errors.as",
      "documentation": "Dictates the content of records produced to the error topic. If set toerror_string, the value would be a human readable string describing the\nfailure. The value will include some or all of the following information if\navailable:HTTP response codeReason phraseSubmitted payloadURLResponse contentException and error messageIf set tohttp_response, the value would be the plain response content for the\nrequest which failed to write the record. In both modes, any information about\nthe failure will also be included in the error records headers.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 685
      }
    },
    {
      "name": "headers",
      "type": "APPLICATION",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 686,
      "display_name": "headers",
      "documentation": "HTTP headers to be included in all requests. Individual headers should be\nseparated by theheader.separator.Example:\"headers\":\"Content-Type:application/json|Accept:application/json\"Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: highNote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviaThe connector also does not allow the following header prefixes:proxy-secx-forwarded-",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 686
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: highnote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviathe connector also does not allow the following header prefixes:proxy-secx-forwarded-"
    },
    {
      "name": "header.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 687,
      "display_name": "header.separator",
      "documentation": "Separator character used inheadersproperty.Type: stringDefault: |Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 687
      },
      "default": "|importance: high"
    },
    {
      "name": "http.connect.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 688,
      "display_name": "http.connect.timeout.ms",
      "documentation": "Time to wait for a connection to be established.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 688
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.request.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 689,
      "display_name": "http.request.timeout.ms",
      "documentation": "Time to wait for a request response to arrive.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 689
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 690,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 690
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 691,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 691
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 692,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 692
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 693,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 693
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "deletes.send.in.order",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 694,
      "display_name": "deletes.send.in.order",
      "documentation": "A flag denoting whether delete requests for tombstone records should be sent\nin order. By default, the connector sends a delete request immediately after\nit encounters a tombstone record, while non-tombstone records are batched and\nsent only when the batch is full. To override this default behavior and send\ntombstone records in order before processing the next set of records, setdeletes.send.in.ordertotrue. Setting this property totrueensures all tombstone and non-tombstone records are sent in order. Note that\nthis configuration property is supported in versions 1.7.5 and later.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 694
      },
      "default": "falseimportance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 695,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 695
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 696,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 696
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 697,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 697
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 698,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 698
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 699,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 699
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 700,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 700
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 701,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 701
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 702,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 702
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 703,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 703
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 704,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 704
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 705,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 705
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 706,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 706
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 707,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 707
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 708,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 708
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 709,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 709
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 710,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 710
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 711,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 711
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 712,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 712
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 713,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 713
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 714,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 714
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 715,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 715
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 716,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 716
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 717,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 717
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 718,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 718
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 719,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 719
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 720,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 720
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 721,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent in body as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 721
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 722,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token. The default value isany. You can set this property to the desired value. If you don\u00e2\u0080\u0099t wantanyto be passed to the endpoint, you can set the value to an empty string.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 722
      },
      "default": "anyimportance: low"
    },
    {
      "name": "oauth2.client.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 723,
      "display_name": "oauth2.client.headers",
      "documentation": "The HTTP headers to include in each request to the OAuth 2 client endpoint. You\nshould separate individual headers using theoauth2.client.header.separatorproperty. Note that if you add theContent-Typeheader, the connector will override the value withapplication/x-www-form-urlencoded.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 723
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "oauth2.client.header.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 724,
      "display_name": "oauth2.client.header.separator",
      "documentation": "The separator character used in theoauth2.client.headersconfiguration\nproperty.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 724
      },
      "default": "|importance: low"
    },
    {
      "name": "oauth2.jwt.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 725,
      "display_name": "oauth2.jwt.enabled",
      "documentation": "Whether to generate and add a JSON Web Token (JWT) token to a request. If set\ntotrue, the JWT token will be added as ajwt_tokenrequest parameter.\nNote that you must setoauth2.client.auth.modetourlfor this\nproperty to work.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 725
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.path",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 726,
      "display_name": "oauth2.jwt.keystore.path",
      "documentation": "The path to the keystore containing the key to use to generate a JWT.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 726
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 727,
      "display_name": "oauth2.jwt.keystore.password",
      "documentation": "The password to use to access the JWT keystore.Type: passwordDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 727
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 728,
      "display_name": "oauth2.jwt.keystore.type",
      "documentation": "The JWT keystore type. You can set the keystore type toJKSorPKCS12.Type: stringDefault:JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 728
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "oauth2.jwt.claimset",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 729,
      "display_name": "oauth2.jwt.claimset",
      "documentation": "A JSON string containingJWT claims.\nNote that the issued at time (iat) will be set by connector to the JWT\ncreation time\u00e2\u0080\u0093current time\u00e2\u0080\u0093and expiry (exp) will be set to 5 minutes from\ntime of issue. Additionally, the connector will setjtito a random\nstring. Any values you set for these fields will be overridden by connector.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 729
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.signature.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 730,
      "display_name": "oauth2.jwt.signature.algorithm",
      "documentation": "The algorithm to use for signing claims.Type: stringDefault:rs256Valid values:rs256Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 730
      },
      "default": "rs256valid values:rs256importance: low"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 731,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 5Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 731
      },
      "default": "5valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 732,
      "display_name": "retry.backoff.ms",
      "documentation": "The initial duration in milliseconds to wait following an error before a retry\nattempt is made. Subsequent backoffs will be exponentially larger than the\nfirst duration. Note thatretry.backoff.msis the initial backoff before\nretrying. After that, the connector will retry using exponential jitter. For\nmore details about exponential jitter, seeBetter Retries with Exponential\nBackoff and Jitter.Type: intDefault: 3000Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 732
      },
      "default": "3000valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 733,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. Comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to 400.400-500includes codes from 400 to 500,\nincluding 500. Multiple ranges and single codes can be specified together to\nachieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUT, and\nall 5xx error codes.Type: stringDefault: 400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 733
      },
      "default": "400-importance: medium"
    },
    {
      "name": "regex.patterns",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 734,
      "display_name": "regex.patterns",
      "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but they must be separated byregex.separator. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 734
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.replacements",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 735,
      "display_name": "regex.replacements",
      "documentation": "Regex replacements to use with the patterns inregex.patterns.  Multiple replacements can be specified, but they must be separated byregex.separator.${key}and${topic}can be used here. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 735
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 736,
      "display_name": "regex.separator",
      "documentation": "Separator character used inregex.patternsandregex.replacementsproperty. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ~Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 736
      },
      "default": "~importance: high"
    },
    {
      "name": "request.body.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 737,
      "display_name": "request.body.format",
      "documentation": "Used to produce request body in either JSON or String format.Type: stringDefault: stringValid Values: one of [string, json]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 737
      },
      "default": "stringvalid values: one of [string, json]importance: medium"
    },
    {
      "name": "batch.key.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 738,
      "display_name": "batch.key.pattern",
      "documentation": "Pattern used to build the key for a given batch.${key}and${topic}can be used to include message attributes here.Type: stringDefault: someKeyImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 738
      },
      "default": "somekeyimportance: high"
    },
    {
      "name": "batch.max.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 739,
      "display_name": "batch.max.size",
      "documentation": "The number of records accumulated in a batch before the HTTP API is invoked.\nNote that batching is disabled if you usetemplate parametersother than$keyand$topic.Type: intDefault: 1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 739
      },
      "default": "1importance: high"
    },
    {
      "name": "batch.prefix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 740,
      "display_name": "batch.prefix",
      "documentation": "The prefix added to record batches. This is applied once at the beginning of\nthe batch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 740
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.suffix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 741,
      "display_name": "batch.suffix",
      "documentation": "The suffix added to record batches. This is applied once at the end of the\nbatch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 741
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 742,
      "display_name": "batch.separator",
      "documentation": "Separator for records in a batch. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ,Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 742
      },
      "default": ",importance: high"
    },
    {
      "name": "batch.json.as.array",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 743,
      "display_name": "batch.json.as.array",
      "documentation": "Whether or not to use an array to bundle json records.\nOnly used whenrequest.body.formatis set tojson.\nThis can be disabled only whenbatch.max.sizeis set to 1.Type: booleanDefault: trueImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 743
      },
      "default": "trueimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 744,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 744
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 745,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 745
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 746,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 746
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 747,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 747
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 748,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 748
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 749,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 749
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 750,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 750
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 751,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 751
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 752,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 752
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 753,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 753
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 754,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 754
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 755,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 755
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 756,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 756
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 757,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 757
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 758,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 758
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 759,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 759
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 760,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 760
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 761,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 761
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 762,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 762
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 763,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 763
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 764,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 764
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 765,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 765
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "http.api.url",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 766,
      "display_name": "http.api.url",
      "documentation": "The HTTP API URL.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 766
      }
    },
    {
      "name": "request.method",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 767,
      "display_name": "request.method",
      "documentation": "The HTTP request method.Type: stringDefault:POSTValid Values:POST,PUT, orPATCHImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 767
      },
      "default": "postvalid values:post,put, orpatchimportance: high"
    },
    {
      "name": "behavior.on.null.values",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 768,
      "display_name": "behavior.on.null.values",
      "documentation": "How to handle records with a non-null key and a null value (that is, Kafka tombstone records). Valid options areignore,delete,logandfail.failThrows aNullRecordExceptionand will be handled as perbehavior.on.errorconfiguration.logLogs the record coordinates and key.ignoreContinues to process next set of records. when records with null value encountered.deleteDeletes the record by executing delete http request when records with null value encountered.Type: stringDefault: ignoreValid Values: one of [fail, log, ignore, delete]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 768
      },
      "default": "ignorevalid values: one of [fail, log, ignore, delete]importance: low"
    },
    {
      "name": "behavior.on.error",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 769,
      "display_name": "behavior.on.error",
      "documentation": "Error handling behavior setting for handling response from HTTP requests. Must be configured to one of the following:failStops the connector when an error occurs.ignoreContinues to process next set of records. when error occurs.logLogs the error message to application logs when error occurs and continues to process next set of records.Type: stringDefault: failValid Values: one of [fail, log, ignore]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 769
      },
      "default": "failvalid values: one of [fail, log, ignore]importance: low"
    },
    {
      "name": "report.errors.as",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 770,
      "display_name": "report.errors.as",
      "documentation": "Dictates the content of records produced to the error topic. If set toerror_string, the value would be a human readable string describing the\nfailure. The value will include some or all of the following information if\navailable:HTTP response codeReason phraseSubmitted payloadURLResponse contentException and error messageIf set tohttp_response, the value would be the plain response content for the\nrequest which failed to write the record. In both modes, any information about\nthe failure will also be included in the error records headers.Type: stringImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 770
      }
    },
    {
      "name": "headers",
      "type": "APPLICATION",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 771,
      "display_name": "headers",
      "documentation": "HTTP headers to be included in all requests. Individual headers should be\nseparated by theheader.separator.Example:\"headers\":\"Content-Type:application/json|Accept:application/json\"Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: highNote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviaThe connector also does not allow the following header prefixes:proxy-secx-forwarded-",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 771
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: highnote that the connector does not allow the following headers:accept-charsetaccept-encodingaccess-control-request-headersaccess-control-request-methodconnectioncontent-lengthcookiecookie2datedntexpectfeature-policyhostkeep-aliveoriginreferertetrailertrailer-encodingupgradeviathe connector also does not allow the following header prefixes:proxy-secx-forwarded-"
    },
    {
      "name": "header.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 772,
      "display_name": "header.separator",
      "documentation": "Separator character used inheadersproperty.Type: stringDefault: |Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 772
      },
      "default": "|importance: high"
    },
    {
      "name": "http.connect.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 773,
      "display_name": "http.connect.timeout.ms",
      "documentation": "Time to wait for a connection to be established.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 773
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.request.timeout.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connection",
      "order_in_group": 774,
      "display_name": "http.request.timeout.ms",
      "documentation": "Time to wait for a request response to arrive.Type: intDefault: 30000Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 774
      },
      "default": "30000importance: medium"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 775,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP address of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 775
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 776,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 776
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 777,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 777
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Connection",
      "order_in_group": 778,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 778
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "deletes.send.in.order",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Connection",
      "order_in_group": 779,
      "display_name": "deletes.send.in.order",
      "documentation": "A flag denoting whether delete requests for tombstone records should be sent\nin order. By default, the connector sends a delete request immediately after\nit encounters a tombstone record, while non-tombstone records are batched and\nsent only when the batch is full. To override this default behavior and send\ntombstone records in order before processing the next set of records, setdeletes.send.in.ordertotrue. Setting this property totrueensures all tombstone and non-tombstone records are sent in order. Note that\nthis configuration property is supported in versions 1.7.5 and later.Type: booleanDefault: falseImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 779
      },
      "default": "falseimportance: low"
    },
    {
      "name": "reporter.result.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 780,
      "display_name": "reporter.result.topic.name",
      "documentation": "The name of the topic to produce records to after successfully processing a sink record. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-successValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 780
      },
      "default": "${connector}-successvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.result.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 781,
      "display_name": "reporter.result.topic.replication.factor",
      "documentation": "The replication factor of the result topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 781
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.result.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 782,
      "display_name": "reporter.result.topic.partitions",
      "documentation": "The number of partitions in the result topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 782
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.name",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 783,
      "display_name": "reporter.error.topic.name",
      "documentation": "The name of the topic to produce records to after each unsuccessful record sink attempt. Use${connector}within the pattern to specify the current connector name. Leave blank to disable error reporting behavior.Type: stringDefault: ${connector}-errorValid Values: Replacing ${connector} must be either Valid topic names that contain 1-249 ASCII alphanumeric,+,.,_and-characters.Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 783
      },
      "default": "${connector}-errorvalid values: replacing ${connector} must be either valid topic names that contain 1-249 ascii alphanumeric,+,.,_and-characters.importance: medium"
    },
    {
      "name": "reporter.error.topic.replication.factor",
      "type": "SHORTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 784,
      "display_name": "reporter.error.topic.replication.factor",
      "documentation": "The replication factor of the error topic when it is automatically created by this connector. This determines how many broker failures can be tolerated before data loss occurs. This should be 1 in development environments and ALWAYS at least 3 in production environments.Type: shortDefault: 3Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 784
      },
      "default": "3valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.error.topic.partitions",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 785,
      "display_name": "reporter.error.topic.partitions",
      "documentation": "The number of partitions in the error topic when it is automatically created by this connector. This number of partitions should be the same as the number of input partitions in order to handle the potential throughput.Type: intDefault: 1Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 785
      },
      "default": "1valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "reporter.bootstrap.servers",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Connect Reporter",
      "order_in_group": 786,
      "display_name": "reporter.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers regardless of which bootstrap servers are specified here. This list only impacts the initial hosts used to discover the full set of servers. This list should be in the formhost1:port1,host2:port2,..Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list does not need to contain the full set of servers. However, you may want to include more than one in case a server is down.Type: listValid Values: Non-empty listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 786
      }
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 787,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 787
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 788,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 788
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 789,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 789
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 790,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 790
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 791,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 791
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 792,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 792
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 793,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 793
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 794,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 794
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 795,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 795
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 796,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 796
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 797,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 797
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Connect Reporter",
      "order_in_group": 798,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 798
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Formatter",
      "order_in_group": 799,
      "display_name": "reporter.result.topic.key.format",
      "documentation": "The format in which the result report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 799
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.key.format.schemas.enable,reporter.result.topic.key.format.schemas.cache.size",
      "dependents": [
        "reporter.result.topic.key.format.schemas.enable",
        "reporter.result.topic.key.format.schemas.cache.size"
      ]
    },
    {
      "name": "reporter.result.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Formatter",
      "order_in_group": 800,
      "display_name": "reporter.result.topic.value.format",
      "documentation": "The format in which the result report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 800
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.result.topic.value.format.schemas.cache.size,reporter.result.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.result.topic.value.format.schemas.cache.size",
        "reporter.result.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.key.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Formatter",
      "order_in_group": 801,
      "display_name": "reporter.error.topic.key.format",
      "documentation": "The format in which the error report key is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 801
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.key.format.schemas.cache.size,reporter.error.topic.key.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.key.format.schemas.cache.size",
        "reporter.error.topic.key.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.error.topic.value.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Formatter",
      "order_in_group": 802,
      "display_name": "reporter.error.topic.value.format",
      "documentation": "The format in which the error report value is serialized.Type: stringDefault: jsonValid Values: one of [string, json]Importance: mediumDependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 802
      },
      "default": "jsonvalid values: one of [string, json]importance: mediumdependents:reporter.error.topic.value.format.schemas.cache.size,reporter.error.topic.value.format.schemas.enable",
      "dependents": [
        "reporter.error.topic.value.format.schemas.cache.size",
        "reporter.error.topic.value.format.schemas.enable"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 803,
      "display_name": "reporter.result.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 803
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 804,
      "display_name": "reporter.result.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 804
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.result.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 805,
      "display_name": "reporter.result.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 805
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.result.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 806,
      "display_name": "reporter.result.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 806
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.key.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 807,
      "display_name": "reporter.error.topic.key.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 807
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.key.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 808,
      "display_name": "reporter.error.topic.key.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 808
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "reporter.error.topic.value.format.schemas.cache.size",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 809,
      "display_name": "reporter.error.topic.value.format.schemas.cache.size",
      "documentation": "The maximum number of schemas that can be cached in the JSON formatter.Type: intDefault: 128Valid Values: [0,\u00e2\u0080\u00a6,2048]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 809
      },
      "default": "128valid values: [0,\u00e2\u0080\u00a6,2048]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "2048"
      ]
    },
    {
      "name": "reporter.error.topic.value.format.schemas.enable",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "JSON Formatter",
      "order_in_group": 810,
      "display_name": "reporter.error.topic.value.format.schemas.enable",
      "documentation": "Include schemas within each of the serialized values and keys.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 810
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "auth.type",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authorization",
      "order_in_group": 811,
      "display_name": "auth.type",
      "documentation": "Authentication type of the endpoint. Valid values areNONE,BASIC,OAUTH2(Client Credentials grant type only).Type: stringDefault: NONEImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 811
      },
      "default": "noneimportance: high"
    },
    {
      "name": "connection.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authorization",
      "order_in_group": 812,
      "display_name": "connection.user",
      "documentation": "The username to be used with an endpoint requiring authentication.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 812
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "connection.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authorization",
      "order_in_group": 813,
      "display_name": "connection.password",
      "documentation": "The password to be used with an endpoint requiring authentication.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 813
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.url",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authorization",
      "order_in_group": 814,
      "display_name": "oauth2.token.url",
      "documentation": "The URL to be used for fetching OAuth2 token. Client Credentials is the only supported grant type.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 814
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authorization",
      "order_in_group": 815,
      "display_name": "oauth2.client.id",
      "documentation": "The client id used when fetching OAuth2 token.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 815
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authorization",
      "order_in_group": 816,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching OAuth2 token.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 816
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "oauth2.token.property",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Authorization",
      "order_in_group": 817,
      "display_name": "oauth2.token.property",
      "documentation": "The name of the property containing the OAuth2 token returned by the http proxy. Default value isaccess_token.Type: stringDefault: access_tokenImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 817
      },
      "default": "access_tokenimportance: high"
    },
    {
      "name": "oauth2.client.auth.mode",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Authorization",
      "order_in_group": 818,
      "display_name": "oauth2.client.auth.mode",
      "documentation": "Specifies how to encodeclient_idandclient_secretin the OAuth2 authorization request. If set to \u00e2\u0080\u0098header\u00e2\u0080\u0099, the credentials are encoded as an'Authorization:Basic<base-64encodedclient_id:client_secret>'HTTP header. If set to \u00e2\u0080\u0098url\u00e2\u0080\u0099, thenclient_idandclient_secretare sent in body as URL encoded parameters.Type: stringDefault: headerValid Values: one of [header, url]Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 818
      },
      "default": "headervalid values: one of [header, url]importance: low"
    },
    {
      "name": "oauth2.client.scope",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Authorization",
      "order_in_group": 819,
      "display_name": "oauth2.client.scope",
      "documentation": "The scope used when fetching OAuth2 token. The default value isany. You can set this property to the desired value. If you don\u00e2\u0080\u0099t wantanyto be passed to the endpoint, you can set the value to an empty string.Type: stringDefault: anyImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 819
      },
      "default": "anyimportance: low"
    },
    {
      "name": "oauth2.client.headers",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Authorization",
      "order_in_group": 820,
      "display_name": "oauth2.client.headers",
      "documentation": "The HTTP headers to include in each request to the OAuth 2 client endpoint. You\nshould separate individual headers using theoauth2.client.header.separatorproperty. Note that if you add theContent-Typeheader, the connector will override the value withapplication/x-www-form-urlencoded.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 820
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "oauth2.client.header.separator",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Authorization",
      "order_in_group": 821,
      "display_name": "oauth2.client.header.separator",
      "documentation": "The separator character used in theoauth2.client.headersconfiguration\nproperty.Type: stringDefault:|Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 821
      },
      "default": "|importance: low"
    },
    {
      "name": "oauth2.jwt.enabled",
      "type": "BOOLEANDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Authorization",
      "order_in_group": 822,
      "display_name": "oauth2.jwt.enabled",
      "documentation": "Whether to generate and add a JSON Web Token (JWT) token to a request. If set\ntotrue, the JWT token will be added as ajwt_tokenrequest parameter.\nNote that you must setoauth2.client.auth.modetourlfor this\nproperty to work.Type: booleanDefault: falseImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 822
      },
      "default": "falseimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.path",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Authorization",
      "order_in_group": 823,
      "display_name": "oauth2.jwt.keystore.path",
      "documentation": "The path to the keystore containing the key to use to generate a JWT.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 823
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Authorization",
      "order_in_group": 824,
      "display_name": "oauth2.jwt.keystore.password",
      "documentation": "The password to use to access the JWT keystore.Type: passwordDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 824
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Authorization",
      "order_in_group": 825,
      "display_name": "oauth2.jwt.keystore.type",
      "documentation": "The JWT keystore type. You can set the keystore type toJKSorPKCS12.Type: stringDefault:JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 825
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "oauth2.jwt.claimset",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Authorization",
      "order_in_group": 826,
      "display_name": "oauth2.jwt.claimset",
      "documentation": "A JSON string containingJWT claims.\nNote that the issued at time (iat) will be set by connector to the JWT\ncreation time\u00e2\u0080\u0093current time\u00e2\u0080\u0093and expiry (exp) will be set to 5 minutes from\ntime of issue. Additionally, the connector will setjtito a random\nstring. Any values you set for these fields will be overridden by connector.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 826
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "oauth2.jwt.signature.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Authorization",
      "order_in_group": 827,
      "display_name": "oauth2.jwt.signature.algorithm",
      "documentation": "The algorithm to use for signing claims.Type: stringDefault:rs256Valid values:rs256Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 827
      },
      "default": "rs256valid values:rs256importance: low"
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Retries",
      "order_in_group": 828,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 5Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 828
      },
      "default": "5valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Retries",
      "order_in_group": 829,
      "display_name": "retry.backoff.ms",
      "documentation": "The initial duration in milliseconds to wait following an error before a retry\nattempt is made. Subsequent backoffs will be exponentially larger than the\nfirst duration. Note thatretry.backoff.msis the initial backoff before\nretrying. After that, the connector will retry using exponential jitter. For\nmore details about exponential jitter, seeBetter Retries with Exponential\nBackoff and Jitter.Type: intDefault: 3000Valid Values: [1,\u00e2\u0080\u00a6]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 829
      },
      "default": "3000valid values: [1,\u00e2\u0080\u00a6]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "retry.on.status.codes",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Retries",
      "order_in_group": 830,
      "display_name": "retry.on.status.codes",
      "documentation": "The HTTP error codes to retry on. Comma-separated list of codes or range of\ncodes to retry on. Ranges are specified with start and optional end code.\nRange boundaries are inclusive. For instance,400-includes all codes\ngreater than or equal to 400.400-500includes codes from 400 to 500,\nincluding 500. Multiple ranges and single codes can be specified together to\nachieve fine-grained control over retry behavior. For example,404,408,500-will retry on404NOTFOUND,408REQUESTTIMEOUT, and\nall 5xx error codes.Type: stringDefault: 400-Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 830
      },
      "default": "400-importance: medium"
    },
    {
      "name": "regex.patterns",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Regex",
      "order_in_group": 831,
      "display_name": "regex.patterns",
      "documentation": "Regular expression patterns used for replacements in the message sent to the HTTP service. Multiple regular expression patterns can be specified, but they must be separated byregex.separator. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 831
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.replacements",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Regex",
      "order_in_group": 832,
      "display_name": "regex.replacements",
      "documentation": "Regex replacements to use with the patterns inregex.patterns.  Multiple replacements can be specified, but they must be separated byregex.separator.${key}and${topic}can be used here. Only used whenrequest.body.formatis set tostring.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 832
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "regex.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Regex",
      "order_in_group": 833,
      "display_name": "regex.separator",
      "documentation": "Separator character used inregex.patternsandregex.replacementsproperty. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ~Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 833
      },
      "default": "~importance: high"
    },
    {
      "name": "request.body.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Batching",
      "order_in_group": 834,
      "display_name": "request.body.format",
      "documentation": "Used to produce request body in either JSON or String format.Type: stringDefault: stringValid Values: one of [string, json]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 834
      },
      "default": "stringvalid values: one of [string, json]importance: medium"
    },
    {
      "name": "batch.key.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Batching",
      "order_in_group": 835,
      "display_name": "batch.key.pattern",
      "documentation": "Pattern used to build the key for a given batch.${key}and${topic}can be used to include message attributes here.Type: stringDefault: someKeyImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 835
      },
      "default": "somekeyimportance: high"
    },
    {
      "name": "batch.max.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Batching",
      "order_in_group": 836,
      "display_name": "batch.max.size",
      "documentation": "The number of records accumulated in a batch before the HTTP API is invoked.\nNote that batching is disabled if you usetemplate parametersother than$keyand$topic.Type: intDefault: 1Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 836
      },
      "default": "1importance: high"
    },
    {
      "name": "batch.prefix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Batching",
      "order_in_group": 837,
      "display_name": "batch.prefix",
      "documentation": "The prefix added to record batches. This is applied once at the beginning of\nthe batch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 837
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.suffix",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Batching",
      "order_in_group": 838,
      "display_name": "batch.suffix",
      "documentation": "The suffix added to record batches. This is applied once at the end of the\nbatch of records.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 838
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "batch.separator",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Batching",
      "order_in_group": 839,
      "display_name": "batch.separator",
      "documentation": "Separator for records in a batch. Only used whenrequest.body.formatis set tostring.Type: stringDefault: ,Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 839
      },
      "default": ",importance: high"
    },
    {
      "name": "batch.json.as.array",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Batching",
      "order_in_group": 840,
      "display_name": "batch.json.as.array",
      "documentation": "Whether or not to use an array to bundle json records.\nOnly used whenrequest.body.formatis set tojson.\nThis can be disabled only whenbatch.max.sizeis set to 1.Type: booleanDefault: trueImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 840
      },
      "default": "trueimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Security",
      "order_in_group": 841,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 841
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Security",
      "order_in_group": 842,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 842
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Security",
      "order_in_group": 843,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for a client and is only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 843
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Security",
      "order_in_group": 844,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 844
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Security",
      "order_in_group": 845,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set, access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 845
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Security",
      "order_in_group": 846,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 846
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Security",
      "order_in_group": 847,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 847
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Security",
      "order_in_group": 848,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 848
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Security",
      "order_in_group": 849,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 849
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Security",
      "order_in_group": 850,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 850
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Security",
      "order_in_group": 851,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 851
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Security",
      "order_in_group": 852,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate server hostname using server certificate. Disable server hostname verification by settinghttps.ssl.endpoint.identification.algorithmto an empty string.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 852
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Security",
      "order_in_group": 853,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 853
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Security",
      "order_in_group": 854,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 854
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Security",
      "order_in_group": 855,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 855
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 856,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 856
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 857,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 857
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 858,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 858
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 859,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 859
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 860,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 860
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 861,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 861
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Confluent Platform license",
      "order_in_group": 862,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 862
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 863,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 863
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 864,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 864
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 865,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 865
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 866,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 866
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 867,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 867
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 868,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 868
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Confluent license properties",
      "order_in_group": 869,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 869
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "Search by configuration property name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "Search by configuration property name",
      "documentation": "Enter a string to search and filter by configuration property name.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "name",
      "documentation": "Globally unique name to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "connector.class",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 3,
      "display_name": "connector.class",
      "documentation": "Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \u00e2\u0080\u009cFileStreamSink\u00e2\u0080\u009d or \u00e2\u0080\u009cFileStreamSinkConnector\u00e2\u0080\u009d to make the configuration a bit shorter",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "tasks.max",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 4,
      "display_name": "tasks.max",
      "documentation": "Maximum number of tasks to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "topics",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 5,
      "display_name": "topics",
      "documentation": "List of topics to consume, separated by commas",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "topics.regex",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 6,
      "display_name": "topics.regex",
      "documentation": "Regular expression giving topics to consume. Under the hood, the regex is compiled to ajava.util.regex.Pattern. Only one of topics or topics.regex should be specified.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "tasks.max.enforce",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 7,
      "display_name": "tasks.max.enforce",
      "documentation": "(Deprecated) Whether to enforce that the tasks.max property is respected by the connector. By default, connectors that generate too many tasks will fail, and existing sets of tasks that exceed the tasks.max property will also be failed. If this property is set to false, then connectors will be allowed to generate more than the maximum number of tasks, and existing sets of tasks that exceed the tasks.max property will be allowed to run. This property is deprecated and will be removed in an upcoming major release.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "key.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 8,
      "display_name": "key.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      }
    },
    {
      "name": "value.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 9,
      "display_name": "value.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      }
    },
    {
      "name": "header.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 10,
      "display_name": "header.converter",
      "documentation": "HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      }
    },
    {
      "name": "config.action.reload",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 11,
      "display_name": "config.action.reload",
      "documentation": "The action that Connect should take on the connector when changes in external configuration providers result in a change in the connector\u00e2\u0080\u0099s configuration properties. A value of \u00e2\u0080\u0098none\u00e2\u0080\u0099 indicates that Connect will do nothing. A value of \u00e2\u0080\u0098restart\u00e2\u0080\u0099 indicates that Connect should restart/reload the connector with the updated configuration properties.The restart may actually be scheduled in the future if the external configuration provider indicates that a configuration value will expire in the future.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "transforms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 12,
      "display_name": "transforms",
      "documentation": "Aliases for the transformations to be applied to records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "predicates",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 13,
      "display_name": "predicates",
      "documentation": "Aliases for the predicates used by transformations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      }
    },
    {
      "name": "errors.retry.timeout",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 14,
      "display_name": "errors.retry.timeout",
      "documentation": "The maximum duration in milliseconds that a failed operation will be reattempted. The default is 0, which means no retries will be attempted. Use -1 for infinite retries.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "errors.retry.delay.max.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 15,
      "display_name": "errors.retry.delay.max.ms",
      "documentation": "The maximum duration in milliseconds between consecutive retry attempts. Jitter will be added to the delay once this limit is reached to prevent thundering herd issues.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      }
    },
    {
      "name": "errors.tolerance",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 16,
      "display_name": "errors.tolerance",
      "documentation": "Behavior for tolerating errors during connector operation. \u00e2\u0080\u0098none\u00e2\u0080\u0099 is the default value and signals that any error will result in an immediate connector task failure; \u00e2\u0080\u0098all\u00e2\u0080\u0099 changes the behavior to skip over problematic records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "errors.log.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 17,
      "display_name": "errors.log.enable",
      "documentation": "If true, write each error and the details of the failed operation and problematic record to the Connect application log. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, so that only errors that are not tolerated are reported.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      }
    },
    {
      "name": "errors.log.include.messages",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 18,
      "display_name": "errors.log.include.messages",
      "documentation": "Whether to include in the log the Connect record that resulted in a failure. For sink records, the topic, partition, offset, and timestamp will be logged. For source records, the key and value (and their schemas), all headers, and the timestamp, Kafka topic, Kafka partition, source partition, and source offset will be logged. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, which will prevent record keys, values, and headers from being written to log files.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      }
    },
    {
      "name": "errors.deadletterqueue.topic.name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 19,
      "display_name": "errors.deadletterqueue.topic.name",
      "documentation": "The name of the topic to be used as the dead letter queue (DLQ) for messages that result in an error when processed by this sink connector, or its transformations or converters. The topic name is blank by default, which means that no messages are to be recorded in the DLQ.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      }
    },
    {
      "name": "errors.deadletterqueue.topic.replication.factor",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 20,
      "display_name": "errors.deadletterqueue.topic.replication.factor",
      "documentation": "Replication factor used to create the dead letter queue topic when it doesn\u00e2\u0080\u0099t already exist.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      }
    },
    {
      "name": "errors.deadletterqueue.context.headers.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 21,
      "display_name": "errors.deadletterqueue.context.headers.enable",
      "documentation": "If true, add headers containing error context to the messages written to the dead letter queue. To avoid clashing with headers from the original record, all error context header keys, all error context header keys will start with__connect.errors.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      }
    }
  ]
}