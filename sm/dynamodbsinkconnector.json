{
  "template_id": "DynamoDbSinkConnector",
  "connector_type": "SINK",
  "connector.class": "io.confluent.connect.aws.dynamodb.DynamoDbSinkConnector",
  "name": "{{.logicalClusterId}}",
  "imports": [],
  "group_order": [
    "DynamoDB Parameters",
    "Proxy Connection Parameters",
    "CSFLE configuration",
    "Confluent Platform license",
    "Confluent license properties",
    "License topic configuration",
    "License topic ACLs",
    "Override Default Configuration Properties"
  ],
  "config_defs": [
    {
      "name": "aws.dynamodb.max.retry.time.seconds",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 1,
      "display_name": "aws.dynamodb.max.retry.time.seconds",
      "documentation": "The maximum time up to which the DynamoDB client will try writing records.Type: longDefault: 5Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 1
      },
      "default": "5importance: low"
    },
    {
      "name": "aws.dynamodb.pk.hash",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 2,
      "display_name": "aws.dynamodb.pk.hash",
      "documentation": "Defines how the table\u00e2\u0080\u0099s hash key is extracted from the records. By default,\npartition is used as the hash key. The maximum size of a partition with this\nconfiguration is 10 GB as defined by DynamoDB limits.This hash key reference is created from a record reference and optional alias\nname. If the alias name is absent, then the last field of the reference is\nused as the column name.The following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition -  A fieldpartitionas hash keykey - Key of the record as a hash keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a hash fielduserType: stringDefault: partitionValid Values: Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      },
      "default": "partitionvalid values: matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.pk.sort",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 3,
      "display_name": "aws.dynamodb.pk.sort",
      "documentation": "Defines how the table\u00e2\u0080\u0099s sort key is extracted from the records. By default, it\nuses the record offset as sort key. This sort key reference is created from a\nrecord reference and optional alias name. If the alias name is absent, then\nthe last field of the reference is used as the column name.If no sort key is required, configure this property to be an empty string.\nThe following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition - A fieldpartitionas sort keykey - Key of the record as a sort keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a sort fielduserType: stringDefault: offsetValid Values: either Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$, or one of []Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      },
      "default": "offsetvalid values: either matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$, or one of []importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 4,
      "display_name": "aws.dynamodb.proxy.user",
      "documentation": "DynamoDB Proxy User.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 5,
      "display_name": "aws.dynamodb.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 6,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "documentation": "Role ARN to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 7,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 8,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "documentation": "Role session name to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.endpoint",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 9,
      "display_name": "aws.dynamodb.endpoint",
      "documentation": "Overwrite endpoint configuration and AWS service discovery for DynamoDB.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 10,
      "display_name": "aws.dynamodb.region",
      "documentation": "The AWS region to be used by the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]importance: medium"
    },
    {
      "name": "table.name.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 11,
      "display_name": "table.name.format",
      "documentation": "A format string for the destination table name, which may contain \u00e2\u0080\u0098${topic}\u00e2\u0080\u0099 as a placeholder for the originating topic name.For example,kafka_${topic}for the topic \u00e2\u0080\u0098orders\u00e2\u0080\u0099 will map to the table name \u00e2\u0080\u0098kafka_orders\u00e2\u0080\u0099.Type: stringDefault: ${topic}Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      },
      "default": "${topic}importance: medium"
    },
    {
      "name": "aws.dynamodb.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 12,
      "display_name": "aws.dynamodb.proxy.url",
      "documentation": "DynamoDB Proxy URL. For examplehttp://proxy.example.com:8080,https://user:pass@proxy.example.com:8443Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "aws.dynamodb.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 13,
      "display_name": "aws.dynamodb.proxy.password",
      "documentation": "DynamoDB Proxy Password.Type: passwordDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 14,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the following\nform:host1:port1,host2:port2...Since these servers are just used for the initial connection to discover the\nfull cluster membership (which may change dynamically), this list need not\ncontain the full set of servers (you may want more than one, though, in case a\nserver is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 15,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including\nlicensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 16,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 17,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 18,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 19,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 20,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 21,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 22,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 22
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 23,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 23
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "aws.dynamodb.max.retry.time.seconds",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 24,
      "display_name": "aws.dynamodb.max.retry.time.seconds",
      "documentation": "The maximum time up to which the DynamoDB client will try writing records.Type: longDefault: 5Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 24
      },
      "default": "5importance: low"
    },
    {
      "name": "aws.dynamodb.pk.hash",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 25,
      "display_name": "aws.dynamodb.pk.hash",
      "documentation": "Defines how the table\u00e2\u0080\u0099s hash key is extracted from the records. By default,\npartition is used as the hash key. The maximum size of a partition with this\nconfiguration is 10 GB as defined by DynamoDB limits.This hash key reference is created from a record reference and optional alias\nname. If the alias name is absent, then the last field of the reference is\nused as the column name.The following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition -  A fieldpartitionas hash keykey - Key of the record as a hash keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a hash fielduserType: stringDefault: partitionValid Values: Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 25
      },
      "default": "partitionvalid values: matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.pk.sort",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 26,
      "display_name": "aws.dynamodb.pk.sort",
      "documentation": "Defines how the table\u00e2\u0080\u0099s sort key is extracted from the records. By default, it\nuses the record offset as sort key. This sort key reference is created from a\nrecord reference and optional alias name. If the alias name is absent, then\nthe last field of the reference is used as the column name.If no sort key is required, configure this property to be an empty string.\nThe following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition - A fieldpartitionas sort keykey - Key of the record as a sort keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a sort fielduserType: stringDefault: offsetValid Values: either Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$, or one of []Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 26
      },
      "default": "offsetvalid values: either matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$, or one of []importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 27,
      "display_name": "aws.dynamodb.proxy.user",
      "documentation": "DynamoDB Proxy User.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 27
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 28,
      "display_name": "aws.dynamodb.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 28
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 29,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "documentation": "Role ARN to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 29
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 30,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 30
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 31,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "documentation": "Role session name to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 31
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.endpoint",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 32,
      "display_name": "aws.dynamodb.endpoint",
      "documentation": "Overwrite endpoint configuration and AWS service discovery for DynamoDB.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 32
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 33,
      "display_name": "aws.dynamodb.region",
      "documentation": "The AWS region to be used by the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 33
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]importance: medium"
    },
    {
      "name": "table.name.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 34,
      "display_name": "table.name.format",
      "documentation": "A format string for the destination table name, which may contain \u00e2\u0080\u0098${topic}\u00e2\u0080\u0099 as a placeholder for the originating topic name.For example,kafka_${topic}for the topic \u00e2\u0080\u0098orders\u00e2\u0080\u0099 will map to the table name \u00e2\u0080\u0098kafka_orders\u00e2\u0080\u0099.Type: stringDefault: ${topic}Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 34
      },
      "default": "${topic}importance: medium"
    },
    {
      "name": "aws.dynamodb.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 35,
      "display_name": "aws.dynamodb.proxy.url",
      "documentation": "DynamoDB Proxy URL. For examplehttp://proxy.example.com:8080,https://user:pass@proxy.example.com:8443Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 35
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "aws.dynamodb.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 36,
      "display_name": "aws.dynamodb.proxy.password",
      "documentation": "DynamoDB Proxy Password.Type: passwordDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 36
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 37,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the following\nform:host1:port1,host2:port2...Since these servers are just used for the initial connection to discover the\nfull cluster membership (which may change dynamically), this list need not\ncontain the full set of servers (you may want more than one, though, in case a\nserver is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 37
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 38,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including\nlicensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 38
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 39,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 39
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 40,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 40
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 41,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 41
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 42,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 42
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 43,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 43
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 44,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 44
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 45,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 45
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 46,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 46
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "aws.dynamodb.max.retry.time.seconds",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 47,
      "display_name": "aws.dynamodb.max.retry.time.seconds",
      "documentation": "The maximum time up to which the DynamoDB client will try writing records.Type: longDefault: 5Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 47
      },
      "default": "5importance: low"
    },
    {
      "name": "aws.dynamodb.pk.hash",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 48,
      "display_name": "aws.dynamodb.pk.hash",
      "documentation": "Defines how the table\u00e2\u0080\u0099s hash key is extracted from the records. By default,\npartition is used as the hash key. The maximum size of a partition with this\nconfiguration is 10 GB as defined by DynamoDB limits.This hash key reference is created from a record reference and optional alias\nname. If the alias name is absent, then the last field of the reference is\nused as the column name.The following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition -  A fieldpartitionas hash keykey - Key of the record as a hash keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a hash fielduserType: stringDefault: partitionValid Values: Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 48
      },
      "default": "partitionvalid values: matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.pk.sort",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 49,
      "display_name": "aws.dynamodb.pk.sort",
      "documentation": "Defines how the table\u00e2\u0080\u0099s sort key is extracted from the records. By default, it\nuses the record offset as sort key. This sort key reference is created from a\nrecord reference and optional alias name. If the alias name is absent, then\nthe last field of the reference is used as the column name.If no sort key is required, configure this property to be an empty string.\nThe following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition - A fieldpartitionas sort keykey - Key of the record as a sort keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a sort fielduserType: stringDefault: offsetValid Values: either Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$, or one of []Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 49
      },
      "default": "offsetvalid values: either matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$, or one of []importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 50,
      "display_name": "aws.dynamodb.proxy.user",
      "documentation": "DynamoDB Proxy User.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 50
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 51,
      "display_name": "aws.dynamodb.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 51
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 52,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "documentation": "Role ARN to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 52
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 53,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 53
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 54,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "documentation": "Role session name to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 54
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.endpoint",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 55,
      "display_name": "aws.dynamodb.endpoint",
      "documentation": "Overwrite endpoint configuration and AWS service discovery for DynamoDB.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 55
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 56,
      "display_name": "aws.dynamodb.region",
      "documentation": "The AWS region to be used by the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 56
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]importance: medium"
    },
    {
      "name": "table.name.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 57,
      "display_name": "table.name.format",
      "documentation": "A format string for the destination table name, which may contain \u00e2\u0080\u0098${topic}\u00e2\u0080\u0099 as a placeholder for the originating topic name.For example,kafka_${topic}for the topic \u00e2\u0080\u0098orders\u00e2\u0080\u0099 will map to the table name \u00e2\u0080\u0098kafka_orders\u00e2\u0080\u0099.Type: stringDefault: ${topic}Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 57
      },
      "default": "${topic}importance: medium"
    },
    {
      "name": "aws.dynamodb.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 58,
      "display_name": "aws.dynamodb.proxy.url",
      "documentation": "DynamoDB Proxy URL. For examplehttp://proxy.example.com:8080,https://user:pass@proxy.example.com:8443Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 58
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "aws.dynamodb.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 59,
      "display_name": "aws.dynamodb.proxy.password",
      "documentation": "DynamoDB Proxy Password.Type: passwordDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 59
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 60,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the following\nform:host1:port1,host2:port2...Since these servers are just used for the initial connection to discover the\nfull cluster membership (which may change dynamically), this list need not\ncontain the full set of servers (you may want more than one, though, in case a\nserver is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 60
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 61,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including\nlicensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 61
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 62,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 62
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 63,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 63
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 64,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 64
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 65,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 65
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 66,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 66
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 67,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 67
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 68,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 68
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 69,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 69
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "aws.dynamodb.max.retry.time.seconds",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 70,
      "display_name": "aws.dynamodb.max.retry.time.seconds",
      "documentation": "The maximum time up to which the DynamoDB client will try writing records.Type: longDefault: 5Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 70
      },
      "default": "5importance: low"
    },
    {
      "name": "aws.dynamodb.pk.hash",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 71,
      "display_name": "aws.dynamodb.pk.hash",
      "documentation": "Defines how the table\u00e2\u0080\u0099s hash key is extracted from the records. By default,\npartition is used as the hash key. The maximum size of a partition with this\nconfiguration is 10 GB as defined by DynamoDB limits.This hash key reference is created from a record reference and optional alias\nname. If the alias name is absent, then the last field of the reference is\nused as the column name.The following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition -  A fieldpartitionas hash keykey - Key of the record as a hash keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a hash fielduserType: stringDefault: partitionValid Values: Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 71
      },
      "default": "partitionvalid values: matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.pk.sort",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 72,
      "display_name": "aws.dynamodb.pk.sort",
      "documentation": "Defines how the table\u00e2\u0080\u0099s sort key is extracted from the records. By default, it\nuses the record offset as sort key. This sort key reference is created from a\nrecord reference and optional alias name. If the alias name is absent, then\nthe last field of the reference is used as the column name.If no sort key is required, configure this property to be an empty string.\nThe following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition - A fieldpartitionas sort keykey - Key of the record as a sort keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a sort fielduserType: stringDefault: offsetValid Values: either Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$, or one of []Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 72
      },
      "default": "offsetvalid values: either matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$, or one of []importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 73,
      "display_name": "aws.dynamodb.proxy.user",
      "documentation": "DynamoDB Proxy User.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 73
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 74,
      "display_name": "aws.dynamodb.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 74
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 75,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "documentation": "Role ARN to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 75
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 76,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 76
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 77,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "documentation": "Role session name to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 77
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.endpoint",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 78,
      "display_name": "aws.dynamodb.endpoint",
      "documentation": "Overwrite endpoint configuration and AWS service discovery for DynamoDB.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 78
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 79,
      "display_name": "aws.dynamodb.region",
      "documentation": "The AWS region to be used by the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 79
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]importance: medium"
    },
    {
      "name": "table.name.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 80,
      "display_name": "table.name.format",
      "documentation": "A format string for the destination table name, which may contain \u00e2\u0080\u0098${topic}\u00e2\u0080\u0099 as a placeholder for the originating topic name.For example,kafka_${topic}for the topic \u00e2\u0080\u0098orders\u00e2\u0080\u0099 will map to the table name \u00e2\u0080\u0098kafka_orders\u00e2\u0080\u0099.Type: stringDefault: ${topic}Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 80
      },
      "default": "${topic}importance: medium"
    },
    {
      "name": "aws.dynamodb.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 81,
      "display_name": "aws.dynamodb.proxy.url",
      "documentation": "DynamoDB Proxy URL. For examplehttp://proxy.example.com:8080,https://user:pass@proxy.example.com:8443Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 81
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "aws.dynamodb.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 82,
      "display_name": "aws.dynamodb.proxy.password",
      "documentation": "DynamoDB Proxy Password.Type: passwordDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 82
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 83,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the following\nform:host1:port1,host2:port2...Since these servers are just used for the initial connection to discover the\nfull cluster membership (which may change dynamically), this list need not\ncontain the full set of servers (you may want more than one, though, in case a\nserver is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 83
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 84,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including\nlicensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 84
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 85,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 85
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 86,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 86
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 87,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 87
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 88,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 88
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 89,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 89
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 90,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 90
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 91,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 91
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 92,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 92
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "aws.dynamodb.max.retry.time.seconds",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 93,
      "display_name": "aws.dynamodb.max.retry.time.seconds",
      "documentation": "The maximum time up to which the DynamoDB client will try writing records.Type: longDefault: 5Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 93
      },
      "default": "5importance: low"
    },
    {
      "name": "aws.dynamodb.pk.hash",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 94,
      "display_name": "aws.dynamodb.pk.hash",
      "documentation": "Defines how the table\u00e2\u0080\u0099s hash key is extracted from the records. By default,\npartition is used as the hash key. The maximum size of a partition with this\nconfiguration is 10 GB as defined by DynamoDB limits.This hash key reference is created from a record reference and optional alias\nname. If the alias name is absent, then the last field of the reference is\nused as the column name.The following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition -  A fieldpartitionas hash keykey - Key of the record as a hash keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a hash fielduserType: stringDefault: partitionValid Values: Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 94
      },
      "default": "partitionvalid values: matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.pk.sort",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 95,
      "display_name": "aws.dynamodb.pk.sort",
      "documentation": "Defines how the table\u00e2\u0080\u0099s sort key is extracted from the records. By default, it\nuses the record offset as sort key. This sort key reference is created from a\nrecord reference and optional alias name. If the alias name is absent, then\nthe last field of the reference is used as the column name.If no sort key is required, configure this property to be an empty string.\nThe following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition - A fieldpartitionas sort keykey - Key of the record as a sort keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a sort fielduserType: stringDefault: offsetValid Values: either Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$, or one of []Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 95
      },
      "default": "offsetvalid values: either matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$, or one of []importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 96,
      "display_name": "aws.dynamodb.proxy.user",
      "documentation": "DynamoDB Proxy User.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 96
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 97,
      "display_name": "aws.dynamodb.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 97
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 98,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "documentation": "Role ARN to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 98
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 99,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 99
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 100,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "documentation": "Role session name to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 100
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.endpoint",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 101,
      "display_name": "aws.dynamodb.endpoint",
      "documentation": "Overwrite endpoint configuration and AWS service discovery for DynamoDB.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 101
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 102,
      "display_name": "aws.dynamodb.region",
      "documentation": "The AWS region to be used by the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 102
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]importance: medium"
    },
    {
      "name": "table.name.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 103,
      "display_name": "table.name.format",
      "documentation": "A format string for the destination table name, which may contain \u00e2\u0080\u0098${topic}\u00e2\u0080\u0099 as a placeholder for the originating topic name.For example,kafka_${topic}for the topic \u00e2\u0080\u0098orders\u00e2\u0080\u0099 will map to the table name \u00e2\u0080\u0098kafka_orders\u00e2\u0080\u0099.Type: stringDefault: ${topic}Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 103
      },
      "default": "${topic}importance: medium"
    },
    {
      "name": "aws.dynamodb.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 104,
      "display_name": "aws.dynamodb.proxy.url",
      "documentation": "DynamoDB Proxy URL. For examplehttp://proxy.example.com:8080,https://user:pass@proxy.example.com:8443Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 104
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "aws.dynamodb.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 105,
      "display_name": "aws.dynamodb.proxy.password",
      "documentation": "DynamoDB Proxy Password.Type: passwordDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 105
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 106,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the following\nform:host1:port1,host2:port2...Since these servers are just used for the initial connection to discover the\nfull cluster membership (which may change dynamically), this list need not\ncontain the full set of servers (you may want more than one, though, in case a\nserver is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 106
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 107,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including\nlicensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 107
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 108,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 108
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 109,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 109
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 110,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 110
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 111,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 111
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 112,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 112
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 113,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 113
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 114,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 114
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 115,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 115
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "aws.dynamodb.max.retry.time.seconds",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 116,
      "display_name": "aws.dynamodb.max.retry.time.seconds",
      "documentation": "The maximum time up to which the DynamoDB client will try writing records.Type: longDefault: 5Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 116
      },
      "default": "5importance: low"
    },
    {
      "name": "aws.dynamodb.pk.hash",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 117,
      "display_name": "aws.dynamodb.pk.hash",
      "documentation": "Defines how the table\u00e2\u0080\u0099s hash key is extracted from the records. By default,\npartition is used as the hash key. The maximum size of a partition with this\nconfiguration is 10 GB as defined by DynamoDB limits.This hash key reference is created from a record reference and optional alias\nname. If the alias name is absent, then the last field of the reference is\nused as the column name.The following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition -  A fieldpartitionas hash keykey - Key of the record as a hash keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a hash fielduserType: stringDefault: partitionValid Values: Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 117
      },
      "default": "partitionvalid values: matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.pk.sort",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 118,
      "display_name": "aws.dynamodb.pk.sort",
      "documentation": "Defines how the table\u00e2\u0080\u0099s sort key is extracted from the records. By default, it\nuses the record offset as sort key. This sort key reference is created from a\nrecord reference and optional alias name. If the alias name is absent, then\nthe last field of the reference is used as the column name.If no sort key is required, configure this property to be an empty string.\nThe following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition - A fieldpartitionas sort keykey - Key of the record as a sort keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a sort fielduserType: stringDefault: offsetValid Values: either Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$, or one of []Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 118
      },
      "default": "offsetvalid values: either matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$, or one of []importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 119,
      "display_name": "aws.dynamodb.proxy.user",
      "documentation": "DynamoDB Proxy User.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 119
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 120,
      "display_name": "aws.dynamodb.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 120
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 121,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "documentation": "Role ARN to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 121
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 122,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 122
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 123,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "documentation": "Role session name to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 123
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.endpoint",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 124,
      "display_name": "aws.dynamodb.endpoint",
      "documentation": "Overwrite endpoint configuration and AWS service discovery for DynamoDB.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 124
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 125,
      "display_name": "aws.dynamodb.region",
      "documentation": "The AWS region to be used by the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 125
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]importance: medium"
    },
    {
      "name": "table.name.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 126,
      "display_name": "table.name.format",
      "documentation": "A format string for the destination table name, which may contain \u00e2\u0080\u0098${topic}\u00e2\u0080\u0099 as a placeholder for the originating topic name.For example,kafka_${topic}for the topic \u00e2\u0080\u0098orders\u00e2\u0080\u0099 will map to the table name \u00e2\u0080\u0098kafka_orders\u00e2\u0080\u0099.Type: stringDefault: ${topic}Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 126
      },
      "default": "${topic}importance: medium"
    },
    {
      "name": "aws.dynamodb.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 127,
      "display_name": "aws.dynamodb.proxy.url",
      "documentation": "DynamoDB Proxy URL. For examplehttp://proxy.example.com:8080,https://user:pass@proxy.example.com:8443Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 127
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "aws.dynamodb.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 128,
      "display_name": "aws.dynamodb.proxy.password",
      "documentation": "DynamoDB Proxy Password.Type: passwordDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 128
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 129,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the following\nform:host1:port1,host2:port2...Since these servers are just used for the initial connection to discover the\nfull cluster membership (which may change dynamically), this list need not\ncontain the full set of servers (you may want more than one, though, in case a\nserver is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 129
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 130,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including\nlicensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 130
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 131,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 131
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 132,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 132
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 133,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 133
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 134,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 134
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 135,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 135
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 136,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 136
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 137,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 137
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 138,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 138
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "aws.dynamodb.max.retry.time.seconds",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 139,
      "display_name": "aws.dynamodb.max.retry.time.seconds",
      "documentation": "The maximum time up to which the DynamoDB client will try writing records.Type: longDefault: 5Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 139
      },
      "default": "5importance: low"
    },
    {
      "name": "aws.dynamodb.pk.hash",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 140,
      "display_name": "aws.dynamodb.pk.hash",
      "documentation": "Defines how the table\u00e2\u0080\u0099s hash key is extracted from the records. By default,\npartition is used as the hash key. The maximum size of a partition with this\nconfiguration is 10 GB as defined by DynamoDB limits.This hash key reference is created from a record reference and optional alias\nname. If the alias name is absent, then the last field of the reference is\nused as the column name.The following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition -  A fieldpartitionas hash keykey - Key of the record as a hash keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a hash fielduserType: stringDefault: partitionValid Values: Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 140
      },
      "default": "partitionvalid values: matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.pk.sort",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 141,
      "display_name": "aws.dynamodb.pk.sort",
      "documentation": "Defines how the table\u00e2\u0080\u0099s sort key is extracted from the records. By default, it\nuses the record offset as sort key. This sort key reference is created from a\nrecord reference and optional alias name. If the alias name is absent, then\nthe last field of the reference is used as the column name.If no sort key is required, configure this property to be an empty string.\nThe following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition - A fieldpartitionas sort keykey - Key of the record as a sort keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a sort fielduserType: stringDefault: offsetValid Values: either Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$, or one of []Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 141
      },
      "default": "offsetvalid values: either matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$, or one of []importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 142,
      "display_name": "aws.dynamodb.proxy.user",
      "documentation": "DynamoDB Proxy User.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 142
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 143,
      "display_name": "aws.dynamodb.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 143
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 144,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "documentation": "Role ARN to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 144
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 145,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 145
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 146,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "documentation": "Role session name to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 146
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.endpoint",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 147,
      "display_name": "aws.dynamodb.endpoint",
      "documentation": "Overwrite endpoint configuration and AWS service discovery for DynamoDB.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 147
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 148,
      "display_name": "aws.dynamodb.region",
      "documentation": "The AWS region to be used by the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 148
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]importance: medium"
    },
    {
      "name": "table.name.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 149,
      "display_name": "table.name.format",
      "documentation": "A format string for the destination table name, which may contain \u00e2\u0080\u0098${topic}\u00e2\u0080\u0099 as a placeholder for the originating topic name.For example,kafka_${topic}for the topic \u00e2\u0080\u0098orders\u00e2\u0080\u0099 will map to the table name \u00e2\u0080\u0098kafka_orders\u00e2\u0080\u0099.Type: stringDefault: ${topic}Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 149
      },
      "default": "${topic}importance: medium"
    },
    {
      "name": "aws.dynamodb.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 150,
      "display_name": "aws.dynamodb.proxy.url",
      "documentation": "DynamoDB Proxy URL. For examplehttp://proxy.example.com:8080,https://user:pass@proxy.example.com:8443Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 150
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "aws.dynamodb.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 151,
      "display_name": "aws.dynamodb.proxy.password",
      "documentation": "DynamoDB Proxy Password.Type: passwordDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 151
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 152,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the following\nform:host1:port1,host2:port2...Since these servers are just used for the initial connection to discover the\nfull cluster membership (which may change dynamically), this list need not\ncontain the full set of servers (you may want more than one, though, in case a\nserver is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 152
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 153,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including\nlicensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 153
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 154,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 154
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 155,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 155
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 156,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 156
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 157,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 157
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 158,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 158
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 159,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 159
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 160,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 160
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 161,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 161
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "aws.dynamodb.max.retry.time.seconds",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 162,
      "display_name": "aws.dynamodb.max.retry.time.seconds",
      "documentation": "The maximum time up to which the DynamoDB client will try writing records.Type: longDefault: 5Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 162
      },
      "default": "5importance: low"
    },
    {
      "name": "aws.dynamodb.pk.hash",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 163,
      "display_name": "aws.dynamodb.pk.hash",
      "documentation": "Defines how the table\u00e2\u0080\u0099s hash key is extracted from the records. By default,\npartition is used as the hash key. The maximum size of a partition with this\nconfiguration is 10 GB as defined by DynamoDB limits.This hash key reference is created from a record reference and optional alias\nname. If the alias name is absent, then the last field of the reference is\nused as the column name.The following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition -  A fieldpartitionas hash keykey - Key of the record as a hash keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a hash fielduserType: stringDefault: partitionValid Values: Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 163
      },
      "default": "partitionvalid values: matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.pk.sort",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 164,
      "display_name": "aws.dynamodb.pk.sort",
      "documentation": "Defines how the table\u00e2\u0080\u0099s sort key is extracted from the records. By default, it\nuses the record offset as sort key. This sort key reference is created from a\nrecord reference and optional alias name. If the alias name is absent, then\nthe last field of the reference is used as the column name.If no sort key is required, configure this property to be an empty string.\nThe following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition - A fieldpartitionas sort keykey - Key of the record as a sort keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a sort fielduserType: stringDefault: offsetValid Values: either Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$, or one of []Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 164
      },
      "default": "offsetvalid values: either matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$, or one of []importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 165,
      "display_name": "aws.dynamodb.proxy.user",
      "documentation": "DynamoDB Proxy User.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 165
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 166,
      "display_name": "aws.dynamodb.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 166
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 167,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "documentation": "Role ARN to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 167
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 168,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 168
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 169,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "documentation": "Role session name to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 169
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.endpoint",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 170,
      "display_name": "aws.dynamodb.endpoint",
      "documentation": "Overwrite endpoint configuration and AWS service discovery for DynamoDB.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 170
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 171,
      "display_name": "aws.dynamodb.region",
      "documentation": "The AWS region to be used by the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 171
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]importance: medium"
    },
    {
      "name": "table.name.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 172,
      "display_name": "table.name.format",
      "documentation": "A format string for the destination table name, which may contain \u00e2\u0080\u0098${topic}\u00e2\u0080\u0099 as a placeholder for the originating topic name.For example,kafka_${topic}for the topic \u00e2\u0080\u0098orders\u00e2\u0080\u0099 will map to the table name \u00e2\u0080\u0098kafka_orders\u00e2\u0080\u0099.Type: stringDefault: ${topic}Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 172
      },
      "default": "${topic}importance: medium"
    },
    {
      "name": "aws.dynamodb.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 173,
      "display_name": "aws.dynamodb.proxy.url",
      "documentation": "DynamoDB Proxy URL. For examplehttp://proxy.example.com:8080,https://user:pass@proxy.example.com:8443Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 173
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "aws.dynamodb.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 174,
      "display_name": "aws.dynamodb.proxy.password",
      "documentation": "DynamoDB Proxy Password.Type: passwordDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 174
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 175,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the following\nform:host1:port1,host2:port2...Since these servers are just used for the initial connection to discover the\nfull cluster membership (which may change dynamically), this list need not\ncontain the full set of servers (you may want more than one, though, in case a\nserver is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 175
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 176,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including\nlicensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 176
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 177,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 177
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 178,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 178
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 179,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 179
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 180,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 180
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 181,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 181
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 182,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 182
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 183,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 183
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 184,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 184
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "aws.dynamodb.max.retry.time.seconds",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 185,
      "display_name": "aws.dynamodb.max.retry.time.seconds",
      "documentation": "The maximum time up to which the DynamoDB client will try writing records.Type: longDefault: 5Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 185
      },
      "default": "5importance: low"
    },
    {
      "name": "aws.dynamodb.pk.hash",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 186,
      "display_name": "aws.dynamodb.pk.hash",
      "documentation": "Defines how the table\u00e2\u0080\u0099s hash key is extracted from the records. By default,\npartition is used as the hash key. The maximum size of a partition with this\nconfiguration is 10 GB as defined by DynamoDB limits.This hash key reference is created from a record reference and optional alias\nname. If the alias name is absent, then the last field of the reference is\nused as the column name.The following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition -  A fieldpartitionas hash keykey - Key of the record as a hash keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a hash fielduserType: stringDefault: partitionValid Values: Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 186
      },
      "default": "partitionvalid values: matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.pk.sort",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 187,
      "display_name": "aws.dynamodb.pk.sort",
      "documentation": "Defines how the table\u00e2\u0080\u0099s sort key is extracted from the records. By default, it\nuses the record offset as sort key. This sort key reference is created from a\nrecord reference and optional alias name. If the alias name is absent, then\nthe last field of the reference is used as the column name.If no sort key is required, configure this property to be an empty string.\nThe following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition - A fieldpartitionas sort keykey - Key of the record as a sort keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a sort fielduserType: stringDefault: offsetValid Values: either Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$, or one of []Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 187
      },
      "default": "offsetvalid values: either matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$, or one of []importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 188,
      "display_name": "aws.dynamodb.proxy.user",
      "documentation": "DynamoDB Proxy User.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 188
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 189,
      "display_name": "aws.dynamodb.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 189
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 190,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "documentation": "Role ARN to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 190
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 191,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 191
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 192,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "documentation": "Role session name to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 192
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.endpoint",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 193,
      "display_name": "aws.dynamodb.endpoint",
      "documentation": "Overwrite endpoint configuration and AWS service discovery for DynamoDB.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 193
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 194,
      "display_name": "aws.dynamodb.region",
      "documentation": "The AWS region to be used by the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 194
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]importance: medium"
    },
    {
      "name": "table.name.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 195,
      "display_name": "table.name.format",
      "documentation": "A format string for the destination table name, which may contain \u00e2\u0080\u0098${topic}\u00e2\u0080\u0099 as a placeholder for the originating topic name.For example,kafka_${topic}for the topic \u00e2\u0080\u0098orders\u00e2\u0080\u0099 will map to the table name \u00e2\u0080\u0098kafka_orders\u00e2\u0080\u0099.Type: stringDefault: ${topic}Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 195
      },
      "default": "${topic}importance: medium"
    },
    {
      "name": "aws.dynamodb.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 196,
      "display_name": "aws.dynamodb.proxy.url",
      "documentation": "DynamoDB Proxy URL. For examplehttp://proxy.example.com:8080,https://user:pass@proxy.example.com:8443Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 196
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "aws.dynamodb.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 197,
      "display_name": "aws.dynamodb.proxy.password",
      "documentation": "DynamoDB Proxy Password.Type: passwordDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 197
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 198,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the following\nform:host1:port1,host2:port2...Since these servers are just used for the initial connection to discover the\nfull cluster membership (which may change dynamically), this list need not\ncontain the full set of servers (you may want more than one, though, in case a\nserver is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 198
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 199,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including\nlicensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 199
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 200,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 200
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 201,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 201
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 202,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 202
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 203,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 203
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 204,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 204
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 205,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 205
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 206,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 206
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 207,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 207
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "aws.dynamodb.max.retry.time.seconds",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 208,
      "display_name": "aws.dynamodb.max.retry.time.seconds",
      "documentation": "The maximum time up to which the DynamoDB client will try writing records.Type: longDefault: 5Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 208
      },
      "default": "5importance: low"
    },
    {
      "name": "aws.dynamodb.pk.hash",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 209,
      "display_name": "aws.dynamodb.pk.hash",
      "documentation": "Defines how the table\u00e2\u0080\u0099s hash key is extracted from the records. By default,\npartition is used as the hash key. The maximum size of a partition with this\nconfiguration is 10 GB as defined by DynamoDB limits.This hash key reference is created from a record reference and optional alias\nname. If the alias name is absent, then the last field of the reference is\nused as the column name.The following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition -  A fieldpartitionas hash keykey - Key of the record as a hash keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a hash fielduserType: stringDefault: partitionValid Values: Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 209
      },
      "default": "partitionvalid values: matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.pk.sort",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 210,
      "display_name": "aws.dynamodb.pk.sort",
      "documentation": "Defines how the table\u00e2\u0080\u0099s sort key is extracted from the records. By default, it\nuses the record offset as sort key. This sort key reference is created from a\nrecord reference and optional alias name. If the alias name is absent, then\nthe last field of the reference is used as the column name.If no sort key is required, configure this property to be an empty string.\nThe following are valid record references:partition- refers to the Kafka partition number where the record is originatedoffset- refers to the Kafka offset of the recordkey.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s key itself or one of the fields from the record keyvalue.[fieldNameOrDotDelimitedPath]- to use the record\u00e2\u0080\u0099s value itself or one of the fields from the record\u00e2\u0080\u0099s valueValid examples:partition - A fieldpartitionas sort keykey - Key of the record as a sort keykey.customerId - When message key is a Struct use customerId as the fieldvalue.userId:user - Uses a sort fielduserType: stringDefault: offsetValid Values: either Matches regex^(?<reference>partition|offset|key(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*|value(\\.[a-zA-Z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-zA-Z1-9\\_\\-\\.]{1,255}))?$, or one of []Importance: highFor more help with using this parameter, seeUse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 210
      },
      "default": "offsetvalid values: either matches regex^(?<reference>partition|offset|key(\\.[a-za-z1-9\\_\\-\\.]{1,255})*|value(\\.[a-za-z1-9\\_\\-\\.]{1,255})*){1}(:(?<alias>[a-za-z1-9\\_\\-\\.]{1,255}))?$, or one of []importance: highfor more help with using this parameter, seeuse aws.dynamodb.pk.hash and aws.dynamodb.pk.sort."
    },
    {
      "name": "aws.dynamodb.proxy.user",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 211,
      "display_name": "aws.dynamodb.proxy.user",
      "documentation": "DynamoDB Proxy User.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 211
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.class",
      "type": "CLASSDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 212,
      "display_name": "aws.dynamodb.credentials.provider.class",
      "documentation": "Credentials provider or provider chain to use for authentication to AWS. By default the connector usesDefaultAWSCredentialsProviderChain.Type: classDefault: com.amazonaws.auth.DefaultAWSCredentialsProviderChainValid Values: Any class implementing: interface com.amazonaws.auth.AWSCredentialsProviderImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 212
      },
      "default": "com.amazonaws.auth.defaultawscredentialsproviderchainvalid values: any class implementing: interface com.amazonaws.auth.awscredentialsproviderimportance: low"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 213,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.arn",
      "documentation": "Role ARN to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 213
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 214,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.external.id",
      "documentation": "The role external ID used when retrieving session credentials under an assumed role.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 214
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "DynamoDB Parameters",
      "order_in_group": 215,
      "display_name": "aws.dynamodb.credentials.provider.sts.role.session.name",
      "documentation": "Role session name to use when starting a session under an assumed role.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 215
      },
      "default": "nullimportance: high"
    },
    {
      "name": "aws.dynamodb.endpoint",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "DynamoDB Parameters",
      "order_in_group": 216,
      "display_name": "aws.dynamodb.endpoint",
      "documentation": "Overwrite endpoint configuration and AWS service discovery for DynamoDB.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 216
      },
      "default": "nullimportance: low"
    },
    {
      "name": "aws.dynamodb.region",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 217,
      "display_name": "aws.dynamodb.region",
      "documentation": "The AWS region to be used by the connector.Type: stringDefault: us-west-2Valid Values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 217
      },
      "default": "us-west-2valid values: one of [ap-south-1, eu-north-1, eu-west-3, eu-west-2, eu-west-1, ap-northeast-2, us-gov-east-1, ap-northeast-1, ca-central-1, sa-east-1, ap-east-1, cn-north-1, us-gov-west-1, ap-southeast-1, ap-southeast-2, eu-central-1, us-east-1, us-east-2, us-west-1, cn-northwest-1, us-west-2]importance: medium"
    },
    {
      "name": "table.name.format",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "DynamoDB Parameters",
      "order_in_group": 218,
      "display_name": "table.name.format",
      "documentation": "A format string for the destination table name, which may contain \u00e2\u0080\u0098${topic}\u00e2\u0080\u0099 as a placeholder for the originating topic name.For example,kafka_${topic}for the topic \u00e2\u0080\u0098orders\u00e2\u0080\u0099 will map to the table name \u00e2\u0080\u0098kafka_orders\u00e2\u0080\u0099.Type: stringDefault: ${topic}Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 218
      },
      "default": "${topic}importance: medium"
    },
    {
      "name": "aws.dynamodb.proxy.url",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Proxy Connection Parameters",
      "order_in_group": 219,
      "display_name": "aws.dynamodb.proxy.url",
      "documentation": "DynamoDB Proxy URL. For examplehttp://proxy.example.com:8080,https://user:pass@proxy.example.com:8443Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 219
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: low"
    },
    {
      "name": "aws.dynamodb.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Proxy Connection Parameters",
      "order_in_group": 220,
      "display_name": "aws.dynamodb.proxy.password",
      "documentation": "DynamoDB Proxy Password.Type: passwordDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 220
      },
      "default": "nullimportance: low"
    },
    {
      "name": "confluent.topic.bootstrap.servers",
      "type": "LISTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 221,
      "display_name": "confluent.topic.bootstrap.servers",
      "documentation": "A list of host/port pairs to use for establishing the initial connection to\nthe Kafka cluster used for licensing. All servers in the cluster will be\ndiscovered from the initial connection. This list should be in the following\nform:host1:port1,host2:port2...Since these servers are just used for the initial connection to discover the\nfull cluster membership (which may change dynamically), this list need not\ncontain the full set of servers (you may want more than one, though, in case a\nserver is down).Type: listImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 221
      }
    },
    {
      "name": "confluent.topic",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Confluent Platform license",
      "order_in_group": 222,
      "display_name": "confluent.topic",
      "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including\nlicensing information.Type: stringDefault: _confluent-commandImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 222
      },
      "default": "_confluent-commandimportance: low"
    },
    {
      "name": "confluent.topic.replication.factor",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Confluent Platform license",
      "order_in_group": 223,
      "display_name": "confluent.topic.replication.factor",
      "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration,\nincluding licensing information. This is used only if the topic does not\nalready exist, and the default of 3 is appropriate for production use. If you\nare using a development environment with less than 3 brokers, you must set\nthis to the number of brokers (often 1).Type: intDefault: 3Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 223
      },
      "default": "3importance: low"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 224,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 224
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 225,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 225
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 226,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 226
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 227,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 227
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 228,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 228
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 229,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 229
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Confluent Platform license",
      "order_in_group": 230,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 230
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 231,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 231
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 232,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 232
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 233,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 233
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 234,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 234
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 235,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 235
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 236,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 236
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Confluent license properties",
      "order_in_group": 237,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 237
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "Search by configuration property name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "Search by configuration property name",
      "documentation": "Enter a string to search and filter by configuration property name.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "name",
      "documentation": "Globally unique name to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "connector.class",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 3,
      "display_name": "connector.class",
      "documentation": "Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \u00e2\u0080\u009cFileStreamSink\u00e2\u0080\u009d or \u00e2\u0080\u009cFileStreamSinkConnector\u00e2\u0080\u009d to make the configuration a bit shorter",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "tasks.max",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 4,
      "display_name": "tasks.max",
      "documentation": "Maximum number of tasks to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "topics",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 5,
      "display_name": "topics",
      "documentation": "List of topics to consume, separated by commas",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "topics.regex",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 6,
      "display_name": "topics.regex",
      "documentation": "Regular expression giving topics to consume. Under the hood, the regex is compiled to ajava.util.regex.Pattern. Only one of topics or topics.regex should be specified.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "tasks.max.enforce",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 7,
      "display_name": "tasks.max.enforce",
      "documentation": "(Deprecated) Whether to enforce that the tasks.max property is respected by the connector. By default, connectors that generate too many tasks will fail, and existing sets of tasks that exceed the tasks.max property will also be failed. If this property is set to false, then connectors will be allowed to generate more than the maximum number of tasks, and existing sets of tasks that exceed the tasks.max property will be allowed to run. This property is deprecated and will be removed in an upcoming major release.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "key.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 8,
      "display_name": "key.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      }
    },
    {
      "name": "value.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 9,
      "display_name": "value.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      }
    },
    {
      "name": "header.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 10,
      "display_name": "header.converter",
      "documentation": "HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      }
    },
    {
      "name": "config.action.reload",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 11,
      "display_name": "config.action.reload",
      "documentation": "The action that Connect should take on the connector when changes in external configuration providers result in a change in the connector\u00e2\u0080\u0099s configuration properties. A value of \u00e2\u0080\u0098none\u00e2\u0080\u0099 indicates that Connect will do nothing. A value of \u00e2\u0080\u0098restart\u00e2\u0080\u0099 indicates that Connect should restart/reload the connector with the updated configuration properties.The restart may actually be scheduled in the future if the external configuration provider indicates that a configuration value will expire in the future.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "transforms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 12,
      "display_name": "transforms",
      "documentation": "Aliases for the transformations to be applied to records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "predicates",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 13,
      "display_name": "predicates",
      "documentation": "Aliases for the predicates used by transformations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      }
    },
    {
      "name": "errors.retry.timeout",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 14,
      "display_name": "errors.retry.timeout",
      "documentation": "The maximum duration in milliseconds that a failed operation will be reattempted. The default is 0, which means no retries will be attempted. Use -1 for infinite retries.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "errors.retry.delay.max.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 15,
      "display_name": "errors.retry.delay.max.ms",
      "documentation": "The maximum duration in milliseconds between consecutive retry attempts. Jitter will be added to the delay once this limit is reached to prevent thundering herd issues.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      }
    },
    {
      "name": "errors.tolerance",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 16,
      "display_name": "errors.tolerance",
      "documentation": "Behavior for tolerating errors during connector operation. \u00e2\u0080\u0098none\u00e2\u0080\u0099 is the default value and signals that any error will result in an immediate connector task failure; \u00e2\u0080\u0098all\u00e2\u0080\u0099 changes the behavior to skip over problematic records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "errors.log.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 17,
      "display_name": "errors.log.enable",
      "documentation": "If true, write each error and the details of the failed operation and problematic record to the Connect application log. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, so that only errors that are not tolerated are reported.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      }
    },
    {
      "name": "errors.log.include.messages",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 18,
      "display_name": "errors.log.include.messages",
      "documentation": "Whether to include in the log the Connect record that resulted in a failure. For sink records, the topic, partition, offset, and timestamp will be logged. For source records, the key and value (and their schemas), all headers, and the timestamp, Kafka topic, Kafka partition, source partition, and source offset will be logged. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, which will prevent record keys, values, and headers from being written to log files.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      }
    },
    {
      "name": "errors.deadletterqueue.topic.name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 19,
      "display_name": "errors.deadletterqueue.topic.name",
      "documentation": "The name of the topic to be used as the dead letter queue (DLQ) for messages that result in an error when processed by this sink connector, or its transformations or converters. The topic name is blank by default, which means that no messages are to be recorded in the DLQ.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      }
    },
    {
      "name": "errors.deadletterqueue.topic.replication.factor",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 20,
      "display_name": "errors.deadletterqueue.topic.replication.factor",
      "documentation": "Replication factor used to create the dead letter queue topic when it doesn\u00e2\u0080\u0099t already exist.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      }
    },
    {
      "name": "errors.deadletterqueue.context.headers.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 21,
      "display_name": "errors.deadletterqueue.context.headers.enable",
      "documentation": "If true, add headers containing error context to the messages written to the dead letter queue. To avoid clashing with headers from the original record, all error context header keys, all error context header keys will start with__connect.errors.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      }
    }
  ]
}