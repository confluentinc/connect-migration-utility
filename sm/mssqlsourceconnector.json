{
  "template_id": "MsSqlSourceConnector",
  "connector_type": "SOURCE",
  "connector.class": "io.confluent.connect.cdc.mssql.MsSqlSourceConnector",
  "name": "{{.logicalClusterId}}",
  "imports": [],
  "group_order": [
    "Database Connection",
    "Schema",
    "Source Database",
    "Target"
  ],
  "config_defs": [
    {
      "name": "initial.database",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 1,
      "display_name": "initial.database",
      "documentation": "The initial database to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 1
      }
    },
    {
      "name": "password",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 2,
      "display_name": "password",
      "documentation": "JDBC Password to connect to the database with.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "server.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 3,
      "display_name": "server.name",
      "documentation": "The database server to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "server.port",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 4,
      "display_name": "server.port",
      "documentation": "The port on the database server to connect to.Type: IntImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "username",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 5,
      "display_name": "username",
      "documentation": "JDBC Username to connect to the database with.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "change.tracking.tables",
      "type": "LISTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 6,
      "display_name": "change.tracking.tables",
      "documentation": "The tables in the source database to monitor for changes. If no tables are specified the[sys].[change_tracking_tables]view is queried for all of the available tables with change tracking enabled.Type: listImportance: mediumDefault Value: []",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "jdbc.pool.max.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 7,
      "display_name": "jdbc.pool.max.idle",
      "documentation": "The maximum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 10",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "jdbc.pool.max.total",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 8,
      "display_name": "jdbc.pool.max.total",
      "documentation": "The maximum number of connections for the connection pool to open. If a number greater than this value is requested, the caller will block waiting for a connection to be returned. This setting is shared across all of the tasks for a given database.Type: IntImportance: mediumDefault Value: 30",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      }
    },
    {
      "name": "jdbc.pool.min.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 9,
      "display_name": "jdbc.pool.min.idle",
      "documentation": "The minimum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 3",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      }
    },
    {
      "name": "instance.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 10,
      "display_name": "instance.name",
      "documentation": "The instance name for the SQL Server we are connecting to.Type: stringImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      }
    },
    {
      "name": "multi.subnet.failover.enabled",
      "type": "BOOLEANIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 11,
      "display_name": "multi.subnet.failover.enabled",
      "documentation": "Flag to enable the multisubnet failover option.Type: BooleanImportance: lowDefault Value: false",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "schema.key.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 12,
      "display_name": "schema.key.name.format",
      "documentation": "Format used to generate the name for the key schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Key",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "schema.namespace.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 13,
      "display_name": "schema.namespace.format",
      "documentation": "The namespace for the schemas generated by the connector. The format in this setting will be used to create the${namespace}variable, which is available for use in the other configuration templates. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName}, and${namespace}.Type: stringImportance: highDefault Value: com.example.data.${databaseName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      }
    },
    {
      "name": "schema.value.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 14,
      "display_name": "schema.value.name.format",
      "documentation": "Format used to generate the name for the value schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "schema.cache.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 15,
      "display_name": "schema.cache.ms",
      "documentation": "The number of milliseconds to cache key and value schema metadata in memory.Type: IntImportance: lowDefault Value: 300000Valid Values: [60000,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      },
      "valid_values": [
        "60000",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "schema.caseformat.column.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 16,
      "display_name": "schema.caseformat.column.name",
      "documentation": "This setting is used to control how the column names are cased when the resulting schemas are generated.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "schema.caseformat.database.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 17,
      "display_name": "schema.caseformat.database.name",
      "documentation": "This setting is used to control how the${databaseName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example, this can be used to take a database name ofUSER_TRACKINGto a more java like case ofuserTrackingor all lowercaseusertracking.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      }
    },
    {
      "name": "schema.caseformat.input",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 18,
      "display_name": "schema.caseformat.input",
      "documentation": "The naming convention used by the database format. This is used to define the source naming convention used by the otherschema.caseformat.*properties.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,UPPER_CAMEL,UPPER_UNDERSCORE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      }
    },
    {
      "name": "schema.caseformat.schema.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 19,
      "display_name": "schema.caseformat.schema.name",
      "documentation": "This setting is used to control how the${schemaName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a schema name ofSCOTTto a more java like case ofScottor all lowercasescott.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      }
    },
    {
      "name": "schema.caseformat.table.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 20,
      "display_name": "schema.caseformat.table.name",
      "documentation": "This setting is used to control how the${tableName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a table name ofUSER_SETTINGto a more java like case ofUserSettingor all lowercaseusersetting.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      }
    },
    {
      "name": "backoff.time.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 21,
      "display_name": "backoff.time.ms",
      "documentation": "The number of milliseconds to backoff when no records are returned from the source database.Type: IntImportance: lowDefault Value: 1000Valid Values: [50,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      },
      "valid_values": [
        "50",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topicFormat.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 22,
      "display_name": "topicFormat.format",
      "documentation": "The format that will be used to build the topic name. This allows database tables to be broken up across several topics. The following template variables can be used for string replacements.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${databaseName}.${tableName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 22
      }
    },
    {
      "name": "batch.size",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 23,
      "display_name": "batch.size",
      "documentation": "The target number of records to return during each poll from the Connect framework. This setting is independent from the general producer settingbatch.sizeType: IntImportance: lowDefault Value: 512Valid Values: [1,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 23
      },
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.max",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 24,
      "display_name": "uncomitted.record.max",
      "documentation": "The maximum number of records to allow in memory. Once this limit is reached the record deque will block to prevent running out of memory.Type: IntImportance: lowDefault Value: 50000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 24
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.timeout.ms",
      "type": "LONGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 25,
      "display_name": "uncomitted.record.timeout.ms",
      "documentation": "The maximum amount of time to wait when writing to the deque before throwing a timeout exception.Type: longImportance: lowDefault Value: 300000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 25
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "initial.database",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 26,
      "display_name": "initial.database",
      "documentation": "The initial database to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 26
      }
    },
    {
      "name": "password",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 27,
      "display_name": "password",
      "documentation": "JDBC Password to connect to the database with.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 27
      }
    },
    {
      "name": "server.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 28,
      "display_name": "server.name",
      "documentation": "The database server to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 28
      }
    },
    {
      "name": "server.port",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 29,
      "display_name": "server.port",
      "documentation": "The port on the database server to connect to.Type: IntImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 29
      }
    },
    {
      "name": "username",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 30,
      "display_name": "username",
      "documentation": "JDBC Username to connect to the database with.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 30
      }
    },
    {
      "name": "change.tracking.tables",
      "type": "LISTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 31,
      "display_name": "change.tracking.tables",
      "documentation": "The tables in the source database to monitor for changes. If no tables are specified the[sys].[change_tracking_tables]view is queried for all of the available tables with change tracking enabled.Type: listImportance: mediumDefault Value: []",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 31
      }
    },
    {
      "name": "jdbc.pool.max.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 32,
      "display_name": "jdbc.pool.max.idle",
      "documentation": "The maximum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 10",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 32
      }
    },
    {
      "name": "jdbc.pool.max.total",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 33,
      "display_name": "jdbc.pool.max.total",
      "documentation": "The maximum number of connections for the connection pool to open. If a number greater than this value is requested, the caller will block waiting for a connection to be returned. This setting is shared across all of the tasks for a given database.Type: IntImportance: mediumDefault Value: 30",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 33
      }
    },
    {
      "name": "jdbc.pool.min.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 34,
      "display_name": "jdbc.pool.min.idle",
      "documentation": "The minimum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 3",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 34
      }
    },
    {
      "name": "instance.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 35,
      "display_name": "instance.name",
      "documentation": "The instance name for the SQL Server we are connecting to.Type: stringImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 35
      }
    },
    {
      "name": "multi.subnet.failover.enabled",
      "type": "BOOLEANIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 36,
      "display_name": "multi.subnet.failover.enabled",
      "documentation": "Flag to enable the multisubnet failover option.Type: BooleanImportance: lowDefault Value: false",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 36
      }
    },
    {
      "name": "schema.key.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 37,
      "display_name": "schema.key.name.format",
      "documentation": "Format used to generate the name for the key schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Key",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 37
      }
    },
    {
      "name": "schema.namespace.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 38,
      "display_name": "schema.namespace.format",
      "documentation": "The namespace for the schemas generated by the connector. The format in this setting will be used to create the${namespace}variable, which is available for use in the other configuration templates. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName}, and${namespace}.Type: stringImportance: highDefault Value: com.example.data.${databaseName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 38
      }
    },
    {
      "name": "schema.value.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 39,
      "display_name": "schema.value.name.format",
      "documentation": "Format used to generate the name for the value schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 39
      }
    },
    {
      "name": "schema.cache.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 40,
      "display_name": "schema.cache.ms",
      "documentation": "The number of milliseconds to cache key and value schema metadata in memory.Type: IntImportance: lowDefault Value: 300000Valid Values: [60000,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 40
      },
      "valid_values": [
        "60000",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "schema.caseformat.column.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 41,
      "display_name": "schema.caseformat.column.name",
      "documentation": "This setting is used to control how the column names are cased when the resulting schemas are generated.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 41
      }
    },
    {
      "name": "schema.caseformat.database.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 42,
      "display_name": "schema.caseformat.database.name",
      "documentation": "This setting is used to control how the${databaseName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example, this can be used to take a database name ofUSER_TRACKINGto a more java like case ofuserTrackingor all lowercaseusertracking.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 42
      }
    },
    {
      "name": "schema.caseformat.input",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 43,
      "display_name": "schema.caseformat.input",
      "documentation": "The naming convention used by the database format. This is used to define the source naming convention used by the otherschema.caseformat.*properties.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,UPPER_CAMEL,UPPER_UNDERSCORE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 43
      }
    },
    {
      "name": "schema.caseformat.schema.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 44,
      "display_name": "schema.caseformat.schema.name",
      "documentation": "This setting is used to control how the${schemaName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a schema name ofSCOTTto a more java like case ofScottor all lowercasescott.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 44
      }
    },
    {
      "name": "schema.caseformat.table.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 45,
      "display_name": "schema.caseformat.table.name",
      "documentation": "This setting is used to control how the${tableName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a table name ofUSER_SETTINGto a more java like case ofUserSettingor all lowercaseusersetting.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 45
      }
    },
    {
      "name": "backoff.time.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 46,
      "display_name": "backoff.time.ms",
      "documentation": "The number of milliseconds to backoff when no records are returned from the source database.Type: IntImportance: lowDefault Value: 1000Valid Values: [50,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 46
      },
      "valid_values": [
        "50",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topicFormat.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 47,
      "display_name": "topicFormat.format",
      "documentation": "The format that will be used to build the topic name. This allows database tables to be broken up across several topics. The following template variables can be used for string replacements.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${databaseName}.${tableName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 47
      }
    },
    {
      "name": "batch.size",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 48,
      "display_name": "batch.size",
      "documentation": "The target number of records to return during each poll from the Connect framework. This setting is independent from the general producer settingbatch.sizeType: IntImportance: lowDefault Value: 512Valid Values: [1,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 48
      },
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.max",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 49,
      "display_name": "uncomitted.record.max",
      "documentation": "The maximum number of records to allow in memory. Once this limit is reached the record deque will block to prevent running out of memory.Type: IntImportance: lowDefault Value: 50000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 49
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.timeout.ms",
      "type": "LONGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 50,
      "display_name": "uncomitted.record.timeout.ms",
      "documentation": "The maximum amount of time to wait when writing to the deque before throwing a timeout exception.Type: longImportance: lowDefault Value: 300000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 50
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "initial.database",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 51,
      "display_name": "initial.database",
      "documentation": "The initial database to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 51
      }
    },
    {
      "name": "password",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 52,
      "display_name": "password",
      "documentation": "JDBC Password to connect to the database with.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 52
      }
    },
    {
      "name": "server.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 53,
      "display_name": "server.name",
      "documentation": "The database server to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 53
      }
    },
    {
      "name": "server.port",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 54,
      "display_name": "server.port",
      "documentation": "The port on the database server to connect to.Type: IntImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 54
      }
    },
    {
      "name": "username",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 55,
      "display_name": "username",
      "documentation": "JDBC Username to connect to the database with.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 55
      }
    },
    {
      "name": "change.tracking.tables",
      "type": "LISTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 56,
      "display_name": "change.tracking.tables",
      "documentation": "The tables in the source database to monitor for changes. If no tables are specified the[sys].[change_tracking_tables]view is queried for all of the available tables with change tracking enabled.Type: listImportance: mediumDefault Value: []",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 56
      }
    },
    {
      "name": "jdbc.pool.max.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 57,
      "display_name": "jdbc.pool.max.idle",
      "documentation": "The maximum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 10",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 57
      }
    },
    {
      "name": "jdbc.pool.max.total",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 58,
      "display_name": "jdbc.pool.max.total",
      "documentation": "The maximum number of connections for the connection pool to open. If a number greater than this value is requested, the caller will block waiting for a connection to be returned. This setting is shared across all of the tasks for a given database.Type: IntImportance: mediumDefault Value: 30",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 58
      }
    },
    {
      "name": "jdbc.pool.min.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 59,
      "display_name": "jdbc.pool.min.idle",
      "documentation": "The minimum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 3",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 59
      }
    },
    {
      "name": "instance.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 60,
      "display_name": "instance.name",
      "documentation": "The instance name for the SQL Server we are connecting to.Type: stringImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 60
      }
    },
    {
      "name": "multi.subnet.failover.enabled",
      "type": "BOOLEANIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 61,
      "display_name": "multi.subnet.failover.enabled",
      "documentation": "Flag to enable the multisubnet failover option.Type: BooleanImportance: lowDefault Value: false",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 61
      }
    },
    {
      "name": "schema.key.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 62,
      "display_name": "schema.key.name.format",
      "documentation": "Format used to generate the name for the key schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Key",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 62
      }
    },
    {
      "name": "schema.namespace.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 63,
      "display_name": "schema.namespace.format",
      "documentation": "The namespace for the schemas generated by the connector. The format in this setting will be used to create the${namespace}variable, which is available for use in the other configuration templates. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName}, and${namespace}.Type: stringImportance: highDefault Value: com.example.data.${databaseName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 63
      }
    },
    {
      "name": "schema.value.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 64,
      "display_name": "schema.value.name.format",
      "documentation": "Format used to generate the name for the value schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 64
      }
    },
    {
      "name": "schema.cache.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 65,
      "display_name": "schema.cache.ms",
      "documentation": "The number of milliseconds to cache key and value schema metadata in memory.Type: IntImportance: lowDefault Value: 300000Valid Values: [60000,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 65
      },
      "valid_values": [
        "60000",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "schema.caseformat.column.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 66,
      "display_name": "schema.caseformat.column.name",
      "documentation": "This setting is used to control how the column names are cased when the resulting schemas are generated.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 66
      }
    },
    {
      "name": "schema.caseformat.database.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 67,
      "display_name": "schema.caseformat.database.name",
      "documentation": "This setting is used to control how the${databaseName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example, this can be used to take a database name ofUSER_TRACKINGto a more java like case ofuserTrackingor all lowercaseusertracking.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 67
      }
    },
    {
      "name": "schema.caseformat.input",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 68,
      "display_name": "schema.caseformat.input",
      "documentation": "The naming convention used by the database format. This is used to define the source naming convention used by the otherschema.caseformat.*properties.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,UPPER_CAMEL,UPPER_UNDERSCORE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 68
      }
    },
    {
      "name": "schema.caseformat.schema.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 69,
      "display_name": "schema.caseformat.schema.name",
      "documentation": "This setting is used to control how the${schemaName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a schema name ofSCOTTto a more java like case ofScottor all lowercasescott.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 69
      }
    },
    {
      "name": "schema.caseformat.table.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 70,
      "display_name": "schema.caseformat.table.name",
      "documentation": "This setting is used to control how the${tableName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a table name ofUSER_SETTINGto a more java like case ofUserSettingor all lowercaseusersetting.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 70
      }
    },
    {
      "name": "backoff.time.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 71,
      "display_name": "backoff.time.ms",
      "documentation": "The number of milliseconds to backoff when no records are returned from the source database.Type: IntImportance: lowDefault Value: 1000Valid Values: [50,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 71
      },
      "valid_values": [
        "50",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topicFormat.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 72,
      "display_name": "topicFormat.format",
      "documentation": "The format that will be used to build the topic name. This allows database tables to be broken up across several topics. The following template variables can be used for string replacements.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${databaseName}.${tableName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 72
      }
    },
    {
      "name": "batch.size",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 73,
      "display_name": "batch.size",
      "documentation": "The target number of records to return during each poll from the Connect framework. This setting is independent from the general producer settingbatch.sizeType: IntImportance: lowDefault Value: 512Valid Values: [1,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 73
      },
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.max",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 74,
      "display_name": "uncomitted.record.max",
      "documentation": "The maximum number of records to allow in memory. Once this limit is reached the record deque will block to prevent running out of memory.Type: IntImportance: lowDefault Value: 50000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 74
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.timeout.ms",
      "type": "LONGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 75,
      "display_name": "uncomitted.record.timeout.ms",
      "documentation": "The maximum amount of time to wait when writing to the deque before throwing a timeout exception.Type: longImportance: lowDefault Value: 300000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 75
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "initial.database",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 76,
      "display_name": "initial.database",
      "documentation": "The initial database to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 76
      }
    },
    {
      "name": "password",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 77,
      "display_name": "password",
      "documentation": "JDBC Password to connect to the database with.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 77
      }
    },
    {
      "name": "server.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 78,
      "display_name": "server.name",
      "documentation": "The database server to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 78
      }
    },
    {
      "name": "server.port",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 79,
      "display_name": "server.port",
      "documentation": "The port on the database server to connect to.Type: IntImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 79
      }
    },
    {
      "name": "username",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 80,
      "display_name": "username",
      "documentation": "JDBC Username to connect to the database with.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 80
      }
    },
    {
      "name": "change.tracking.tables",
      "type": "LISTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 81,
      "display_name": "change.tracking.tables",
      "documentation": "The tables in the source database to monitor for changes. If no tables are specified the[sys].[change_tracking_tables]view is queried for all of the available tables with change tracking enabled.Type: listImportance: mediumDefault Value: []",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 81
      }
    },
    {
      "name": "jdbc.pool.max.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 82,
      "display_name": "jdbc.pool.max.idle",
      "documentation": "The maximum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 10",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 82
      }
    },
    {
      "name": "jdbc.pool.max.total",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 83,
      "display_name": "jdbc.pool.max.total",
      "documentation": "The maximum number of connections for the connection pool to open. If a number greater than this value is requested, the caller will block waiting for a connection to be returned. This setting is shared across all of the tasks for a given database.Type: IntImportance: mediumDefault Value: 30",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 83
      }
    },
    {
      "name": "jdbc.pool.min.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 84,
      "display_name": "jdbc.pool.min.idle",
      "documentation": "The minimum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 3",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 84
      }
    },
    {
      "name": "instance.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 85,
      "display_name": "instance.name",
      "documentation": "The instance name for the SQL Server we are connecting to.Type: stringImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 85
      }
    },
    {
      "name": "multi.subnet.failover.enabled",
      "type": "BOOLEANIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 86,
      "display_name": "multi.subnet.failover.enabled",
      "documentation": "Flag to enable the multisubnet failover option.Type: BooleanImportance: lowDefault Value: false",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 86
      }
    },
    {
      "name": "schema.key.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 87,
      "display_name": "schema.key.name.format",
      "documentation": "Format used to generate the name for the key schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Key",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 87
      }
    },
    {
      "name": "schema.namespace.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 88,
      "display_name": "schema.namespace.format",
      "documentation": "The namespace for the schemas generated by the connector. The format in this setting will be used to create the${namespace}variable, which is available for use in the other configuration templates. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName}, and${namespace}.Type: stringImportance: highDefault Value: com.example.data.${databaseName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 88
      }
    },
    {
      "name": "schema.value.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 89,
      "display_name": "schema.value.name.format",
      "documentation": "Format used to generate the name for the value schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 89
      }
    },
    {
      "name": "schema.cache.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 90,
      "display_name": "schema.cache.ms",
      "documentation": "The number of milliseconds to cache key and value schema metadata in memory.Type: IntImportance: lowDefault Value: 300000Valid Values: [60000,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 90
      },
      "valid_values": [
        "60000",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "schema.caseformat.column.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 91,
      "display_name": "schema.caseformat.column.name",
      "documentation": "This setting is used to control how the column names are cased when the resulting schemas are generated.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 91
      }
    },
    {
      "name": "schema.caseformat.database.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 92,
      "display_name": "schema.caseformat.database.name",
      "documentation": "This setting is used to control how the${databaseName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example, this can be used to take a database name ofUSER_TRACKINGto a more java like case ofuserTrackingor all lowercaseusertracking.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 92
      }
    },
    {
      "name": "schema.caseformat.input",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 93,
      "display_name": "schema.caseformat.input",
      "documentation": "The naming convention used by the database format. This is used to define the source naming convention used by the otherschema.caseformat.*properties.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,UPPER_CAMEL,UPPER_UNDERSCORE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 93
      }
    },
    {
      "name": "schema.caseformat.schema.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 94,
      "display_name": "schema.caseformat.schema.name",
      "documentation": "This setting is used to control how the${schemaName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a schema name ofSCOTTto a more java like case ofScottor all lowercasescott.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 94
      }
    },
    {
      "name": "schema.caseformat.table.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 95,
      "display_name": "schema.caseformat.table.name",
      "documentation": "This setting is used to control how the${tableName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a table name ofUSER_SETTINGto a more java like case ofUserSettingor all lowercaseusersetting.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 95
      }
    },
    {
      "name": "backoff.time.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 96,
      "display_name": "backoff.time.ms",
      "documentation": "The number of milliseconds to backoff when no records are returned from the source database.Type: IntImportance: lowDefault Value: 1000Valid Values: [50,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 96
      },
      "valid_values": [
        "50",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topicFormat.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 97,
      "display_name": "topicFormat.format",
      "documentation": "The format that will be used to build the topic name. This allows database tables to be broken up across several topics. The following template variables can be used for string replacements.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${databaseName}.${tableName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 97
      }
    },
    {
      "name": "batch.size",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 98,
      "display_name": "batch.size",
      "documentation": "The target number of records to return during each poll from the Connect framework. This setting is independent from the general producer settingbatch.sizeType: IntImportance: lowDefault Value: 512Valid Values: [1,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 98
      },
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.max",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 99,
      "display_name": "uncomitted.record.max",
      "documentation": "The maximum number of records to allow in memory. Once this limit is reached the record deque will block to prevent running out of memory.Type: IntImportance: lowDefault Value: 50000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 99
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.timeout.ms",
      "type": "LONGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 100,
      "display_name": "uncomitted.record.timeout.ms",
      "documentation": "The maximum amount of time to wait when writing to the deque before throwing a timeout exception.Type: longImportance: lowDefault Value: 300000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 100
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "initial.database",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 101,
      "display_name": "initial.database",
      "documentation": "The initial database to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 101
      }
    },
    {
      "name": "password",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 102,
      "display_name": "password",
      "documentation": "JDBC Password to connect to the database with.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 102
      }
    },
    {
      "name": "server.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 103,
      "display_name": "server.name",
      "documentation": "The database server to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 103
      }
    },
    {
      "name": "server.port",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 104,
      "display_name": "server.port",
      "documentation": "The port on the database server to connect to.Type: IntImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 104
      }
    },
    {
      "name": "username",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 105,
      "display_name": "username",
      "documentation": "JDBC Username to connect to the database with.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 105
      }
    },
    {
      "name": "change.tracking.tables",
      "type": "LISTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 106,
      "display_name": "change.tracking.tables",
      "documentation": "The tables in the source database to monitor for changes. If no tables are specified the[sys].[change_tracking_tables]view is queried for all of the available tables with change tracking enabled.Type: listImportance: mediumDefault Value: []",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 106
      }
    },
    {
      "name": "jdbc.pool.max.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 107,
      "display_name": "jdbc.pool.max.idle",
      "documentation": "The maximum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 10",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 107
      }
    },
    {
      "name": "jdbc.pool.max.total",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 108,
      "display_name": "jdbc.pool.max.total",
      "documentation": "The maximum number of connections for the connection pool to open. If a number greater than this value is requested, the caller will block waiting for a connection to be returned. This setting is shared across all of the tasks for a given database.Type: IntImportance: mediumDefault Value: 30",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 108
      }
    },
    {
      "name": "jdbc.pool.min.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 109,
      "display_name": "jdbc.pool.min.idle",
      "documentation": "The minimum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 3",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 109
      }
    },
    {
      "name": "instance.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 110,
      "display_name": "instance.name",
      "documentation": "The instance name for the SQL Server we are connecting to.Type: stringImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 110
      }
    },
    {
      "name": "multi.subnet.failover.enabled",
      "type": "BOOLEANIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 111,
      "display_name": "multi.subnet.failover.enabled",
      "documentation": "Flag to enable the multisubnet failover option.Type: BooleanImportance: lowDefault Value: false",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 111
      }
    },
    {
      "name": "schema.key.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 112,
      "display_name": "schema.key.name.format",
      "documentation": "Format used to generate the name for the key schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Key",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 112
      }
    },
    {
      "name": "schema.namespace.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 113,
      "display_name": "schema.namespace.format",
      "documentation": "The namespace for the schemas generated by the connector. The format in this setting will be used to create the${namespace}variable, which is available for use in the other configuration templates. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName}, and${namespace}.Type: stringImportance: highDefault Value: com.example.data.${databaseName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 113
      }
    },
    {
      "name": "schema.value.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 114,
      "display_name": "schema.value.name.format",
      "documentation": "Format used to generate the name for the value schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 114
      }
    },
    {
      "name": "schema.cache.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 115,
      "display_name": "schema.cache.ms",
      "documentation": "The number of milliseconds to cache key and value schema metadata in memory.Type: IntImportance: lowDefault Value: 300000Valid Values: [60000,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 115
      },
      "valid_values": [
        "60000",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "schema.caseformat.column.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 116,
      "display_name": "schema.caseformat.column.name",
      "documentation": "This setting is used to control how the column names are cased when the resulting schemas are generated.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 116
      }
    },
    {
      "name": "schema.caseformat.database.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 117,
      "display_name": "schema.caseformat.database.name",
      "documentation": "This setting is used to control how the${databaseName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example, this can be used to take a database name ofUSER_TRACKINGto a more java like case ofuserTrackingor all lowercaseusertracking.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 117
      }
    },
    {
      "name": "schema.caseformat.input",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 118,
      "display_name": "schema.caseformat.input",
      "documentation": "The naming convention used by the database format. This is used to define the source naming convention used by the otherschema.caseformat.*properties.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,UPPER_CAMEL,UPPER_UNDERSCORE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 118
      }
    },
    {
      "name": "schema.caseformat.schema.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 119,
      "display_name": "schema.caseformat.schema.name",
      "documentation": "This setting is used to control how the${schemaName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a schema name ofSCOTTto a more java like case ofScottor all lowercasescott.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 119
      }
    },
    {
      "name": "schema.caseformat.table.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 120,
      "display_name": "schema.caseformat.table.name",
      "documentation": "This setting is used to control how the${tableName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a table name ofUSER_SETTINGto a more java like case ofUserSettingor all lowercaseusersetting.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 120
      }
    },
    {
      "name": "backoff.time.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 121,
      "display_name": "backoff.time.ms",
      "documentation": "The number of milliseconds to backoff when no records are returned from the source database.Type: IntImportance: lowDefault Value: 1000Valid Values: [50,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 121
      },
      "valid_values": [
        "50",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topicFormat.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 122,
      "display_name": "topicFormat.format",
      "documentation": "The format that will be used to build the topic name. This allows database tables to be broken up across several topics. The following template variables can be used for string replacements.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${databaseName}.${tableName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 122
      }
    },
    {
      "name": "batch.size",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 123,
      "display_name": "batch.size",
      "documentation": "The target number of records to return during each poll from the Connect framework. This setting is independent from the general producer settingbatch.sizeType: IntImportance: lowDefault Value: 512Valid Values: [1,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 123
      },
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.max",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 124,
      "display_name": "uncomitted.record.max",
      "documentation": "The maximum number of records to allow in memory. Once this limit is reached the record deque will block to prevent running out of memory.Type: IntImportance: lowDefault Value: 50000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 124
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.timeout.ms",
      "type": "LONGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 125,
      "display_name": "uncomitted.record.timeout.ms",
      "documentation": "The maximum amount of time to wait when writing to the deque before throwing a timeout exception.Type: longImportance: lowDefault Value: 300000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 125
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "initial.database",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 126,
      "display_name": "initial.database",
      "documentation": "The initial database to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 126
      }
    },
    {
      "name": "password",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 127,
      "display_name": "password",
      "documentation": "JDBC Password to connect to the database with.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 127
      }
    },
    {
      "name": "server.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 128,
      "display_name": "server.name",
      "documentation": "The database server to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 128
      }
    },
    {
      "name": "server.port",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 129,
      "display_name": "server.port",
      "documentation": "The port on the database server to connect to.Type: IntImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 129
      }
    },
    {
      "name": "username",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 130,
      "display_name": "username",
      "documentation": "JDBC Username to connect to the database with.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 130
      }
    },
    {
      "name": "change.tracking.tables",
      "type": "LISTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 131,
      "display_name": "change.tracking.tables",
      "documentation": "The tables in the source database to monitor for changes. If no tables are specified the[sys].[change_tracking_tables]view is queried for all of the available tables with change tracking enabled.Type: listImportance: mediumDefault Value: []",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 131
      }
    },
    {
      "name": "jdbc.pool.max.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 132,
      "display_name": "jdbc.pool.max.idle",
      "documentation": "The maximum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 10",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 132
      }
    },
    {
      "name": "jdbc.pool.max.total",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 133,
      "display_name": "jdbc.pool.max.total",
      "documentation": "The maximum number of connections for the connection pool to open. If a number greater than this value is requested, the caller will block waiting for a connection to be returned. This setting is shared across all of the tasks for a given database.Type: IntImportance: mediumDefault Value: 30",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 133
      }
    },
    {
      "name": "jdbc.pool.min.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 134,
      "display_name": "jdbc.pool.min.idle",
      "documentation": "The minimum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 3",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 134
      }
    },
    {
      "name": "instance.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 135,
      "display_name": "instance.name",
      "documentation": "The instance name for the SQL Server we are connecting to.Type: stringImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 135
      }
    },
    {
      "name": "multi.subnet.failover.enabled",
      "type": "BOOLEANIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 136,
      "display_name": "multi.subnet.failover.enabled",
      "documentation": "Flag to enable the multisubnet failover option.Type: BooleanImportance: lowDefault Value: false",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 136
      }
    },
    {
      "name": "schema.key.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 137,
      "display_name": "schema.key.name.format",
      "documentation": "Format used to generate the name for the key schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Key",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 137
      }
    },
    {
      "name": "schema.namespace.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 138,
      "display_name": "schema.namespace.format",
      "documentation": "The namespace for the schemas generated by the connector. The format in this setting will be used to create the${namespace}variable, which is available for use in the other configuration templates. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName}, and${namespace}.Type: stringImportance: highDefault Value: com.example.data.${databaseName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 138
      }
    },
    {
      "name": "schema.value.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 139,
      "display_name": "schema.value.name.format",
      "documentation": "Format used to generate the name for the value schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 139
      }
    },
    {
      "name": "schema.cache.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 140,
      "display_name": "schema.cache.ms",
      "documentation": "The number of milliseconds to cache key and value schema metadata in memory.Type: IntImportance: lowDefault Value: 300000Valid Values: [60000,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 140
      },
      "valid_values": [
        "60000",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "schema.caseformat.column.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 141,
      "display_name": "schema.caseformat.column.name",
      "documentation": "This setting is used to control how the column names are cased when the resulting schemas are generated.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 141
      }
    },
    {
      "name": "schema.caseformat.database.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 142,
      "display_name": "schema.caseformat.database.name",
      "documentation": "This setting is used to control how the${databaseName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example, this can be used to take a database name ofUSER_TRACKINGto a more java like case ofuserTrackingor all lowercaseusertracking.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 142
      }
    },
    {
      "name": "schema.caseformat.input",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 143,
      "display_name": "schema.caseformat.input",
      "documentation": "The naming convention used by the database format. This is used to define the source naming convention used by the otherschema.caseformat.*properties.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,UPPER_CAMEL,UPPER_UNDERSCORE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 143
      }
    },
    {
      "name": "schema.caseformat.schema.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 144,
      "display_name": "schema.caseformat.schema.name",
      "documentation": "This setting is used to control how the${schemaName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a schema name ofSCOTTto a more java like case ofScottor all lowercasescott.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 144
      }
    },
    {
      "name": "schema.caseformat.table.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 145,
      "display_name": "schema.caseformat.table.name",
      "documentation": "This setting is used to control how the${tableName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a table name ofUSER_SETTINGto a more java like case ofUserSettingor all lowercaseusersetting.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 145
      }
    },
    {
      "name": "backoff.time.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 146,
      "display_name": "backoff.time.ms",
      "documentation": "The number of milliseconds to backoff when no records are returned from the source database.Type: IntImportance: lowDefault Value: 1000Valid Values: [50,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 146
      },
      "valid_values": [
        "50",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topicFormat.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 147,
      "display_name": "topicFormat.format",
      "documentation": "The format that will be used to build the topic name. This allows database tables to be broken up across several topics. The following template variables can be used for string replacements.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${databaseName}.${tableName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 147
      }
    },
    {
      "name": "batch.size",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 148,
      "display_name": "batch.size",
      "documentation": "The target number of records to return during each poll from the Connect framework. This setting is independent from the general producer settingbatch.sizeType: IntImportance: lowDefault Value: 512Valid Values: [1,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 148
      },
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.max",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 149,
      "display_name": "uncomitted.record.max",
      "documentation": "The maximum number of records to allow in memory. Once this limit is reached the record deque will block to prevent running out of memory.Type: IntImportance: lowDefault Value: 50000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 149
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.timeout.ms",
      "type": "LONGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 150,
      "display_name": "uncomitted.record.timeout.ms",
      "documentation": "The maximum amount of time to wait when writing to the deque before throwing a timeout exception.Type: longImportance: lowDefault Value: 300000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 150
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "initial.database",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 151,
      "display_name": "initial.database",
      "documentation": "The initial database to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 151
      }
    },
    {
      "name": "password",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 152,
      "display_name": "password",
      "documentation": "JDBC Password to connect to the database with.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 152
      }
    },
    {
      "name": "server.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 153,
      "display_name": "server.name",
      "documentation": "The database server to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 153
      }
    },
    {
      "name": "server.port",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 154,
      "display_name": "server.port",
      "documentation": "The port on the database server to connect to.Type: IntImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 154
      }
    },
    {
      "name": "username",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 155,
      "display_name": "username",
      "documentation": "JDBC Username to connect to the database with.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 155
      }
    },
    {
      "name": "change.tracking.tables",
      "type": "LISTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 156,
      "display_name": "change.tracking.tables",
      "documentation": "The tables in the source database to monitor for changes. If no tables are specified the[sys].[change_tracking_tables]view is queried for all of the available tables with change tracking enabled.Type: listImportance: mediumDefault Value: []",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 156
      }
    },
    {
      "name": "jdbc.pool.max.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 157,
      "display_name": "jdbc.pool.max.idle",
      "documentation": "The maximum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 10",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 157
      }
    },
    {
      "name": "jdbc.pool.max.total",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 158,
      "display_name": "jdbc.pool.max.total",
      "documentation": "The maximum number of connections for the connection pool to open. If a number greater than this value is requested, the caller will block waiting for a connection to be returned. This setting is shared across all of the tasks for a given database.Type: IntImportance: mediumDefault Value: 30",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 158
      }
    },
    {
      "name": "jdbc.pool.min.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 159,
      "display_name": "jdbc.pool.min.idle",
      "documentation": "The minimum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 3",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 159
      }
    },
    {
      "name": "instance.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 160,
      "display_name": "instance.name",
      "documentation": "The instance name for the SQL Server we are connecting to.Type: stringImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 160
      }
    },
    {
      "name": "multi.subnet.failover.enabled",
      "type": "BOOLEANIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 161,
      "display_name": "multi.subnet.failover.enabled",
      "documentation": "Flag to enable the multisubnet failover option.Type: BooleanImportance: lowDefault Value: false",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 161
      }
    },
    {
      "name": "schema.key.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 162,
      "display_name": "schema.key.name.format",
      "documentation": "Format used to generate the name for the key schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Key",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 162
      }
    },
    {
      "name": "schema.namespace.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 163,
      "display_name": "schema.namespace.format",
      "documentation": "The namespace for the schemas generated by the connector. The format in this setting will be used to create the${namespace}variable, which is available for use in the other configuration templates. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName}, and${namespace}.Type: stringImportance: highDefault Value: com.example.data.${databaseName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 163
      }
    },
    {
      "name": "schema.value.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 164,
      "display_name": "schema.value.name.format",
      "documentation": "Format used to generate the name for the value schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 164
      }
    },
    {
      "name": "schema.cache.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 165,
      "display_name": "schema.cache.ms",
      "documentation": "The number of milliseconds to cache key and value schema metadata in memory.Type: IntImportance: lowDefault Value: 300000Valid Values: [60000,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 165
      },
      "valid_values": [
        "60000",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "schema.caseformat.column.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 166,
      "display_name": "schema.caseformat.column.name",
      "documentation": "This setting is used to control how the column names are cased when the resulting schemas are generated.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 166
      }
    },
    {
      "name": "schema.caseformat.database.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 167,
      "display_name": "schema.caseformat.database.name",
      "documentation": "This setting is used to control how the${databaseName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example, this can be used to take a database name ofUSER_TRACKINGto a more java like case ofuserTrackingor all lowercaseusertracking.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 167
      }
    },
    {
      "name": "schema.caseformat.input",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 168,
      "display_name": "schema.caseformat.input",
      "documentation": "The naming convention used by the database format. This is used to define the source naming convention used by the otherschema.caseformat.*properties.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,UPPER_CAMEL,UPPER_UNDERSCORE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 168
      }
    },
    {
      "name": "schema.caseformat.schema.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 169,
      "display_name": "schema.caseformat.schema.name",
      "documentation": "This setting is used to control how the${schemaName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a schema name ofSCOTTto a more java like case ofScottor all lowercasescott.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 169
      }
    },
    {
      "name": "schema.caseformat.table.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 170,
      "display_name": "schema.caseformat.table.name",
      "documentation": "This setting is used to control how the${tableName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a table name ofUSER_SETTINGto a more java like case ofUserSettingor all lowercaseusersetting.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 170
      }
    },
    {
      "name": "backoff.time.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 171,
      "display_name": "backoff.time.ms",
      "documentation": "The number of milliseconds to backoff when no records are returned from the source database.Type: IntImportance: lowDefault Value: 1000Valid Values: [50,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 171
      },
      "valid_values": [
        "50",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topicFormat.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 172,
      "display_name": "topicFormat.format",
      "documentation": "The format that will be used to build the topic name. This allows database tables to be broken up across several topics. The following template variables can be used for string replacements.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${databaseName}.${tableName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 172
      }
    },
    {
      "name": "batch.size",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 173,
      "display_name": "batch.size",
      "documentation": "The target number of records to return during each poll from the Connect framework. This setting is independent from the general producer settingbatch.sizeType: IntImportance: lowDefault Value: 512Valid Values: [1,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 173
      },
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.max",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 174,
      "display_name": "uncomitted.record.max",
      "documentation": "The maximum number of records to allow in memory. Once this limit is reached the record deque will block to prevent running out of memory.Type: IntImportance: lowDefault Value: 50000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 174
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.timeout.ms",
      "type": "LONGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 175,
      "display_name": "uncomitted.record.timeout.ms",
      "documentation": "The maximum amount of time to wait when writing to the deque before throwing a timeout exception.Type: longImportance: lowDefault Value: 300000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 175
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "initial.database",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 176,
      "display_name": "initial.database",
      "documentation": "The initial database to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 176
      }
    },
    {
      "name": "password",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 177,
      "display_name": "password",
      "documentation": "JDBC Password to connect to the database with.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 177
      }
    },
    {
      "name": "server.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 178,
      "display_name": "server.name",
      "documentation": "The database server to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 178
      }
    },
    {
      "name": "server.port",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 179,
      "display_name": "server.port",
      "documentation": "The port on the database server to connect to.Type: IntImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 179
      }
    },
    {
      "name": "username",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 180,
      "display_name": "username",
      "documentation": "JDBC Username to connect to the database with.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 180
      }
    },
    {
      "name": "change.tracking.tables",
      "type": "LISTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 181,
      "display_name": "change.tracking.tables",
      "documentation": "The tables in the source database to monitor for changes. If no tables are specified the[sys].[change_tracking_tables]view is queried for all of the available tables with change tracking enabled.Type: listImportance: mediumDefault Value: []",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 181
      }
    },
    {
      "name": "jdbc.pool.max.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 182,
      "display_name": "jdbc.pool.max.idle",
      "documentation": "The maximum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 10",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 182
      }
    },
    {
      "name": "jdbc.pool.max.total",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 183,
      "display_name": "jdbc.pool.max.total",
      "documentation": "The maximum number of connections for the connection pool to open. If a number greater than this value is requested, the caller will block waiting for a connection to be returned. This setting is shared across all of the tasks for a given database.Type: IntImportance: mediumDefault Value: 30",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 183
      }
    },
    {
      "name": "jdbc.pool.min.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 184,
      "display_name": "jdbc.pool.min.idle",
      "documentation": "The minimum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 3",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 184
      }
    },
    {
      "name": "instance.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 185,
      "display_name": "instance.name",
      "documentation": "The instance name for the SQL Server we are connecting to.Type: stringImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 185
      }
    },
    {
      "name": "multi.subnet.failover.enabled",
      "type": "BOOLEANIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 186,
      "display_name": "multi.subnet.failover.enabled",
      "documentation": "Flag to enable the multisubnet failover option.Type: BooleanImportance: lowDefault Value: false",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 186
      }
    },
    {
      "name": "schema.key.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 187,
      "display_name": "schema.key.name.format",
      "documentation": "Format used to generate the name for the key schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Key",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 187
      }
    },
    {
      "name": "schema.namespace.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 188,
      "display_name": "schema.namespace.format",
      "documentation": "The namespace for the schemas generated by the connector. The format in this setting will be used to create the${namespace}variable, which is available for use in the other configuration templates. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName}, and${namespace}.Type: stringImportance: highDefault Value: com.example.data.${databaseName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 188
      }
    },
    {
      "name": "schema.value.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 189,
      "display_name": "schema.value.name.format",
      "documentation": "Format used to generate the name for the value schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 189
      }
    },
    {
      "name": "schema.cache.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 190,
      "display_name": "schema.cache.ms",
      "documentation": "The number of milliseconds to cache key and value schema metadata in memory.Type: IntImportance: lowDefault Value: 300000Valid Values: [60000,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 190
      },
      "valid_values": [
        "60000",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "schema.caseformat.column.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 191,
      "display_name": "schema.caseformat.column.name",
      "documentation": "This setting is used to control how the column names are cased when the resulting schemas are generated.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 191
      }
    },
    {
      "name": "schema.caseformat.database.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 192,
      "display_name": "schema.caseformat.database.name",
      "documentation": "This setting is used to control how the${databaseName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example, this can be used to take a database name ofUSER_TRACKINGto a more java like case ofuserTrackingor all lowercaseusertracking.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 192
      }
    },
    {
      "name": "schema.caseformat.input",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 193,
      "display_name": "schema.caseformat.input",
      "documentation": "The naming convention used by the database format. This is used to define the source naming convention used by the otherschema.caseformat.*properties.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,UPPER_CAMEL,UPPER_UNDERSCORE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 193
      }
    },
    {
      "name": "schema.caseformat.schema.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 194,
      "display_name": "schema.caseformat.schema.name",
      "documentation": "This setting is used to control how the${schemaName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a schema name ofSCOTTto a more java like case ofScottor all lowercasescott.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 194
      }
    },
    {
      "name": "schema.caseformat.table.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 195,
      "display_name": "schema.caseformat.table.name",
      "documentation": "This setting is used to control how the${tableName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a table name ofUSER_SETTINGto a more java like case ofUserSettingor all lowercaseusersetting.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 195
      }
    },
    {
      "name": "backoff.time.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 196,
      "display_name": "backoff.time.ms",
      "documentation": "The number of milliseconds to backoff when no records are returned from the source database.Type: IntImportance: lowDefault Value: 1000Valid Values: [50,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 196
      },
      "valid_values": [
        "50",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topicFormat.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 197,
      "display_name": "topicFormat.format",
      "documentation": "The format that will be used to build the topic name. This allows database tables to be broken up across several topics. The following template variables can be used for string replacements.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${databaseName}.${tableName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 197
      }
    },
    {
      "name": "batch.size",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 198,
      "display_name": "batch.size",
      "documentation": "The target number of records to return during each poll from the Connect framework. This setting is independent from the general producer settingbatch.sizeType: IntImportance: lowDefault Value: 512Valid Values: [1,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 198
      },
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.max",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 199,
      "display_name": "uncomitted.record.max",
      "documentation": "The maximum number of records to allow in memory. Once this limit is reached the record deque will block to prevent running out of memory.Type: IntImportance: lowDefault Value: 50000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 199
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.timeout.ms",
      "type": "LONGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 200,
      "display_name": "uncomitted.record.timeout.ms",
      "documentation": "The maximum amount of time to wait when writing to the deque before throwing a timeout exception.Type: longImportance: lowDefault Value: 300000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 200
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "initial.database",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 201,
      "display_name": "initial.database",
      "documentation": "The initial database to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 201
      }
    },
    {
      "name": "password",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 202,
      "display_name": "password",
      "documentation": "JDBC Password to connect to the database with.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 202
      }
    },
    {
      "name": "server.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 203,
      "display_name": "server.name",
      "documentation": "The database server to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 203
      }
    },
    {
      "name": "server.port",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 204,
      "display_name": "server.port",
      "documentation": "The port on the database server to connect to.Type: IntImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 204
      }
    },
    {
      "name": "username",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 205,
      "display_name": "username",
      "documentation": "JDBC Username to connect to the database with.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 205
      }
    },
    {
      "name": "change.tracking.tables",
      "type": "LISTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 206,
      "display_name": "change.tracking.tables",
      "documentation": "The tables in the source database to monitor for changes. If no tables are specified the[sys].[change_tracking_tables]view is queried for all of the available tables with change tracking enabled.Type: listImportance: mediumDefault Value: []",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 206
      }
    },
    {
      "name": "jdbc.pool.max.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 207,
      "display_name": "jdbc.pool.max.idle",
      "documentation": "The maximum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 10",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 207
      }
    },
    {
      "name": "jdbc.pool.max.total",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 208,
      "display_name": "jdbc.pool.max.total",
      "documentation": "The maximum number of connections for the connection pool to open. If a number greater than this value is requested, the caller will block waiting for a connection to be returned. This setting is shared across all of the tasks for a given database.Type: IntImportance: mediumDefault Value: 30",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 208
      }
    },
    {
      "name": "jdbc.pool.min.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 209,
      "display_name": "jdbc.pool.min.idle",
      "documentation": "The minimum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 3",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 209
      }
    },
    {
      "name": "instance.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 210,
      "display_name": "instance.name",
      "documentation": "The instance name for the SQL Server we are connecting to.Type: stringImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 210
      }
    },
    {
      "name": "multi.subnet.failover.enabled",
      "type": "BOOLEANIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 211,
      "display_name": "multi.subnet.failover.enabled",
      "documentation": "Flag to enable the multisubnet failover option.Type: BooleanImportance: lowDefault Value: false",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 211
      }
    },
    {
      "name": "schema.key.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 212,
      "display_name": "schema.key.name.format",
      "documentation": "Format used to generate the name for the key schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Key",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 212
      }
    },
    {
      "name": "schema.namespace.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 213,
      "display_name": "schema.namespace.format",
      "documentation": "The namespace for the schemas generated by the connector. The format in this setting will be used to create the${namespace}variable, which is available for use in the other configuration templates. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName}, and${namespace}.Type: stringImportance: highDefault Value: com.example.data.${databaseName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 213
      }
    },
    {
      "name": "schema.value.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 214,
      "display_name": "schema.value.name.format",
      "documentation": "Format used to generate the name for the value schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 214
      }
    },
    {
      "name": "schema.cache.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 215,
      "display_name": "schema.cache.ms",
      "documentation": "The number of milliseconds to cache key and value schema metadata in memory.Type: IntImportance: lowDefault Value: 300000Valid Values: [60000,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 215
      },
      "valid_values": [
        "60000",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "schema.caseformat.column.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 216,
      "display_name": "schema.caseformat.column.name",
      "documentation": "This setting is used to control how the column names are cased when the resulting schemas are generated.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 216
      }
    },
    {
      "name": "schema.caseformat.database.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 217,
      "display_name": "schema.caseformat.database.name",
      "documentation": "This setting is used to control how the${databaseName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example, this can be used to take a database name ofUSER_TRACKINGto a more java like case ofuserTrackingor all lowercaseusertracking.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 217
      }
    },
    {
      "name": "schema.caseformat.input",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 218,
      "display_name": "schema.caseformat.input",
      "documentation": "The naming convention used by the database format. This is used to define the source naming convention used by the otherschema.caseformat.*properties.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,UPPER_CAMEL,UPPER_UNDERSCORE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 218
      }
    },
    {
      "name": "schema.caseformat.schema.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 219,
      "display_name": "schema.caseformat.schema.name",
      "documentation": "This setting is used to control how the${schemaName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a schema name ofSCOTTto a more java like case ofScottor all lowercasescott.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 219
      }
    },
    {
      "name": "schema.caseformat.table.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 220,
      "display_name": "schema.caseformat.table.name",
      "documentation": "This setting is used to control how the${tableName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a table name ofUSER_SETTINGto a more java like case ofUserSettingor all lowercaseusersetting.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 220
      }
    },
    {
      "name": "backoff.time.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 221,
      "display_name": "backoff.time.ms",
      "documentation": "The number of milliseconds to backoff when no records are returned from the source database.Type: IntImportance: lowDefault Value: 1000Valid Values: [50,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 221
      },
      "valid_values": [
        "50",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topicFormat.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 222,
      "display_name": "topicFormat.format",
      "documentation": "The format that will be used to build the topic name. This allows database tables to be broken up across several topics. The following template variables can be used for string replacements.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${databaseName}.${tableName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 222
      }
    },
    {
      "name": "batch.size",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 223,
      "display_name": "batch.size",
      "documentation": "The target number of records to return during each poll from the Connect framework. This setting is independent from the general producer settingbatch.sizeType: IntImportance: lowDefault Value: 512Valid Values: [1,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 223
      },
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.max",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 224,
      "display_name": "uncomitted.record.max",
      "documentation": "The maximum number of records to allow in memory. Once this limit is reached the record deque will block to prevent running out of memory.Type: IntImportance: lowDefault Value: 50000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 224
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.timeout.ms",
      "type": "LONGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 225,
      "display_name": "uncomitted.record.timeout.ms",
      "documentation": "The maximum amount of time to wait when writing to the deque before throwing a timeout exception.Type: longImportance: lowDefault Value: 300000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 225
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "initial.database",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 226,
      "display_name": "initial.database",
      "documentation": "The initial database to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 226
      }
    },
    {
      "name": "password",
      "type": "PASSWORDIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 227,
      "display_name": "password",
      "documentation": "JDBC Password to connect to the database with.Type: passwordImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 227
      }
    },
    {
      "name": "server.name",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 228,
      "display_name": "server.name",
      "documentation": "The database server to connect to.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 228
      }
    },
    {
      "name": "server.port",
      "type": "INTIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 229,
      "display_name": "server.port",
      "documentation": "The port on the database server to connect to.Type: IntImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 229
      }
    },
    {
      "name": "username",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Database Connection",
      "order_in_group": 230,
      "display_name": "username",
      "documentation": "JDBC Username to connect to the database with.Type: stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 230
      }
    },
    {
      "name": "change.tracking.tables",
      "type": "LISTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 231,
      "display_name": "change.tracking.tables",
      "documentation": "The tables in the source database to monitor for changes. If no tables are specified the[sys].[change_tracking_tables]view is queried for all of the available tables with change tracking enabled.Type: listImportance: mediumDefault Value: []",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 231
      }
    },
    {
      "name": "jdbc.pool.max.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 232,
      "display_name": "jdbc.pool.max.idle",
      "documentation": "The maximum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 10",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 232
      }
    },
    {
      "name": "jdbc.pool.max.total",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 233,
      "display_name": "jdbc.pool.max.total",
      "documentation": "The maximum number of connections for the connection pool to open. If a number greater than this value is requested, the caller will block waiting for a connection to be returned. This setting is shared across all of the tasks for a given database.Type: IntImportance: mediumDefault Value: 30",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 233
      }
    },
    {
      "name": "jdbc.pool.min.idle",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "MEDIUM",
      "group": "Database Connection",
      "order_in_group": 234,
      "display_name": "jdbc.pool.min.idle",
      "documentation": "The minimum number of idle connections in the connection pool.Type: IntImportance: mediumDefault Value: 3",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 234
      }
    },
    {
      "name": "instance.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 235,
      "display_name": "instance.name",
      "documentation": "The instance name for the SQL Server we are connecting to.Type: stringImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 235
      }
    },
    {
      "name": "multi.subnet.failover.enabled",
      "type": "BOOLEANIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Database Connection",
      "order_in_group": 236,
      "display_name": "multi.subnet.failover.enabled",
      "documentation": "Flag to enable the multisubnet failover option.Type: BooleanImportance: lowDefault Value: false",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 236
      }
    },
    {
      "name": "schema.key.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Schema",
      "order_in_group": 237,
      "display_name": "schema.key.name.format",
      "documentation": "Format used to generate the name for the key schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Key",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 237
      }
    },
    {
      "name": "schema.namespace.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Schema",
      "order_in_group": 238,
      "display_name": "schema.namespace.format",
      "documentation": "The namespace for the schemas generated by the connector. The format in this setting will be used to create the${namespace}variable, which is available for use in the other configuration templates. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName}, and${namespace}.Type: stringImportance: highDefault Value: com.example.data.${databaseName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 238
      }
    },
    {
      "name": "schema.value.name.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Schema",
      "order_in_group": 239,
      "display_name": "schema.value.name.format",
      "documentation": "Format used to generate the name for the value schema. The following template variables are available for string replacement.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${namespace}.${tableName}Value",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 239
      }
    },
    {
      "name": "schema.cache.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Schema",
      "order_in_group": 240,
      "display_name": "schema.cache.ms",
      "documentation": "The number of milliseconds to cache key and value schema metadata in memory.Type: IntImportance: lowDefault Value: 300000Valid Values: [60000,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 240
      },
      "valid_values": [
        "60000",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "schema.caseformat.column.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Schema",
      "order_in_group": 241,
      "display_name": "schema.caseformat.column.name",
      "documentation": "This setting is used to control how the column names are cased when the resulting schemas are generated.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 241
      }
    },
    {
      "name": "schema.caseformat.database.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Schema",
      "order_in_group": 242,
      "display_name": "schema.caseformat.database.name",
      "documentation": "This setting is used to control how the${databaseName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example, this can be used to take a database name ofUSER_TRACKINGto a more java like case ofuserTrackingor all lowercaseusertracking.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 242
      }
    },
    {
      "name": "schema.caseformat.input",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Schema",
      "order_in_group": 243,
      "display_name": "schema.caseformat.input",
      "documentation": "The naming convention used by the database format. This is used to define the source naming convention used by the otherschema.caseformat.*properties.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,UPPER_CAMEL,UPPER_UNDERSCORE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 243
      }
    },
    {
      "name": "schema.caseformat.schema.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Schema",
      "order_in_group": 244,
      "display_name": "schema.caseformat.schema.name",
      "documentation": "This setting is used to control how the${schemaName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a schema name ofSCOTTto a more java like case ofScottor all lowercasescott.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 244
      }
    },
    {
      "name": "schema.caseformat.table.name",
      "type": "STRINGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Schema",
      "order_in_group": 245,
      "display_name": "schema.caseformat.table.name",
      "documentation": "This setting is used to control how the${tableName}variable is cased when it is passed to the formatters defined in theschema.namespace.format,schema.key.name.format,schema.value.name.format,topicFormat.formatsettings. This allows you to control the naming applied to these properties. For example this can be used to take a table name ofUSER_SETTINGto a more java like case ofUserSettingor all lowercaseusersetting.Type: stringImportance: lowDefault Value: UPPER_UNDERSCOREValid Values:LOWER_HYPHEN,LOWER_UNDERSCORE,LOWER_CAMEL,LOWER,UPPER_CAMEL,UPPER_UNDERSCORE,UPPER,NONE",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 245
      }
    },
    {
      "name": "backoff.time.ms",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Source Database",
      "order_in_group": 246,
      "display_name": "backoff.time.ms",
      "documentation": "The number of milliseconds to backoff when no records are returned from the source database.Type: IntImportance: lowDefault Value: 1000Valid Values: [50,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 246
      },
      "valid_values": [
        "50",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "topicFormat.format",
      "type": "STRINGIMPORTANCE",
      "required": true,
      "importance": "HIGH",
      "group": "Target",
      "order_in_group": 247,
      "display_name": "topicFormat.format",
      "documentation": "The format that will be used to build the topic name. This allows database tables to be broken up across several topics. The following template variables can be used for string replacements.${databaseName},${schemaName},${tableName},${namespace}Type: stringImportance: highDefault Value: ${databaseName}.${tableName}",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 247
      }
    },
    {
      "name": "batch.size",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Target",
      "order_in_group": 248,
      "display_name": "batch.size",
      "documentation": "The target number of records to return during each poll from the Connect framework. This setting is independent from the general producer settingbatch.sizeType: IntImportance: lowDefault Value: 512Valid Values: [1,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 248
      },
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.max",
      "type": "INTIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Target",
      "order_in_group": 249,
      "display_name": "uncomitted.record.max",
      "documentation": "The maximum number of records to allow in memory. Once this limit is reached the record deque will block to prevent running out of memory.Type: IntImportance: lowDefault Value: 50000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 249
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "uncomitted.record.timeout.ms",
      "type": "LONGIMPORTANCE",
      "required": false,
      "importance": "LOW",
      "group": "Target",
      "order_in_group": 250,
      "display_name": "uncomitted.record.timeout.ms",
      "documentation": "The maximum amount of time to wait when writing to the deque before throwing a timeout exception.Type: longImportance: lowDefault Value: 300000Valid Values: [100,\u00e2\u0080\u00a6]",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 250
      },
      "valid_values": [
        "100",
        "\u00e2\u0080\u00a6"
      ]
    },
    {
      "name": "Search by configuration property name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "Search by configuration property name",
      "documentation": "Enter a string to search and filter by configuration property name.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "name",
      "documentation": "Globally unique name to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "connector.class",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 3,
      "display_name": "connector.class",
      "documentation": "Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \u00e2\u0080\u009cFileStreamSink\u00e2\u0080\u009d or \u00e2\u0080\u009cFileStreamSinkConnector\u00e2\u0080\u009d to make the configuration a bit shorter",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "tasks.max",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 4,
      "display_name": "tasks.max",
      "documentation": "Maximum number of tasks to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "tasks.max.enforce",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 5,
      "display_name": "tasks.max.enforce",
      "documentation": "(Deprecated) Whether to enforce that the tasks.max property is respected by the connector. By default, connectors that generate too many tasks will fail, and existing sets of tasks that exceed the tasks.max property will also be failed. If this property is set to false, then connectors will be allowed to generate more than the maximum number of tasks, and existing sets of tasks that exceed the tasks.max property will be allowed to run. This property is deprecated and will be removed in an upcoming major release.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "key.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 6,
      "display_name": "key.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "value.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 7,
      "display_name": "value.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "header.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 8,
      "display_name": "header.converter",
      "documentation": "HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      }
    },
    {
      "name": "config.action.reload",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 9,
      "display_name": "config.action.reload",
      "documentation": "The action that Connect should take on the connector when changes in external configuration providers result in a change in the connector\u00e2\u0080\u0099s configuration properties. A value of \u00e2\u0080\u0098none\u00e2\u0080\u0099 indicates that Connect will do nothing. A value of \u00e2\u0080\u0098restart\u00e2\u0080\u0099 indicates that Connect should restart/reload the connector with the updated configuration properties.The restart may actually be scheduled in the future if the external configuration provider indicates that a configuration value will expire in the future.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      }
    },
    {
      "name": "transforms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 10,
      "display_name": "transforms",
      "documentation": "Aliases for the transformations to be applied to records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      }
    },
    {
      "name": "predicates",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 11,
      "display_name": "predicates",
      "documentation": "Aliases for the predicates used by transformations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "errors.retry.timeout",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 12,
      "display_name": "errors.retry.timeout",
      "documentation": "The maximum duration in milliseconds that a failed operation will be reattempted. The default is 0, which means no retries will be attempted. Use -1 for infinite retries.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "errors.retry.delay.max.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 13,
      "display_name": "errors.retry.delay.max.ms",
      "documentation": "The maximum duration in milliseconds between consecutive retry attempts. Jitter will be added to the delay once this limit is reached to prevent thundering herd issues.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      }
    },
    {
      "name": "errors.tolerance",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 14,
      "display_name": "errors.tolerance",
      "documentation": "Behavior for tolerating errors during connector operation. \u00e2\u0080\u0098none\u00e2\u0080\u0099 is the default value and signals that any error will result in an immediate connector task failure; \u00e2\u0080\u0098all\u00e2\u0080\u0099 changes the behavior to skip over problematic records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "errors.log.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 15,
      "display_name": "errors.log.enable",
      "documentation": "If true, write each error and the details of the failed operation and problematic record to the Connect application log. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, so that only errors that are not tolerated are reported.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      }
    },
    {
      "name": "errors.log.include.messages",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 16,
      "display_name": "errors.log.include.messages",
      "documentation": "Whether to include in the log the Connect record that resulted in a failure. For sink records, the topic, partition, offset, and timestamp will be logged. For source records, the key and value (and their schemas), all headers, and the timestamp, Kafka topic, Kafka partition, source partition, and source offset will be logged. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, which will prevent record keys, values, and headers from being written to log files.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "topic.creation.groups",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 17,
      "display_name": "topic.creation.groups",
      "documentation": "Groups of configurations for topics created by source connectors",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      }
    },
    {
      "name": "exactly.once.support",
      "type": "STRING",
      "required": true,
      "importance": "HIGH",
      "group": "Common",
      "order_in_group": 18,
      "display_name": "exactly.once.support",
      "documentation": "Permitted values are requested, required. If set to \u00e2\u0080\u009crequired\u00e2\u0080\u009d, forces a preflight check for the connector to ensure that it can provide exactly-once semantics with the given configuration. Some connectors may be capable of providing exactly-once semantics but not signal to Connect that they support this; in that case, documentation for the connector should be consulted carefully before creating it, and the value for this property should be set to \u00e2\u0080\u009crequested\u00e2\u0080\u009d. Additionally, if the value is set to \u00e2\u0080\u009crequired\u00e2\u0080\u009d but the worker that performs preflight validation does not have exactly-once support enabled for source connectors, requests to create or validate the connector will fail.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      }
    },
    {
      "name": "transaction.boundary",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 19,
      "display_name": "transaction.boundary",
      "documentation": "Permitted values are: poll, interval, connector. If set to \u00e2\u0080\u0098poll\u00e2\u0080\u0099, a new producer transaction will be started and committed for every batch of records that each task from this connector provides to Connect. If set to \u00e2\u0080\u0098connector\u00e2\u0080\u0099, relies on connector-defined transaction boundaries; note that not all connectors are capable of defining their own transaction boundaries, and in that case, attempts to instantiate a connector with this value will fail. Finally, if set to \u00e2\u0080\u0098interval\u00e2\u0080\u0099, commits transactions only after a user-defined time interval has passed.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      }
    },
    {
      "name": "transaction.boundary.interval.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 20,
      "display_name": "transaction.boundary.interval.ms",
      "documentation": "If \u00e2\u0080\u0098transaction.boundary\u00e2\u0080\u0099 is set to \u00e2\u0080\u0098interval\u00e2\u0080\u0099, determines the interval for producer transaction commits by connector tasks. If unset, defaults to the value of the worker-level \u00e2\u0080\u0098offset.flush.interval.ms\u00e2\u0080\u0099 property. It has no effect if a different transaction.boundary is specified.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      }
    },
    {
      "name": "offsets.storage.topic",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 21,
      "display_name": "offsets.storage.topic",
      "documentation": "The name of a separate offsets topic to use for this connector. If empty or not specified, the worker\u00e2\u0080\u0099s global offsets topic name will be used. If specified, the offsets topic will be created if it does not already exist on the Kafka cluster targeted by this connector (which may be different from the one used for the worker\u00e2\u0080\u0099s global offsets topic if the bootstrap.servers property of the connector\u00e2\u0080\u0099s producer has been overridden from the worker\u00e2\u0080\u0099s). Only applicable in distributed mode; in standalone mode, setting this property will have no effect.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      }
    }
  ]
}