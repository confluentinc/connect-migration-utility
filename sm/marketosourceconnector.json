{
  "template_id": "MarketoSourceConnector",
  "connector_type": "SOURCE",
  "connector.class": "io.confluent.connect.marketo.MarketoSourceConnector",
  "name": "{{.logicalClusterId}}",
  "imports": [],
  "group_order": [
    "Marketo",
    "Topics",
    "Limits",
    "Retries",
    "Authorization",
    "SSL",
    "Proxy",
    "Confluent Platform license",
    "Confluent license properties",
    "License topic configuration",
    "License topic ACLs",
    "Override Default Configuration Properties"
  ],
  "config_defs": [
    {
      "name": "marketo.url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 1,
      "display_name": "marketo.url",
      "documentation": "Marketo server hostname/URL to which the Kafka source connector connects.Type: stringValid Values: URI with one of these schemes: \u00e2\u0080\u0098http\u00e2\u0080\u0099, \u00e2\u0080\u0098https\u00e2\u0080\u0099Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 1
      }
    },
    {
      "name": "entity.names",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 2,
      "display_name": "entity.names",
      "documentation": "The Marketo entities that are to be exported from Marketo and written to Kafka.Type: listValid Values: one of [leads, programs, staticLists, campaigns, activities_<activityType>]. Here, activities can be listed asactivities_add_to_nurture, activities_add_to_opportunity, etc.Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "marketo.since",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 3,
      "display_name": "marketo.since",
      "documentation": "ISO 8601 format of the starting time from whence the data should be exported to Kafka topics; only used during the first run of a connector. Any eventual restart of the connector would use the committed entity offset, if any. The datetime can include the offset but not the time zone (Refer toMarketo Field typesfor the datetime format.)Type: stringDefault: If the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. It will fetch the records updated and created from the time connector starts.Valid Values: either blank, or timestamp in one of these formats:YYYY-MM-DD,YYYY-MM-DD'T'hh:mm:ss,YYYY-MM-DD'T'hh:mm:ssTZD`(whereTZDis``+hh:mmor-hh:mm).Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      },
      "default": "if the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. it will fetch the records updated and created from the time connector starts.valid values: either blank, or timestamp in one of these formats:yyyy-mm-dd,yyyy-mm-dd't'hh:mm:ss,yyyy-mm-dd't'hh:mm:sstzd`(wheretzdis``+hh:mmor-hh:mm).importance: medium"
    },
    {
      "name": "topic.name.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 4,
      "display_name": "topic.name.pattern",
      "documentation": "The pattern to use for the topic name, where the${entityName}literal will be replaced with each entity name. For example, a value such asmarketo_topic_${entityName}with tablesleadsandcampaignswould create two topicsmarketo_topic_leadsandmarketo_topic_campaigns, and ensure that tableleadsis exported to topicmarketo_topic_leads, etc. Further, if theentity.namesconfig contains any activities entities likeactivities_add_to_nurture, oractivities_add_to_opportunity,  then all such entities are grouped into a single topicmarketo_topic_activitiesfrom the previous example. For all the activities entities, Kafka records will be directed to a single topic where${entityName}is populated toactivities.Type: stringDefault: ${entityName}Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      },
      "default": "${entityname}importance: high"
    },
    {
      "name": "max.batch.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 5,
      "display_name": "max.batch.size",
      "documentation": "The maximum number of records that should be returned and written to Kafka at once.Type: intDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.in.flight.requests",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 6,
      "display_name": "max.in.flight.requests",
      "documentation": "The maximum number of requests that may be in-flight at once.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,200]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,200]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "200"
      ]
    },
    {
      "name": "max.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 7,
      "display_name": "max.poll.interval.ms",
      "documentation": "The time in milliseconds to wait while polling for a full batch of records.Type: longDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,300000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,300000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "300000"
      ]
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 8,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait before checking for updated records.Type: longDefault: 15000Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      },
      "default": "15000valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 9,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,10]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,10]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "10"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 10,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,3600000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,3600000]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "3600000"
      ]
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 11,
      "display_name": "oauth2.client.id",
      "documentation": "The client ID used when fetching OAuth2 token from the Marketo server instance.Type: stringValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 12,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching the OAuth2 token.Type: passwordValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "https.ssl.enabled",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 13,
      "display_name": "https.ssl.enabled",
      "documentation": "Indicates whether or not to connect to the endpoint using SSL.Type: booleanDefault: falseImportance: highDependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      },
      "default": "falseimportance: highdependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "dependents": [
        "https.ssl.protocol",
        "https.ssl.provider",
        "https.ssl.cipher.suites",
        "https.ssl.enabled.protocols",
        "https.ssl.keystore.type",
        "https.ssl.keystore.location",
        "https.ssl.keystore.password",
        "https.ssl.key.password",
        "https.ssl.truststore.type",
        "https.ssl.truststore.location",
        "https.ssl.truststore.password",
        "https.ssl.keymanager.algorithm",
        "https.ssl.trustmanager.algorithm",
        "https.ssl.endpoint.identification.algorithm",
        "https.ssl.secure.random.implementation"
      ]
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 14,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. The default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are: TLS, TLSv1.1, and TLSv1.2. SSL, SSLv2, and SSLv3 may be supported in older JVMs, but their use is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 15,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 16,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 17,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 18,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for the client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 19,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 20,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed ifssl.keystore.locationis configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 21,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 22,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 22
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 23,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 23
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 24,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 24
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 25,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. The default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 25
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 26,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. The default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: PKIXImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 26
      },
      "default": "pkiximportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 27,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate the server hostname using a server certificate.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 27
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 28,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 28
      },
      "default": "nullimportance: low"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 29,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 29
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 30,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6,65535]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 30
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6,65535]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "65535"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 31,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 31
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 32,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 32
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 33,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 33
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 34,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 34
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 35,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 35
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 36,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 36
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 37,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 37
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 38,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 38
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 39,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 39
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "marketo.url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 40,
      "display_name": "marketo.url",
      "documentation": "Marketo server hostname/URL to which the Kafka source connector connects.Type: stringValid Values: URI with one of these schemes: \u00e2\u0080\u0098http\u00e2\u0080\u0099, \u00e2\u0080\u0098https\u00e2\u0080\u0099Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 40
      }
    },
    {
      "name": "entity.names",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 41,
      "display_name": "entity.names",
      "documentation": "The Marketo entities that are to be exported from Marketo and written to Kafka.Type: listValid Values: one of [leads, programs, staticLists, campaigns, activities_<activityType>]. Here, activities can be listed asactivities_add_to_nurture, activities_add_to_opportunity, etc.Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 41
      }
    },
    {
      "name": "marketo.since",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 42,
      "display_name": "marketo.since",
      "documentation": "ISO 8601 format of the starting time from whence the data should be exported to Kafka topics; only used during the first run of a connector. Any eventual restart of the connector would use the committed entity offset, if any. The datetime can include the offset but not the time zone (Refer toMarketo Field typesfor the datetime format.)Type: stringDefault: If the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. It will fetch the records updated and created from the time connector starts.Valid Values: either blank, or timestamp in one of these formats:YYYY-MM-DD,YYYY-MM-DD'T'hh:mm:ss,YYYY-MM-DD'T'hh:mm:ssTZD`(whereTZDis``+hh:mmor-hh:mm).Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 42
      },
      "default": "if the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. it will fetch the records updated and created from the time connector starts.valid values: either blank, or timestamp in one of these formats:yyyy-mm-dd,yyyy-mm-dd't'hh:mm:ss,yyyy-mm-dd't'hh:mm:sstzd`(wheretzdis``+hh:mmor-hh:mm).importance: medium"
    },
    {
      "name": "topic.name.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 43,
      "display_name": "topic.name.pattern",
      "documentation": "The pattern to use for the topic name, where the${entityName}literal will be replaced with each entity name. For example, a value such asmarketo_topic_${entityName}with tablesleadsandcampaignswould create two topicsmarketo_topic_leadsandmarketo_topic_campaigns, and ensure that tableleadsis exported to topicmarketo_topic_leads, etc. Further, if theentity.namesconfig contains any activities entities likeactivities_add_to_nurture, oractivities_add_to_opportunity,  then all such entities are grouped into a single topicmarketo_topic_activitiesfrom the previous example. For all the activities entities, Kafka records will be directed to a single topic where${entityName}is populated toactivities.Type: stringDefault: ${entityName}Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 43
      },
      "default": "${entityname}importance: high"
    },
    {
      "name": "max.batch.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 44,
      "display_name": "max.batch.size",
      "documentation": "The maximum number of records that should be returned and written to Kafka at once.Type: intDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 44
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.in.flight.requests",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 45,
      "display_name": "max.in.flight.requests",
      "documentation": "The maximum number of requests that may be in-flight at once.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,200]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 45
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,200]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "200"
      ]
    },
    {
      "name": "max.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 46,
      "display_name": "max.poll.interval.ms",
      "documentation": "The time in milliseconds to wait while polling for a full batch of records.Type: longDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,300000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 46
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,300000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "300000"
      ]
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 47,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait before checking for updated records.Type: longDefault: 15000Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 47
      },
      "default": "15000valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 48,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,10]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 48
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,10]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "10"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 49,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,3600000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 49
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,3600000]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "3600000"
      ]
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 50,
      "display_name": "oauth2.client.id",
      "documentation": "The client ID used when fetching OAuth2 token from the Marketo server instance.Type: stringValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 50
      }
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 51,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching the OAuth2 token.Type: passwordValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 51
      }
    },
    {
      "name": "https.ssl.enabled",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 52,
      "display_name": "https.ssl.enabled",
      "documentation": "Indicates whether or not to connect to the endpoint using SSL.Type: booleanDefault: falseImportance: highDependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 52
      },
      "default": "falseimportance: highdependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "dependents": [
        "https.ssl.protocol",
        "https.ssl.provider",
        "https.ssl.cipher.suites",
        "https.ssl.enabled.protocols",
        "https.ssl.keystore.type",
        "https.ssl.keystore.location",
        "https.ssl.keystore.password",
        "https.ssl.key.password",
        "https.ssl.truststore.type",
        "https.ssl.truststore.location",
        "https.ssl.truststore.password",
        "https.ssl.keymanager.algorithm",
        "https.ssl.trustmanager.algorithm",
        "https.ssl.endpoint.identification.algorithm",
        "https.ssl.secure.random.implementation"
      ]
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 53,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. The default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are: TLS, TLSv1.1, and TLSv1.2. SSL, SSLv2, and SSLv3 may be supported in older JVMs, but their use is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 53
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 54,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 54
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 55,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 55
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 56,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 56
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 57,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for the client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 57
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 58,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 58
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 59,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed ifssl.keystore.locationis configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 59
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 60,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 60
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 61,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 61
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 62,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 62
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 63,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 63
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 64,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. The default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 64
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 65,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. The default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: PKIXImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 65
      },
      "default": "pkiximportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 66,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate the server hostname using a server certificate.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 66
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 67,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 67
      },
      "default": "nullimportance: low"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 68,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 68
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 69,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6,65535]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 69
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6,65535]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "65535"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 70,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 70
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 71,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 71
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 72,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 72
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 73,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 73
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 74,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 74
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 75,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 75
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 76,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 76
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 77,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 77
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 78,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 78
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "marketo.url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 79,
      "display_name": "marketo.url",
      "documentation": "Marketo server hostname/URL to which the Kafka source connector connects.Type: stringValid Values: URI with one of these schemes: \u00e2\u0080\u0098http\u00e2\u0080\u0099, \u00e2\u0080\u0098https\u00e2\u0080\u0099Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 79
      }
    },
    {
      "name": "entity.names",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 80,
      "display_name": "entity.names",
      "documentation": "The Marketo entities that are to be exported from Marketo and written to Kafka.Type: listValid Values: one of [leads, programs, staticLists, campaigns, activities_<activityType>]. Here, activities can be listed asactivities_add_to_nurture, activities_add_to_opportunity, etc.Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 80
      }
    },
    {
      "name": "marketo.since",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 81,
      "display_name": "marketo.since",
      "documentation": "ISO 8601 format of the starting time from whence the data should be exported to Kafka topics; only used during the first run of a connector. Any eventual restart of the connector would use the committed entity offset, if any. The datetime can include the offset but not the time zone (Refer toMarketo Field typesfor the datetime format.)Type: stringDefault: If the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. It will fetch the records updated and created from the time connector starts.Valid Values: either blank, or timestamp in one of these formats:YYYY-MM-DD,YYYY-MM-DD'T'hh:mm:ss,YYYY-MM-DD'T'hh:mm:ssTZD`(whereTZDis``+hh:mmor-hh:mm).Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 81
      },
      "default": "if the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. it will fetch the records updated and created from the time connector starts.valid values: either blank, or timestamp in one of these formats:yyyy-mm-dd,yyyy-mm-dd't'hh:mm:ss,yyyy-mm-dd't'hh:mm:sstzd`(wheretzdis``+hh:mmor-hh:mm).importance: medium"
    },
    {
      "name": "topic.name.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 82,
      "display_name": "topic.name.pattern",
      "documentation": "The pattern to use for the topic name, where the${entityName}literal will be replaced with each entity name. For example, a value such asmarketo_topic_${entityName}with tablesleadsandcampaignswould create two topicsmarketo_topic_leadsandmarketo_topic_campaigns, and ensure that tableleadsis exported to topicmarketo_topic_leads, etc. Further, if theentity.namesconfig contains any activities entities likeactivities_add_to_nurture, oractivities_add_to_opportunity,  then all such entities are grouped into a single topicmarketo_topic_activitiesfrom the previous example. For all the activities entities, Kafka records will be directed to a single topic where${entityName}is populated toactivities.Type: stringDefault: ${entityName}Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 82
      },
      "default": "${entityname}importance: high"
    },
    {
      "name": "max.batch.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 83,
      "display_name": "max.batch.size",
      "documentation": "The maximum number of records that should be returned and written to Kafka at once.Type: intDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 83
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.in.flight.requests",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 84,
      "display_name": "max.in.flight.requests",
      "documentation": "The maximum number of requests that may be in-flight at once.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,200]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 84
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,200]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "200"
      ]
    },
    {
      "name": "max.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 85,
      "display_name": "max.poll.interval.ms",
      "documentation": "The time in milliseconds to wait while polling for a full batch of records.Type: longDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,300000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 85
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,300000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "300000"
      ]
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 86,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait before checking for updated records.Type: longDefault: 15000Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 86
      },
      "default": "15000valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 87,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,10]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 87
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,10]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "10"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 88,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,3600000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 88
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,3600000]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "3600000"
      ]
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 89,
      "display_name": "oauth2.client.id",
      "documentation": "The client ID used when fetching OAuth2 token from the Marketo server instance.Type: stringValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 89
      }
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 90,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching the OAuth2 token.Type: passwordValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 90
      }
    },
    {
      "name": "https.ssl.enabled",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 91,
      "display_name": "https.ssl.enabled",
      "documentation": "Indicates whether or not to connect to the endpoint using SSL.Type: booleanDefault: falseImportance: highDependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 91
      },
      "default": "falseimportance: highdependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "dependents": [
        "https.ssl.protocol",
        "https.ssl.provider",
        "https.ssl.cipher.suites",
        "https.ssl.enabled.protocols",
        "https.ssl.keystore.type",
        "https.ssl.keystore.location",
        "https.ssl.keystore.password",
        "https.ssl.key.password",
        "https.ssl.truststore.type",
        "https.ssl.truststore.location",
        "https.ssl.truststore.password",
        "https.ssl.keymanager.algorithm",
        "https.ssl.trustmanager.algorithm",
        "https.ssl.endpoint.identification.algorithm",
        "https.ssl.secure.random.implementation"
      ]
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 92,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. The default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are: TLS, TLSv1.1, and TLSv1.2. SSL, SSLv2, and SSLv3 may be supported in older JVMs, but their use is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 92
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 93,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 93
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 94,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 94
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 95,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 95
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 96,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for the client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 96
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 97,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 97
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 98,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed ifssl.keystore.locationis configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 98
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 99,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 99
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 100,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 100
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 101,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 101
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 102,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 102
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 103,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. The default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 103
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 104,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. The default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: PKIXImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 104
      },
      "default": "pkiximportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 105,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate the server hostname using a server certificate.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 105
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 106,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 106
      },
      "default": "nullimportance: low"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 107,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 107
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 108,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6,65535]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 108
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6,65535]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "65535"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 109,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 109
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 110,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 110
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 111,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 111
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 112,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 112
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 113,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 113
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 114,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 114
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 115,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 115
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 116,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 116
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 117,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 117
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "marketo.url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 118,
      "display_name": "marketo.url",
      "documentation": "Marketo server hostname/URL to which the Kafka source connector connects.Type: stringValid Values: URI with one of these schemes: \u00e2\u0080\u0098http\u00e2\u0080\u0099, \u00e2\u0080\u0098https\u00e2\u0080\u0099Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 118
      }
    },
    {
      "name": "entity.names",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 119,
      "display_name": "entity.names",
      "documentation": "The Marketo entities that are to be exported from Marketo and written to Kafka.Type: listValid Values: one of [leads, programs, staticLists, campaigns, activities_<activityType>]. Here, activities can be listed asactivities_add_to_nurture, activities_add_to_opportunity, etc.Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 119
      }
    },
    {
      "name": "marketo.since",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 120,
      "display_name": "marketo.since",
      "documentation": "ISO 8601 format of the starting time from whence the data should be exported to Kafka topics; only used during the first run of a connector. Any eventual restart of the connector would use the committed entity offset, if any. The datetime can include the offset but not the time zone (Refer toMarketo Field typesfor the datetime format.)Type: stringDefault: If the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. It will fetch the records updated and created from the time connector starts.Valid Values: either blank, or timestamp in one of these formats:YYYY-MM-DD,YYYY-MM-DD'T'hh:mm:ss,YYYY-MM-DD'T'hh:mm:ssTZD`(whereTZDis``+hh:mmor-hh:mm).Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 120
      },
      "default": "if the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. it will fetch the records updated and created from the time connector starts.valid values: either blank, or timestamp in one of these formats:yyyy-mm-dd,yyyy-mm-dd't'hh:mm:ss,yyyy-mm-dd't'hh:mm:sstzd`(wheretzdis``+hh:mmor-hh:mm).importance: medium"
    },
    {
      "name": "topic.name.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 121,
      "display_name": "topic.name.pattern",
      "documentation": "The pattern to use for the topic name, where the${entityName}literal will be replaced with each entity name. For example, a value such asmarketo_topic_${entityName}with tablesleadsandcampaignswould create two topicsmarketo_topic_leadsandmarketo_topic_campaigns, and ensure that tableleadsis exported to topicmarketo_topic_leads, etc. Further, if theentity.namesconfig contains any activities entities likeactivities_add_to_nurture, oractivities_add_to_opportunity,  then all such entities are grouped into a single topicmarketo_topic_activitiesfrom the previous example. For all the activities entities, Kafka records will be directed to a single topic where${entityName}is populated toactivities.Type: stringDefault: ${entityName}Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 121
      },
      "default": "${entityname}importance: high"
    },
    {
      "name": "max.batch.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 122,
      "display_name": "max.batch.size",
      "documentation": "The maximum number of records that should be returned and written to Kafka at once.Type: intDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 122
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.in.flight.requests",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 123,
      "display_name": "max.in.flight.requests",
      "documentation": "The maximum number of requests that may be in-flight at once.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,200]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 123
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,200]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "200"
      ]
    },
    {
      "name": "max.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 124,
      "display_name": "max.poll.interval.ms",
      "documentation": "The time in milliseconds to wait while polling for a full batch of records.Type: longDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,300000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 124
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,300000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "300000"
      ]
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 125,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait before checking for updated records.Type: longDefault: 15000Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 125
      },
      "default": "15000valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 126,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,10]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 126
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,10]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "10"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 127,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,3600000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 127
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,3600000]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "3600000"
      ]
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 128,
      "display_name": "oauth2.client.id",
      "documentation": "The client ID used when fetching OAuth2 token from the Marketo server instance.Type: stringValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 128
      }
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 129,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching the OAuth2 token.Type: passwordValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 129
      }
    },
    {
      "name": "https.ssl.enabled",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 130,
      "display_name": "https.ssl.enabled",
      "documentation": "Indicates whether or not to connect to the endpoint using SSL.Type: booleanDefault: falseImportance: highDependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 130
      },
      "default": "falseimportance: highdependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "dependents": [
        "https.ssl.protocol",
        "https.ssl.provider",
        "https.ssl.cipher.suites",
        "https.ssl.enabled.protocols",
        "https.ssl.keystore.type",
        "https.ssl.keystore.location",
        "https.ssl.keystore.password",
        "https.ssl.key.password",
        "https.ssl.truststore.type",
        "https.ssl.truststore.location",
        "https.ssl.truststore.password",
        "https.ssl.keymanager.algorithm",
        "https.ssl.trustmanager.algorithm",
        "https.ssl.endpoint.identification.algorithm",
        "https.ssl.secure.random.implementation"
      ]
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 131,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. The default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are: TLS, TLSv1.1, and TLSv1.2. SSL, SSLv2, and SSLv3 may be supported in older JVMs, but their use is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 131
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 132,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 132
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 133,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 133
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 134,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 134
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 135,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for the client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 135
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 136,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 136
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 137,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed ifssl.keystore.locationis configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 137
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 138,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 138
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 139,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 139
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 140,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 140
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 141,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 141
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 142,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. The default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 142
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 143,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. The default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: PKIXImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 143
      },
      "default": "pkiximportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 144,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate the server hostname using a server certificate.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 144
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 145,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 145
      },
      "default": "nullimportance: low"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 146,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 146
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 147,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6,65535]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 147
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6,65535]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "65535"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 148,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 148
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 149,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 149
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 150,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 150
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 151,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 151
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 152,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 152
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 153,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 153
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 154,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 154
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 155,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 155
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 156,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 156
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "marketo.url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 157,
      "display_name": "marketo.url",
      "documentation": "Marketo server hostname/URL to which the Kafka source connector connects.Type: stringValid Values: URI with one of these schemes: \u00e2\u0080\u0098http\u00e2\u0080\u0099, \u00e2\u0080\u0098https\u00e2\u0080\u0099Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 157
      }
    },
    {
      "name": "entity.names",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 158,
      "display_name": "entity.names",
      "documentation": "The Marketo entities that are to be exported from Marketo and written to Kafka.Type: listValid Values: one of [leads, programs, staticLists, campaigns, activities_<activityType>]. Here, activities can be listed asactivities_add_to_nurture, activities_add_to_opportunity, etc.Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 158
      }
    },
    {
      "name": "marketo.since",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 159,
      "display_name": "marketo.since",
      "documentation": "ISO 8601 format of the starting time from whence the data should be exported to Kafka topics; only used during the first run of a connector. Any eventual restart of the connector would use the committed entity offset, if any. The datetime can include the offset but not the time zone (Refer toMarketo Field typesfor the datetime format.)Type: stringDefault: If the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. It will fetch the records updated and created from the time connector starts.Valid Values: either blank, or timestamp in one of these formats:YYYY-MM-DD,YYYY-MM-DD'T'hh:mm:ss,YYYY-MM-DD'T'hh:mm:ssTZD`(whereTZDis``+hh:mmor-hh:mm).Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 159
      },
      "default": "if the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. it will fetch the records updated and created from the time connector starts.valid values: either blank, or timestamp in one of these formats:yyyy-mm-dd,yyyy-mm-dd't'hh:mm:ss,yyyy-mm-dd't'hh:mm:sstzd`(wheretzdis``+hh:mmor-hh:mm).importance: medium"
    },
    {
      "name": "topic.name.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 160,
      "display_name": "topic.name.pattern",
      "documentation": "The pattern to use for the topic name, where the${entityName}literal will be replaced with each entity name. For example, a value such asmarketo_topic_${entityName}with tablesleadsandcampaignswould create two topicsmarketo_topic_leadsandmarketo_topic_campaigns, and ensure that tableleadsis exported to topicmarketo_topic_leads, etc. Further, if theentity.namesconfig contains any activities entities likeactivities_add_to_nurture, oractivities_add_to_opportunity,  then all such entities are grouped into a single topicmarketo_topic_activitiesfrom the previous example. For all the activities entities, Kafka records will be directed to a single topic where${entityName}is populated toactivities.Type: stringDefault: ${entityName}Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 160
      },
      "default": "${entityname}importance: high"
    },
    {
      "name": "max.batch.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 161,
      "display_name": "max.batch.size",
      "documentation": "The maximum number of records that should be returned and written to Kafka at once.Type: intDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 161
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.in.flight.requests",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 162,
      "display_name": "max.in.flight.requests",
      "documentation": "The maximum number of requests that may be in-flight at once.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,200]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 162
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,200]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "200"
      ]
    },
    {
      "name": "max.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 163,
      "display_name": "max.poll.interval.ms",
      "documentation": "The time in milliseconds to wait while polling for a full batch of records.Type: longDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,300000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 163
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,300000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "300000"
      ]
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 164,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait before checking for updated records.Type: longDefault: 15000Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 164
      },
      "default": "15000valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 165,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,10]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 165
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,10]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "10"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 166,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,3600000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 166
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,3600000]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "3600000"
      ]
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 167,
      "display_name": "oauth2.client.id",
      "documentation": "The client ID used when fetching OAuth2 token from the Marketo server instance.Type: stringValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 167
      }
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 168,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching the OAuth2 token.Type: passwordValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 168
      }
    },
    {
      "name": "https.ssl.enabled",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 169,
      "display_name": "https.ssl.enabled",
      "documentation": "Indicates whether or not to connect to the endpoint using SSL.Type: booleanDefault: falseImportance: highDependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 169
      },
      "default": "falseimportance: highdependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "dependents": [
        "https.ssl.protocol",
        "https.ssl.provider",
        "https.ssl.cipher.suites",
        "https.ssl.enabled.protocols",
        "https.ssl.keystore.type",
        "https.ssl.keystore.location",
        "https.ssl.keystore.password",
        "https.ssl.key.password",
        "https.ssl.truststore.type",
        "https.ssl.truststore.location",
        "https.ssl.truststore.password",
        "https.ssl.keymanager.algorithm",
        "https.ssl.trustmanager.algorithm",
        "https.ssl.endpoint.identification.algorithm",
        "https.ssl.secure.random.implementation"
      ]
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 170,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. The default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are: TLS, TLSv1.1, and TLSv1.2. SSL, SSLv2, and SSLv3 may be supported in older JVMs, but their use is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 170
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 171,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 171
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 172,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 172
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 173,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 173
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 174,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for the client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 174
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 175,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 175
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 176,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed ifssl.keystore.locationis configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 176
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 177,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 177
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 178,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 178
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 179,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 179
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 180,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 180
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 181,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. The default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 181
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 182,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. The default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: PKIXImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 182
      },
      "default": "pkiximportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 183,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate the server hostname using a server certificate.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 183
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 184,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 184
      },
      "default": "nullimportance: low"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 185,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 185
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 186,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6,65535]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 186
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6,65535]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "65535"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 187,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 187
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 188,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 188
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 189,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 189
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 190,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 190
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 191,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 191
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 192,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 192
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 193,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 193
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 194,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 194
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 195,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 195
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "marketo.url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 196,
      "display_name": "marketo.url",
      "documentation": "Marketo server hostname/URL to which the Kafka source connector connects.Type: stringValid Values: URI with one of these schemes: \u00e2\u0080\u0098http\u00e2\u0080\u0099, \u00e2\u0080\u0098https\u00e2\u0080\u0099Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 196
      }
    },
    {
      "name": "entity.names",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 197,
      "display_name": "entity.names",
      "documentation": "The Marketo entities that are to be exported from Marketo and written to Kafka.Type: listValid Values: one of [leads, programs, staticLists, campaigns, activities_<activityType>]. Here, activities can be listed asactivities_add_to_nurture, activities_add_to_opportunity, etc.Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 197
      }
    },
    {
      "name": "marketo.since",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 198,
      "display_name": "marketo.since",
      "documentation": "ISO 8601 format of the starting time from whence the data should be exported to Kafka topics; only used during the first run of a connector. Any eventual restart of the connector would use the committed entity offset, if any. The datetime can include the offset but not the time zone (Refer toMarketo Field typesfor the datetime format.)Type: stringDefault: If the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. It will fetch the records updated and created from the time connector starts.Valid Values: either blank, or timestamp in one of these formats:YYYY-MM-DD,YYYY-MM-DD'T'hh:mm:ss,YYYY-MM-DD'T'hh:mm:ssTZD`(whereTZDis``+hh:mmor-hh:mm).Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 198
      },
      "default": "if the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. it will fetch the records updated and created from the time connector starts.valid values: either blank, or timestamp in one of these formats:yyyy-mm-dd,yyyy-mm-dd't'hh:mm:ss,yyyy-mm-dd't'hh:mm:sstzd`(wheretzdis``+hh:mmor-hh:mm).importance: medium"
    },
    {
      "name": "topic.name.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 199,
      "display_name": "topic.name.pattern",
      "documentation": "The pattern to use for the topic name, where the${entityName}literal will be replaced with each entity name. For example, a value such asmarketo_topic_${entityName}with tablesleadsandcampaignswould create two topicsmarketo_topic_leadsandmarketo_topic_campaigns, and ensure that tableleadsis exported to topicmarketo_topic_leads, etc. Further, if theentity.namesconfig contains any activities entities likeactivities_add_to_nurture, oractivities_add_to_opportunity,  then all such entities are grouped into a single topicmarketo_topic_activitiesfrom the previous example. For all the activities entities, Kafka records will be directed to a single topic where${entityName}is populated toactivities.Type: stringDefault: ${entityName}Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 199
      },
      "default": "${entityname}importance: high"
    },
    {
      "name": "max.batch.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 200,
      "display_name": "max.batch.size",
      "documentation": "The maximum number of records that should be returned and written to Kafka at once.Type: intDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 200
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.in.flight.requests",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 201,
      "display_name": "max.in.flight.requests",
      "documentation": "The maximum number of requests that may be in-flight at once.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,200]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 201
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,200]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "200"
      ]
    },
    {
      "name": "max.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 202,
      "display_name": "max.poll.interval.ms",
      "documentation": "The time in milliseconds to wait while polling for a full batch of records.Type: longDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,300000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 202
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,300000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "300000"
      ]
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 203,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait before checking for updated records.Type: longDefault: 15000Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 203
      },
      "default": "15000valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 204,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,10]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 204
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,10]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "10"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 205,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,3600000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 205
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,3600000]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "3600000"
      ]
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 206,
      "display_name": "oauth2.client.id",
      "documentation": "The client ID used when fetching OAuth2 token from the Marketo server instance.Type: stringValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 206
      }
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 207,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching the OAuth2 token.Type: passwordValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 207
      }
    },
    {
      "name": "https.ssl.enabled",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 208,
      "display_name": "https.ssl.enabled",
      "documentation": "Indicates whether or not to connect to the endpoint using SSL.Type: booleanDefault: falseImportance: highDependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 208
      },
      "default": "falseimportance: highdependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "dependents": [
        "https.ssl.protocol",
        "https.ssl.provider",
        "https.ssl.cipher.suites",
        "https.ssl.enabled.protocols",
        "https.ssl.keystore.type",
        "https.ssl.keystore.location",
        "https.ssl.keystore.password",
        "https.ssl.key.password",
        "https.ssl.truststore.type",
        "https.ssl.truststore.location",
        "https.ssl.truststore.password",
        "https.ssl.keymanager.algorithm",
        "https.ssl.trustmanager.algorithm",
        "https.ssl.endpoint.identification.algorithm",
        "https.ssl.secure.random.implementation"
      ]
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 209,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. The default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are: TLS, TLSv1.1, and TLSv1.2. SSL, SSLv2, and SSLv3 may be supported in older JVMs, but their use is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 209
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 210,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 210
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 211,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 211
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 212,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 212
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 213,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for the client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 213
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 214,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 214
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 215,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed ifssl.keystore.locationis configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 215
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 216,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 216
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 217,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 217
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 218,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 218
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 219,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 219
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 220,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. The default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 220
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 221,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. The default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: PKIXImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 221
      },
      "default": "pkiximportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 222,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate the server hostname using a server certificate.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 222
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 223,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 223
      },
      "default": "nullimportance: low"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 224,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 224
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 225,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6,65535]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 225
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6,65535]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "65535"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 226,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 226
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 227,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 227
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 228,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 228
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 229,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 229
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 230,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 230
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 231,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 231
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 232,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 232
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 233,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 233
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 234,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 234
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "marketo.url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 235,
      "display_name": "marketo.url",
      "documentation": "Marketo server hostname/URL to which the Kafka source connector connects.Type: stringValid Values: URI with one of these schemes: \u00e2\u0080\u0098http\u00e2\u0080\u0099, \u00e2\u0080\u0098https\u00e2\u0080\u0099Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 235
      }
    },
    {
      "name": "entity.names",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 236,
      "display_name": "entity.names",
      "documentation": "The Marketo entities that are to be exported from Marketo and written to Kafka.Type: listValid Values: one of [leads, programs, staticLists, campaigns, activities_<activityType>]. Here, activities can be listed asactivities_add_to_nurture, activities_add_to_opportunity, etc.Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 236
      }
    },
    {
      "name": "marketo.since",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 237,
      "display_name": "marketo.since",
      "documentation": "ISO 8601 format of the starting time from whence the data should be exported to Kafka topics; only used during the first run of a connector. Any eventual restart of the connector would use the committed entity offset, if any. The datetime can include the offset but not the time zone (Refer toMarketo Field typesfor the datetime format.)Type: stringDefault: If the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. It will fetch the records updated and created from the time connector starts.Valid Values: either blank, or timestamp in one of these formats:YYYY-MM-DD,YYYY-MM-DD'T'hh:mm:ss,YYYY-MM-DD'T'hh:mm:ssTZD`(whereTZDis``+hh:mmor-hh:mm).Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 237
      },
      "default": "if the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. it will fetch the records updated and created from the time connector starts.valid values: either blank, or timestamp in one of these formats:yyyy-mm-dd,yyyy-mm-dd't'hh:mm:ss,yyyy-mm-dd't'hh:mm:sstzd`(wheretzdis``+hh:mmor-hh:mm).importance: medium"
    },
    {
      "name": "topic.name.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 238,
      "display_name": "topic.name.pattern",
      "documentation": "The pattern to use for the topic name, where the${entityName}literal will be replaced with each entity name. For example, a value such asmarketo_topic_${entityName}with tablesleadsandcampaignswould create two topicsmarketo_topic_leadsandmarketo_topic_campaigns, and ensure that tableleadsis exported to topicmarketo_topic_leads, etc. Further, if theentity.namesconfig contains any activities entities likeactivities_add_to_nurture, oractivities_add_to_opportunity,  then all such entities are grouped into a single topicmarketo_topic_activitiesfrom the previous example. For all the activities entities, Kafka records will be directed to a single topic where${entityName}is populated toactivities.Type: stringDefault: ${entityName}Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 238
      },
      "default": "${entityname}importance: high"
    },
    {
      "name": "max.batch.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 239,
      "display_name": "max.batch.size",
      "documentation": "The maximum number of records that should be returned and written to Kafka at once.Type: intDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 239
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.in.flight.requests",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 240,
      "display_name": "max.in.flight.requests",
      "documentation": "The maximum number of requests that may be in-flight at once.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,200]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 240
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,200]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "200"
      ]
    },
    {
      "name": "max.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 241,
      "display_name": "max.poll.interval.ms",
      "documentation": "The time in milliseconds to wait while polling for a full batch of records.Type: longDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,300000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 241
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,300000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "300000"
      ]
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 242,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait before checking for updated records.Type: longDefault: 15000Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 242
      },
      "default": "15000valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 243,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,10]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 243
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,10]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "10"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 244,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,3600000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 244
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,3600000]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "3600000"
      ]
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 245,
      "display_name": "oauth2.client.id",
      "documentation": "The client ID used when fetching OAuth2 token from the Marketo server instance.Type: stringValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 245
      }
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 246,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching the OAuth2 token.Type: passwordValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 246
      }
    },
    {
      "name": "https.ssl.enabled",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 247,
      "display_name": "https.ssl.enabled",
      "documentation": "Indicates whether or not to connect to the endpoint using SSL.Type: booleanDefault: falseImportance: highDependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 247
      },
      "default": "falseimportance: highdependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "dependents": [
        "https.ssl.protocol",
        "https.ssl.provider",
        "https.ssl.cipher.suites",
        "https.ssl.enabled.protocols",
        "https.ssl.keystore.type",
        "https.ssl.keystore.location",
        "https.ssl.keystore.password",
        "https.ssl.key.password",
        "https.ssl.truststore.type",
        "https.ssl.truststore.location",
        "https.ssl.truststore.password",
        "https.ssl.keymanager.algorithm",
        "https.ssl.trustmanager.algorithm",
        "https.ssl.endpoint.identification.algorithm",
        "https.ssl.secure.random.implementation"
      ]
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 248,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. The default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are: TLS, TLSv1.1, and TLSv1.2. SSL, SSLv2, and SSLv3 may be supported in older JVMs, but their use is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 248
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 249,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 249
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 250,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 250
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 251,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 251
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 252,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for the client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 252
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 253,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 253
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 254,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed ifssl.keystore.locationis configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 254
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 255,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 255
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 256,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 256
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 257,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 257
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 258,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 258
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 259,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. The default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 259
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 260,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. The default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: PKIXImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 260
      },
      "default": "pkiximportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 261,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate the server hostname using a server certificate.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 261
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 262,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 262
      },
      "default": "nullimportance: low"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 263,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 263
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 264,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6,65535]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 264
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6,65535]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "65535"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 265,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 265
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 266,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 266
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 267,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 267
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 268,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 268
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 269,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 269
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 270,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 270
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 271,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 271
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 272,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 272
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 273,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 273
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "marketo.url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 274,
      "display_name": "marketo.url",
      "documentation": "Marketo server hostname/URL to which the Kafka source connector connects.Type: stringValid Values: URI with one of these schemes: \u00e2\u0080\u0098http\u00e2\u0080\u0099, \u00e2\u0080\u0098https\u00e2\u0080\u0099Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 274
      }
    },
    {
      "name": "entity.names",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 275,
      "display_name": "entity.names",
      "documentation": "The Marketo entities that are to be exported from Marketo and written to Kafka.Type: listValid Values: one of [leads, programs, staticLists, campaigns, activities_<activityType>]. Here, activities can be listed asactivities_add_to_nurture, activities_add_to_opportunity, etc.Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 275
      }
    },
    {
      "name": "marketo.since",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 276,
      "display_name": "marketo.since",
      "documentation": "ISO 8601 format of the starting time from whence the data should be exported to Kafka topics; only used during the first run of a connector. Any eventual restart of the connector would use the committed entity offset, if any. The datetime can include the offset but not the time zone (Refer toMarketo Field typesfor the datetime format.)Type: stringDefault: If the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. It will fetch the records updated and created from the time connector starts.Valid Values: either blank, or timestamp in one of these formats:YYYY-MM-DD,YYYY-MM-DD'T'hh:mm:ss,YYYY-MM-DD'T'hh:mm:ssTZD`(whereTZDis``+hh:mmor-hh:mm).Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 276
      },
      "default": "if the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. it will fetch the records updated and created from the time connector starts.valid values: either blank, or timestamp in one of these formats:yyyy-mm-dd,yyyy-mm-dd't'hh:mm:ss,yyyy-mm-dd't'hh:mm:sstzd`(wheretzdis``+hh:mmor-hh:mm).importance: medium"
    },
    {
      "name": "topic.name.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 277,
      "display_name": "topic.name.pattern",
      "documentation": "The pattern to use for the topic name, where the${entityName}literal will be replaced with each entity name. For example, a value such asmarketo_topic_${entityName}with tablesleadsandcampaignswould create two topicsmarketo_topic_leadsandmarketo_topic_campaigns, and ensure that tableleadsis exported to topicmarketo_topic_leads, etc. Further, if theentity.namesconfig contains any activities entities likeactivities_add_to_nurture, oractivities_add_to_opportunity,  then all such entities are grouped into a single topicmarketo_topic_activitiesfrom the previous example. For all the activities entities, Kafka records will be directed to a single topic where${entityName}is populated toactivities.Type: stringDefault: ${entityName}Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 277
      },
      "default": "${entityname}importance: high"
    },
    {
      "name": "max.batch.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 278,
      "display_name": "max.batch.size",
      "documentation": "The maximum number of records that should be returned and written to Kafka at once.Type: intDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 278
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.in.flight.requests",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 279,
      "display_name": "max.in.flight.requests",
      "documentation": "The maximum number of requests that may be in-flight at once.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,200]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 279
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,200]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "200"
      ]
    },
    {
      "name": "max.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 280,
      "display_name": "max.poll.interval.ms",
      "documentation": "The time in milliseconds to wait while polling for a full batch of records.Type: longDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,300000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 280
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,300000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "300000"
      ]
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 281,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait before checking for updated records.Type: longDefault: 15000Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 281
      },
      "default": "15000valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 282,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,10]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 282
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,10]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "10"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 283,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,3600000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 283
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,3600000]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "3600000"
      ]
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 284,
      "display_name": "oauth2.client.id",
      "documentation": "The client ID used when fetching OAuth2 token from the Marketo server instance.Type: stringValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 284
      }
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 285,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching the OAuth2 token.Type: passwordValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 285
      }
    },
    {
      "name": "https.ssl.enabled",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 286,
      "display_name": "https.ssl.enabled",
      "documentation": "Indicates whether or not to connect to the endpoint using SSL.Type: booleanDefault: falseImportance: highDependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 286
      },
      "default": "falseimportance: highdependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "dependents": [
        "https.ssl.protocol",
        "https.ssl.provider",
        "https.ssl.cipher.suites",
        "https.ssl.enabled.protocols",
        "https.ssl.keystore.type",
        "https.ssl.keystore.location",
        "https.ssl.keystore.password",
        "https.ssl.key.password",
        "https.ssl.truststore.type",
        "https.ssl.truststore.location",
        "https.ssl.truststore.password",
        "https.ssl.keymanager.algorithm",
        "https.ssl.trustmanager.algorithm",
        "https.ssl.endpoint.identification.algorithm",
        "https.ssl.secure.random.implementation"
      ]
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 287,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. The default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are: TLS, TLSv1.1, and TLSv1.2. SSL, SSLv2, and SSLv3 may be supported in older JVMs, but their use is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 287
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 288,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 288
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 289,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 289
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 290,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 290
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 291,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for the client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 291
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 292,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 292
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 293,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed ifssl.keystore.locationis configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 293
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 294,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 294
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 295,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 295
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 296,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 296
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 297,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 297
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 298,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. The default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 298
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 299,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. The default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: PKIXImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 299
      },
      "default": "pkiximportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 300,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate the server hostname using a server certificate.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 300
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 301,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 301
      },
      "default": "nullimportance: low"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 302,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 302
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 303,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6,65535]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 303
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6,65535]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "65535"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 304,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 304
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 305,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 305
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 306,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 306
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 307,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 307
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 308,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 308
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 309,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 309
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 310,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 310
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 311,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 311
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 312,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 312
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "marketo.url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 313,
      "display_name": "marketo.url",
      "documentation": "Marketo server hostname/URL to which the Kafka source connector connects.Type: stringValid Values: URI with one of these schemes: \u00e2\u0080\u0098http\u00e2\u0080\u0099, \u00e2\u0080\u0098https\u00e2\u0080\u0099Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 313
      }
    },
    {
      "name": "entity.names",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 314,
      "display_name": "entity.names",
      "documentation": "The Marketo entities that are to be exported from Marketo and written to Kafka.Type: listValid Values: one of [leads, programs, staticLists, campaigns, activities_<activityType>]. Here, activities can be listed asactivities_add_to_nurture, activities_add_to_opportunity, etc.Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 314
      }
    },
    {
      "name": "marketo.since",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 315,
      "display_name": "marketo.since",
      "documentation": "ISO 8601 format of the starting time from whence the data should be exported to Kafka topics; only used during the first run of a connector. Any eventual restart of the connector would use the committed entity offset, if any. The datetime can include the offset but not the time zone (Refer toMarketo Field typesfor the datetime format.)Type: stringDefault: If the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. It will fetch the records updated and created from the time connector starts.Valid Values: either blank, or timestamp in one of these formats:YYYY-MM-DD,YYYY-MM-DD'T'hh:mm:ss,YYYY-MM-DD'T'hh:mm:ssTZD`(whereTZDis``+hh:mmor-hh:mm).Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 315
      },
      "default": "if the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. it will fetch the records updated and created from the time connector starts.valid values: either blank, or timestamp in one of these formats:yyyy-mm-dd,yyyy-mm-dd't'hh:mm:ss,yyyy-mm-dd't'hh:mm:sstzd`(wheretzdis``+hh:mmor-hh:mm).importance: medium"
    },
    {
      "name": "topic.name.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 316,
      "display_name": "topic.name.pattern",
      "documentation": "The pattern to use for the topic name, where the${entityName}literal will be replaced with each entity name. For example, a value such asmarketo_topic_${entityName}with tablesleadsandcampaignswould create two topicsmarketo_topic_leadsandmarketo_topic_campaigns, and ensure that tableleadsis exported to topicmarketo_topic_leads, etc. Further, if theentity.namesconfig contains any activities entities likeactivities_add_to_nurture, oractivities_add_to_opportunity,  then all such entities are grouped into a single topicmarketo_topic_activitiesfrom the previous example. For all the activities entities, Kafka records will be directed to a single topic where${entityName}is populated toactivities.Type: stringDefault: ${entityName}Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 316
      },
      "default": "${entityname}importance: high"
    },
    {
      "name": "max.batch.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 317,
      "display_name": "max.batch.size",
      "documentation": "The maximum number of records that should be returned and written to Kafka at once.Type: intDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 317
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.in.flight.requests",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 318,
      "display_name": "max.in.flight.requests",
      "documentation": "The maximum number of requests that may be in-flight at once.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,200]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 318
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,200]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "200"
      ]
    },
    {
      "name": "max.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 319,
      "display_name": "max.poll.interval.ms",
      "documentation": "The time in milliseconds to wait while polling for a full batch of records.Type: longDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,300000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 319
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,300000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "300000"
      ]
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 320,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait before checking for updated records.Type: longDefault: 15000Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 320
      },
      "default": "15000valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 321,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,10]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 321
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,10]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "10"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 322,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,3600000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 322
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,3600000]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "3600000"
      ]
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 323,
      "display_name": "oauth2.client.id",
      "documentation": "The client ID used when fetching OAuth2 token from the Marketo server instance.Type: stringValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 323
      }
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 324,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching the OAuth2 token.Type: passwordValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 324
      }
    },
    {
      "name": "https.ssl.enabled",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 325,
      "display_name": "https.ssl.enabled",
      "documentation": "Indicates whether or not to connect to the endpoint using SSL.Type: booleanDefault: falseImportance: highDependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 325
      },
      "default": "falseimportance: highdependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "dependents": [
        "https.ssl.protocol",
        "https.ssl.provider",
        "https.ssl.cipher.suites",
        "https.ssl.enabled.protocols",
        "https.ssl.keystore.type",
        "https.ssl.keystore.location",
        "https.ssl.keystore.password",
        "https.ssl.key.password",
        "https.ssl.truststore.type",
        "https.ssl.truststore.location",
        "https.ssl.truststore.password",
        "https.ssl.keymanager.algorithm",
        "https.ssl.trustmanager.algorithm",
        "https.ssl.endpoint.identification.algorithm",
        "https.ssl.secure.random.implementation"
      ]
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 326,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. The default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are: TLS, TLSv1.1, and TLSv1.2. SSL, SSLv2, and SSLv3 may be supported in older JVMs, but their use is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 326
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 327,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 327
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 328,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 328
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 329,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 329
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 330,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for the client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 330
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 331,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 331
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 332,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed ifssl.keystore.locationis configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 332
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 333,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 333
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 334,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 334
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 335,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 335
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 336,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 336
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 337,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. The default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 337
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 338,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. The default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: PKIXImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 338
      },
      "default": "pkiximportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 339,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate the server hostname using a server certificate.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 339
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "Marketo",
      "order_in_group": 340,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 340
      },
      "default": "nullimportance: low"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 341,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 341
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 342,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6,65535]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 342
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6,65535]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "65535"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 343,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 343
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 344,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 344
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 345,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 345
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 346,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 346
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 347,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 347
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 348,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 348
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 349,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 349
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 350,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 350
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 351,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 351
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "marketo.url",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 352,
      "display_name": "marketo.url",
      "documentation": "Marketo server hostname/URL to which the Kafka source connector connects.Type: stringValid Values: URI with one of these schemes: \u00e2\u0080\u0098http\u00e2\u0080\u0099, \u00e2\u0080\u0098https\u00e2\u0080\u0099Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 352
      }
    },
    {
      "name": "entity.names",
      "type": "LISTVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Marketo",
      "order_in_group": 353,
      "display_name": "entity.names",
      "documentation": "The Marketo entities that are to be exported from Marketo and written to Kafka.Type: listValid Values: one of [leads, programs, staticLists, campaigns, activities_<activityType>]. Here, activities can be listed asactivities_add_to_nurture, activities_add_to_opportunity, etc.Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 353
      }
    },
    {
      "name": "marketo.since",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Marketo",
      "order_in_group": 354,
      "display_name": "marketo.since",
      "documentation": "ISO 8601 format of the starting time from whence the data should be exported to Kafka topics; only used during the first run of a connector. Any eventual restart of the connector would use the committed entity offset, if any. The datetime can include the offset but not the time zone (Refer toMarketo Field typesfor the datetime format.)Type: stringDefault: If the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. It will fetch the records updated and created from the time connector starts.Valid Values: either blank, or timestamp in one of these formats:YYYY-MM-DD,YYYY-MM-DD'T'hh:mm:ss,YYYY-MM-DD'T'hh:mm:ssTZD`(whereTZDis``+hh:mmor-hh:mm).Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 354
      },
      "default": "if the start datetime isn\u00e2\u0080\u0099t provided, then the current datetime when connector is started will be used as a default value. it will fetch the records updated and created from the time connector starts.valid values: either blank, or timestamp in one of these formats:yyyy-mm-dd,yyyy-mm-dd't'hh:mm:ss,yyyy-mm-dd't'hh:mm:sstzd`(wheretzdis``+hh:mmor-hh:mm).importance: medium"
    },
    {
      "name": "topic.name.pattern",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Topics",
      "order_in_group": 355,
      "display_name": "topic.name.pattern",
      "documentation": "The pattern to use for the topic name, where the${entityName}literal will be replaced with each entity name. For example, a value such asmarketo_topic_${entityName}with tablesleadsandcampaignswould create two topicsmarketo_topic_leadsandmarketo_topic_campaigns, and ensure that tableleadsis exported to topicmarketo_topic_leads, etc. Further, if theentity.namesconfig contains any activities entities likeactivities_add_to_nurture, oractivities_add_to_opportunity,  then all such entities are grouped into a single topicmarketo_topic_activitiesfrom the previous example. For all the activities entities, Kafka records will be directed to a single topic where${entityName}is populated toactivities.Type: stringDefault: ${entityName}Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 355
      },
      "default": "${entityname}importance: high"
    },
    {
      "name": "max.batch.size",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Limits",
      "order_in_group": 356,
      "display_name": "max.batch.size",
      "documentation": "The maximum number of records that should be returned and written to Kafka at once.Type: intDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 356
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.in.flight.requests",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Limits",
      "order_in_group": 357,
      "display_name": "max.in.flight.requests",
      "documentation": "The maximum number of requests that may be in-flight at once.Type: intDefault: 10Valid Values: [1,\u00e2\u0080\u00a6,200]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 357
      },
      "default": "10valid values: [1,\u00e2\u0080\u00a6,200]importance: high",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "200"
      ]
    },
    {
      "name": "max.poll.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Limits",
      "order_in_group": 358,
      "display_name": "max.poll.interval.ms",
      "documentation": "The time in milliseconds to wait while polling for a full batch of records.Type: longDefault: 100Valid Values: [1,\u00e2\u0080\u00a6,300000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 358
      },
      "default": "100valid values: [1,\u00e2\u0080\u00a6,300000]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "300000"
      ]
    },
    {
      "name": "request.interval.ms",
      "type": "LONGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Limits",
      "order_in_group": 359,
      "display_name": "request.interval.ms",
      "documentation": "The time in milliseconds to wait before checking for updated records.Type: longDefault: 15000Valid Values: [1,\u00e2\u0080\u00a6,2147483647]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 359
      },
      "default": "15000valid values: [1,\u00e2\u0080\u00a6,2147483647]importance: medium",
      "valid_values": [
        "1",
        "\u00e2\u0080\u00a6",
        "2147483647"
      ]
    },
    {
      "name": "max.retries",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Retries",
      "order_in_group": 360,
      "display_name": "max.retries",
      "documentation": "The maximum number of times to retry on errors before failing the task.Type: intDefault: 10Valid Values: [0,\u00e2\u0080\u00a6,10]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 360
      },
      "default": "10valid values: [0,\u00e2\u0080\u00a6,10]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "10"
      ]
    },
    {
      "name": "retry.backoff.ms",
      "type": "INTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Retries",
      "order_in_group": 361,
      "display_name": "retry.backoff.ms",
      "documentation": "The time in milliseconds to wait following an error before a retry attempt is made.Type: intDefault: 3000Valid Values: [0,\u00e2\u0080\u00a6,3600000]Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 361
      },
      "default": "3000valid values: [0,\u00e2\u0080\u00a6,3600000]importance: medium",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "3600000"
      ]
    },
    {
      "name": "oauth2.client.id",
      "type": "STRINGVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Authorization",
      "order_in_group": 362,
      "display_name": "oauth2.client.id",
      "documentation": "The client ID used when fetching OAuth2 token from the Marketo server instance.Type: stringValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 362
      }
    },
    {
      "name": "oauth2.client.secret",
      "type": "PASSWORDVALID",
      "required": true,
      "importance": "HIGH",
      "group": "Authorization",
      "order_in_group": 363,
      "display_name": "oauth2.client.secret",
      "documentation": "The secret used when fetching the OAuth2 token.Type: passwordValid Values: non-null stringImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 363
      }
    },
    {
      "name": "https.ssl.enabled",
      "type": "BOOLEANDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "SSL",
      "order_in_group": 364,
      "display_name": "https.ssl.enabled",
      "documentation": "Indicates whether or not to connect to the endpoint using SSL.Type: booleanDefault: falseImportance: highDependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 364
      },
      "default": "falseimportance: highdependents:https.ssl.protocol,https.ssl.provider,https.ssl.cipher.suites,https.ssl.enabled.protocols,https.ssl.keystore.type,https.ssl.keystore.location,https.ssl.keystore.password,https.ssl.key.password,https.ssl.truststore.type,https.ssl.truststore.location,https.ssl.truststore.password,https.ssl.keymanager.algorithm,https.ssl.trustmanager.algorithm,https.ssl.endpoint.identification.algorithm,https.ssl.secure.random.implementation",
      "dependents": [
        "https.ssl.protocol",
        "https.ssl.provider",
        "https.ssl.cipher.suites",
        "https.ssl.enabled.protocols",
        "https.ssl.keystore.type",
        "https.ssl.keystore.location",
        "https.ssl.keystore.password",
        "https.ssl.key.password",
        "https.ssl.truststore.type",
        "https.ssl.truststore.location",
        "https.ssl.truststore.password",
        "https.ssl.keymanager.algorithm",
        "https.ssl.trustmanager.algorithm",
        "https.ssl.endpoint.identification.algorithm",
        "https.ssl.secure.random.implementation"
      ]
    },
    {
      "name": "https.ssl.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "SSL",
      "order_in_group": 365,
      "display_name": "https.ssl.protocol",
      "documentation": "The SSL protocol used to generate the SSLContext. The default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are: TLS, TLSv1.1, and TLSv1.2. SSL, SSLv2, and SSLv3 may be supported in older JVMs, but their use is discouraged due to known security vulnerabilities.Type: stringDefault: TLSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 365
      },
      "default": "tlsimportance: medium"
    },
    {
      "name": "https.ssl.provider",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "SSL",
      "order_in_group": 366,
      "display_name": "https.ssl.provider",
      "documentation": "The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.Type: stringDefault: nullImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 366
      },
      "default": "nullimportance: medium"
    },
    {
      "name": "https.ssl.cipher.suites",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "SSL",
      "order_in_group": 367,
      "display_name": "https.ssl.cipher.suites",
      "documentation": "A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.Type: listDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 367
      },
      "default": "nullimportance: low"
    },
    {
      "name": "https.ssl.enabled.protocols",
      "type": "LISTDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "SSL",
      "order_in_group": 368,
      "display_name": "https.ssl.enabled.protocols",
      "documentation": "The list of protocols enabled for SSL connections.Type: listDefault: TLSv1.2,TLSv1.1,TLSv1Importance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 368
      },
      "default": "tlsv1.2,tlsv1.1,tlsv1importance: medium"
    },
    {
      "name": "https.ssl.keystore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "SSL",
      "order_in_group": 369,
      "display_name": "https.ssl.keystore.type",
      "documentation": "The file format of the key store file. This is optional for the client.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 369
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "SSL",
      "order_in_group": 370,
      "display_name": "https.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 370
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "SSL",
      "order_in_group": 371,
      "display_name": "https.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed ifssl.keystore.locationis configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 371
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "SSL",
      "order_in_group": 372,
      "display_name": "https.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 372
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.type",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "SSL",
      "order_in_group": 373,
      "display_name": "https.ssl.truststore.type",
      "documentation": "The file format of the trust store file.Type: stringDefault: JKSImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 373
      },
      "default": "jksimportance: medium"
    },
    {
      "name": "https.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "SSL",
      "order_in_group": 374,
      "display_name": "https.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 374
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "SSL",
      "order_in_group": 375,
      "display_name": "https.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but integrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 375
      },
      "default": "nullimportance: high"
    },
    {
      "name": "https.ssl.keymanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "SSL",
      "order_in_group": 376,
      "display_name": "https.ssl.keymanager.algorithm",
      "documentation": "The algorithm used by key manager factory for SSL connections. The default value is the key manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: SunX509Importance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 376
      },
      "default": "sunx509importance: low"
    },
    {
      "name": "https.ssl.trustmanager.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "SSL",
      "order_in_group": 377,
      "display_name": "https.ssl.trustmanager.algorithm",
      "documentation": "The algorithm used by trust manager factory for SSL connections. The default value is the trust manager factory algorithm configured for the Java Virtual Machine.Type: stringDefault: PKIXImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 377
      },
      "default": "pkiximportance: low"
    },
    {
      "name": "https.ssl.endpoint.identification.algorithm",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "SSL",
      "order_in_group": 378,
      "display_name": "https.ssl.endpoint.identification.algorithm",
      "documentation": "The endpoint identification algorithm to validate the server hostname using a server certificate.Type: stringDefault: httpsImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 378
      },
      "default": "httpsimportance: low"
    },
    {
      "name": "https.ssl.secure.random.implementation",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "LOW",
      "group": "SSL",
      "order_in_group": 379,
      "display_name": "https.ssl.secure.random.implementation",
      "documentation": "The SecureRandom PRNG implementation to use for SSL cryptography operations.Type: stringDefault: nullImportance: low",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 379
      },
      "default": "nullimportance: low"
    },
    {
      "name": "http.proxy.host",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Proxy",
      "order_in_group": 380,
      "display_name": "http.proxy.host",
      "documentation": "The host or IP of the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 380
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.port",
      "type": "INTDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Proxy",
      "order_in_group": 381,
      "display_name": "http.proxy.port",
      "documentation": "The port number of the HTTP proxy.Type: intDefault: 0Valid Values: [0,\u00e2\u0080\u00a6,65535]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 381
      },
      "default": "0valid values: [0,\u00e2\u0080\u00a6,65535]importance: high",
      "valid_values": [
        "0",
        "\u00e2\u0080\u00a6",
        "65535"
      ]
    },
    {
      "name": "http.proxy.user",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Proxy",
      "order_in_group": 382,
      "display_name": "http.proxy.user",
      "documentation": "The username to be used when authenticating with the HTTP proxy.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 382
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dimportance: high"
    },
    {
      "name": "http.proxy.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Proxy",
      "order_in_group": 383,
      "display_name": "http.proxy.password",
      "documentation": "The password to be used when authenticating with the HTTP proxy.Type: passwordDefault: [hidden]Importance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 383
      },
      "default": "[hidden]importance: high"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 384,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 384
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 385,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 385
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 386,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 386
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 387,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 387
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 388,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 388
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent Platform license",
      "order_in_group": 389,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 389
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Confluent Platform license",
      "order_in_group": 390,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 390
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "confluent.license",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 391,
      "display_name": "confluent.license",
      "documentation": "Confluent issues enterprise license keys to each subscriber. The license key is text that you can copy and\npaste as the value forconfluent.license. A trial license allows using the connector for a 30-day trial period. A developer license allows using the connector indefinitely for single-broker development environments.If you are a subscriber, contact Confluent Support for more information.Type: stringDefault: \u00e2\u0080\u009c\u00e2\u0080\u009dValid Values: Confluent Platform licenseImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 391
      },
      "default": "\u00e2\u0080\u009c\u00e2\u0080\u009dvalid values: confluent platform licenseimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 392,
      "display_name": "confluent.topic.ssl.truststore.location",
      "documentation": "The location of the trust store file.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 392
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.truststore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 393,
      "display_name": "confluent.topic.ssl.truststore.password",
      "documentation": "The password for the trust store file. If a password is not set access to the truststore is still available, but\nintegrity checking is disabled.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 393
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.location",
      "type": "STRINGDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 394,
      "display_name": "confluent.topic.ssl.keystore.location",
      "documentation": "The location of the key store file. This is optional for client and can be used for two-way authentication for client.Type: stringDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 394
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.keystore.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 395,
      "display_name": "confluent.topic.ssl.keystore.password",
      "documentation": "The store password for the key store file. This is optional for client and only needed if ssl.keystore.location is configured.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 395
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.ssl.key.password",
      "type": "PASSWORDDEFAULT",
      "required": true,
      "importance": "HIGH",
      "group": "Confluent license properties",
      "order_in_group": 396,
      "display_name": "confluent.topic.ssl.key.password",
      "documentation": "The password of the private key in the key store file. This is optional for client.Type: passwordDefault: nullImportance: high",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 396
      },
      "default": "nullimportance: high"
    },
    {
      "name": "confluent.topic.security.protocol",
      "type": "STRINGDEFAULT",
      "required": false,
      "importance": "MEDIUM",
      "group": "Confluent license properties",
      "order_in_group": 397,
      "display_name": "confluent.topic.security.protocol",
      "documentation": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.Type: stringDefault: \u00e2\u0080\u009cPLAINTEXT\u00e2\u0080\u009dImportance: medium",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 397
      },
      "default": "\u00e2\u0080\u009cplaintext\u00e2\u0080\u009dimportance: medium"
    },
    {
      "name": "Search by configuration property name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "Search by configuration property name",
      "documentation": "Enter a string to search and filter by configuration property name.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "name",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 2,
      "display_name": "name",
      "documentation": "Globally unique name to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 2
      }
    },
    {
      "name": "connector.class",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 3,
      "display_name": "connector.class",
      "documentation": "Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \u00e2\u0080\u009cFileStreamSink\u00e2\u0080\u009d or \u00e2\u0080\u009cFileStreamSinkConnector\u00e2\u0080\u009d to make the configuration a bit shorter",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 3
      }
    },
    {
      "name": "tasks.max",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 4,
      "display_name": "tasks.max",
      "documentation": "Maximum number of tasks to use for this connector.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 4
      }
    },
    {
      "name": "tasks.max.enforce",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 5,
      "display_name": "tasks.max.enforce",
      "documentation": "(Deprecated) Whether to enforce that the tasks.max property is respected by the connector. By default, connectors that generate too many tasks will fail, and existing sets of tasks that exceed the tasks.max property will also be failed. If this property is set to false, then connectors will be allowed to generate more than the maximum number of tasks, and existing sets of tasks that exceed the tasks.max property will be allowed to run. This property is deprecated and will be removed in an upcoming major release.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 5
      }
    },
    {
      "name": "key.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 6,
      "display_name": "key.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 6
      }
    },
    {
      "name": "value.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 7,
      "display_name": "value.converter",
      "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 7
      }
    },
    {
      "name": "header.converter",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 8,
      "display_name": "header.converter",
      "documentation": "HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 8
      }
    },
    {
      "name": "config.action.reload",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 9,
      "display_name": "config.action.reload",
      "documentation": "The action that Connect should take on the connector when changes in external configuration providers result in a change in the connector\u00e2\u0080\u0099s configuration properties. A value of \u00e2\u0080\u0098none\u00e2\u0080\u0099 indicates that Connect will do nothing. A value of \u00e2\u0080\u0098restart\u00e2\u0080\u0099 indicates that Connect should restart/reload the connector with the updated configuration properties.The restart may actually be scheduled in the future if the external configuration provider indicates that a configuration value will expire in the future.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 9
      }
    },
    {
      "name": "transforms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 10,
      "display_name": "transforms",
      "documentation": "Aliases for the transformations to be applied to records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 10
      }
    },
    {
      "name": "predicates",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 11,
      "display_name": "predicates",
      "documentation": "Aliases for the predicates used by transformations.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 11
      }
    },
    {
      "name": "errors.retry.timeout",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 12,
      "display_name": "errors.retry.timeout",
      "documentation": "The maximum duration in milliseconds that a failed operation will be reattempted. The default is 0, which means no retries will be attempted. Use -1 for infinite retries.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 12
      }
    },
    {
      "name": "errors.retry.delay.max.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 13,
      "display_name": "errors.retry.delay.max.ms",
      "documentation": "The maximum duration in milliseconds between consecutive retry attempts. Jitter will be added to the delay once this limit is reached to prevent thundering herd issues.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 13
      }
    },
    {
      "name": "errors.tolerance",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 14,
      "display_name": "errors.tolerance",
      "documentation": "Behavior for tolerating errors during connector operation. \u00e2\u0080\u0098none\u00e2\u0080\u0099 is the default value and signals that any error will result in an immediate connector task failure; \u00e2\u0080\u0098all\u00e2\u0080\u0099 changes the behavior to skip over problematic records.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 14
      }
    },
    {
      "name": "errors.log.enable",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 15,
      "display_name": "errors.log.enable",
      "documentation": "If true, write each error and the details of the failed operation and problematic record to the Connect application log. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, so that only errors that are not tolerated are reported.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 15
      }
    },
    {
      "name": "errors.log.include.messages",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 16,
      "display_name": "errors.log.include.messages",
      "documentation": "Whether to include in the log the Connect record that resulted in a failure. For sink records, the topic, partition, offset, and timestamp will be logged. For source records, the key and value (and their schemas), all headers, and the timestamp, Kafka topic, Kafka partition, source partition, and source offset will be logged. This is \u00e2\u0080\u0098false\u00e2\u0080\u0099 by default, which will prevent record keys, values, and headers from being written to log files.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 16
      }
    },
    {
      "name": "topic.creation.groups",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 17,
      "display_name": "topic.creation.groups",
      "documentation": "Groups of configurations for topics created by source connectors",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 17
      }
    },
    {
      "name": "exactly.once.support",
      "type": "STRING",
      "required": true,
      "importance": "HIGH",
      "group": "Common",
      "order_in_group": 18,
      "display_name": "exactly.once.support",
      "documentation": "Permitted values are requested, required. If set to \u00e2\u0080\u009crequired\u00e2\u0080\u009d, forces a preflight check for the connector to ensure that it can provide exactly-once semantics with the given configuration. Some connectors may be capable of providing exactly-once semantics but not signal to Connect that they support this; in that case, documentation for the connector should be consulted carefully before creating it, and the value for this property should be set to \u00e2\u0080\u009crequested\u00e2\u0080\u009d. Additionally, if the value is set to \u00e2\u0080\u009crequired\u00e2\u0080\u009d but the worker that performs preflight validation does not have exactly-once support enabled for source connectors, requests to create or validate the connector will fail.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 18
      }
    },
    {
      "name": "transaction.boundary",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 19,
      "display_name": "transaction.boundary",
      "documentation": "Permitted values are: poll, interval, connector. If set to \u00e2\u0080\u0098poll\u00e2\u0080\u0099, a new producer transaction will be started and committed for every batch of records that each task from this connector provides to Connect. If set to \u00e2\u0080\u0098connector\u00e2\u0080\u0099, relies on connector-defined transaction boundaries; note that not all connectors are capable of defining their own transaction boundaries, and in that case, attempts to instantiate a connector with this value will fail. Finally, if set to \u00e2\u0080\u0098interval\u00e2\u0080\u0099, commits transactions only after a user-defined time interval has passed.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 19
      }
    },
    {
      "name": "transaction.boundary.interval.ms",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 20,
      "display_name": "transaction.boundary.interval.ms",
      "documentation": "If \u00e2\u0080\u0098transaction.boundary\u00e2\u0080\u0099 is set to \u00e2\u0080\u0098interval\u00e2\u0080\u0099, determines the interval for producer transaction commits by connector tasks. If unset, defaults to the value of the worker-level \u00e2\u0080\u0098offset.flush.interval.ms\u00e2\u0080\u0099 property. It has no effect if a different transaction.boundary is specified.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 20
      }
    },
    {
      "name": "offsets.storage.topic",
      "type": "STRING",
      "required": false,
      "importance": "MEDIUM",
      "group": "Common",
      "order_in_group": 21,
      "display_name": "offsets.storage.topic",
      "documentation": "The name of a separate offsets topic to use for this connector. If empty or not specified, the worker\u00e2\u0080\u0099s global offsets topic name will be used. If specified, the offsets topic will be created if it does not already exist on the Kafka cluster targeted by this connector (which may be different from the one used for the worker\u00e2\u0080\u0099s global offsets topic if the bootstrap.servers property of the connector\u00e2\u0080\u0099s producer has been overridden from the worker\u00e2\u0080\u0099s). Only applicable in distributed mode; in standalone mode, setting this property will have no effect.",
      "validators": [],
      "sanitizers": [],
      "metadata": {
        "page": "CONFIGURATION",
        "order_in_page": 21
      }
    }
  ]
}