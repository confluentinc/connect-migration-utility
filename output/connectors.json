[
  {
    "name": "DatadogMetricsSinkConnector_87",
    "config": {
      "topics": "nidhi_topic",
      "input.data.format": "JSON",
      "connector.class": "io.confluent.connect.datadog.metrics.DatadogMetricsSinkConnector",
      "name": "DatadogMetricsSinkConnector_87",
      "datadog.api.key": "535069c094cdfd1a55fb3e80eba09241",
      "datadog.site": "US1",
      "datadog.domain": "COM",
      "max.retry.time.ms": "5000",
      "behavior.on.error": "log",
      "max.poll.interval.ms": "300000",
      "max.poll.records": "500",
      "tasks.max": "1",
      "errors.tolerance": "all",
      "errors.deadletterqueue.context.headers.enable": "true",
      "errors.log.include.messages": "true",
      "errors.log.enable": "true",
      "reporter.bootstrap.servers": "localhost:9092",
      "reporter.error.topic.replication.factor": "1",
      "confluent.topic.bootstrap.servers": "localhost:9092",
      "confluent.topic.replication.factor": "1"
    }
  },
  {
    "name": "DatadogMetricsSinkConnector_89",
    "config": {
      "topics": "nidhi_topic",
      "input.data.format": "JSON",
      "connector.class": "io.confluent.connect.datadog.metrics.DatadogMetricsSinkConnector",
      "name": "DatadogMetricsSinkConnector_89",
      "datadog.api.key": "535069c094cdfd1a55fb3e80eba09241",
      "datadog.site": "US1",
      "datadog.domain": "COM",
      "max.retry.time.ms": "5000",
      "behavior.on.error": "log",
      "max.poll.interval.ms": "300000",
      "max.poll.records": "500",
      "tasks.max": "1",
      "errors.tolerance": "all",
      "errors.deadletterqueue.context.headers.enable": "true",
      "errors.log.include.messages": "true",
      "errors.log.enable": "true",
      "reporter.bootstrap.servers": "localhost:9092",
      "reporter.error.topic.replication.factor": "1",
      "confluent.topic.bootstrap.servers": "localhost:9092",
      "confluent.topic.replication.factor": "1",
      "transforms": "createKey, extractInt",
      "transforms.createKey.type": "org.apache.kafka.connect.transforms.ValueToKey",
      "transforms.createKey.fields": "id",
      "transforms.extractInt.type": "org.apache.kafka.connect.transforms.ExtractField$Key",
      "transforms.extractInt.field": "id"
    }
  },
  {
    "name": "datagen-product",
    "config": {
      "connector.class": "io.confluent.kafka.connect.datagen.DatagenConnector",
      "kafka.topic": "product",
      "quickstart": "product",
      "key.converter": "org.apache.kafka.connect.storage.StringConverter",
      "value.converter": "org.apache.kafka.connect.json.JsonConverter",
      "value.converter.schemas.enable": "false",
      "max.interval": "1000",
      "iterations": "10000000",
      "tasks.max": "1",
      "name": "datagen-product"
    }
  }
]